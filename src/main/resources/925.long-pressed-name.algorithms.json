{"id":961,"fid":925,"name":"Long Pressed Name","slug":"long-pressed-name","link":"https://leetcode.com/problems/long-pressed-name/description/","percent":44.49782658430565,"level":"Easy","category":"algorithms","totalAC":"5.8K","totalSubmit":"13.1K","desc":"Your friend is typing his name into a keyboard.  Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times.\r\n\r\nYou examine the typed characters of the keyboard.  Return True if it is possible that it was your friends name, with some characters (possibly none) being long pressed.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: name = \"alex\", typed = \"aaleex\"\r\nOutput: true\r\nExplanation: 'a' and 'e' in 'alex' were long pressed.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: name = \"saeed\", typed = \"ssaaedd\"\r\nOutput: false\r\nExplanation: 'e' must have been pressed twice, but it wasn't in the typed output.\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: name = \"leelee\", typed = \"lleeelee\"\r\nOutput: true\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: name = \"laiden\", typed = \"laiden\"\r\nOutput: true\r\nExplanation: It's not necessary to long press any character.\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\tname.length <= 1000\r\n\ttyped.length <= 1000\r\n\tThe characters of name and typed are lowercase letters.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isLongPressedName(string name, string typed) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isLongPressedName(String name, String typed) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isLongPressedName(self, name, typed):\n        \"\"\"\n        :type name: str\n        :type typed: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isLongPressedName(self, name, typed):\n        \"\"\"\n        :type name: str\n        :type typed: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool isLongPressedName(char* name, char* typed) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsLongPressedName(string name, string typed) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} name\n * @param {string} typed\n * @return {boolean}\n */\nvar isLongPressedName = function(name, typed) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} name\n# @param {String} typed\n# @return {Boolean}\ndef is_long_pressed_name(name, typed)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isLongPressedName(_ name: String, _ typed: String) -> Bool {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isLongPressedName(name string, typed string) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isLongPressedName(name: String, typed: String): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isLongPressedName(name: String, typed: String): Boolean {\n        \n    }\n}"}],"testcase":"\"alex\"\n\"aaleex\"","testable":true,"templateMeta":{"name":"isLongPressedName","params":[{"name":"name","type":"string"},{"name":"typed","type":"string"}],"return":{"type":"boolean"}}}
{"id":188,"fid":188,"name":"Best Time to Buy and Sell Stock IV","slug":"best-time-to-buy-and-sell-stock-iv","link":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/description/","percent":25.425066711373766,"level":"Hard","category":"algorithms","totalAC":"72.8K","totalSubmit":"286.3K","desc":"Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete at most k transactions.\r\n\r\nNote:\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\r\n\r\nExample 1:\r\n\r\n\r\nInput: [2,4,1], k = 2\r\nOutput: 2\r\nExplanation: Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [3,2,6,5,0,3], k = 2\r\nOutput: 7\r\nExplanation: Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4.\r\nÂ             Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maxProfit(int k, vector<int>& prices) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int maxProfit(int k, int[] prices) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maxProfit(self, k, prices):\r\n        \"\"\"\r\n        :type k: int\r\n        :type prices: List[int]\r\n        :rtype: int\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def maxProfit(self, k, prices):\r\n        \"\"\"\r\n        :type k: int\r\n        :type prices: List[int]\r\n        :rtype: int\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"int maxProfit(int k, int* prices, int pricesSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaxProfit(int k, int[] prices) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} k\r\n * @param {number[]} prices\r\n * @return {number}\r\n */\r\nvar maxProfit = function(k, prices) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} k\r\n# @param {Integer[]} prices\r\n# @return {Integer}\r\ndef max_profit(k, prices)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maxProfit(_ k: Int, _ prices: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func maxProfit(k int, prices []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def maxProfit(k: Int, prices: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun maxProfit(k: Int, prices: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"2\n[2,4,1]","testable":true,"templateMeta":{"name":"maxProfit","params":[{"name":"k","type":"integer"},{"name":"prices","type":"integer[]"}],"return":{"type":"integer"}}}
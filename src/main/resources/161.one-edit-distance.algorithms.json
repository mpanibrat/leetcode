{"id":161,"fid":161,"name":"One Edit Distance","slug":"one-edit-distance","link":"https://leetcode.com/problems/one-edit-distance/description/","percent":31.25926598287495,"level":"Medium","category":"algorithms","totalAC":"62K","totalSubmit":"198.3K","desc":"Given two strings s and t, determine if they are both one edit distance apart.\r\n\r\nNote: \r\n\r\nThere are 3 possiblities to satisify one edit distance apart:\r\n\r\n\r\n\tInsert a character into s to get t\r\n\tDelete a character from s to get t\r\n\tReplace a character of s to get t\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: s = \"ab\", t = \"acb\"\r\nOutput: true\r\nExplanation: We can insert 'c' into s to get t.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: s = \"cab\", t = \"ad\"\r\nOutput: false\r\nExplanation: We cannot get t from s by only one step.\r\n\r\nExample 3:\r\n\r\n\r\nInput: s = \"1203\", t = \"1213\"\r\nOutput: true\r\nExplanation: We can replace '0' with '1' to get t.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isOneEditDistance(string s, string t) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isOneEditDistance(String s, String t) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isOneEditDistance(self, s, t):\r\n        \"\"\"\r\n        :type s: str\r\n        :type t: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isOneEditDistance(self, s, t):\r\n        \"\"\"\r\n        :type s: str\r\n        :type t: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool isOneEditDistance(char* s, char* t) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsOneEditDistance(string s, string t) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @param {string} t\r\n * @return {boolean}\r\n */\r\nvar isOneEditDistance = function(s, t) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @param {String} t\r\n# @return {Boolean}\r\ndef is_one_edit_distance(s, t)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isOneEditDistance(_ s: String, _ t: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isOneEditDistance(s string, t string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isOneEditDistance(s: String, t: String): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isOneEditDistance(s: String, t: String): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"\"ab\"\n\"acb\"","testable":true,"templateMeta":{"name":"isOneEditDistance","params":[{"name":"s","type":"string"},{"name":"t","type":"string"}],"return":{"type":"boolean"}}}
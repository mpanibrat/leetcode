{"id":229,"fid":229,"name":"Majority Element II","slug":"majority-element-ii","link":"https://leetcode.com/problems/majority-element-ii/description/","percent":30.469539848060315,"level":"Medium","category":"algorithms","totalAC":"84.4K","totalSubmit":"276.9K","desc":"Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.\r\n\r\nNote: The algorithm should run in linear time and in O(1) space.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [3,2,3]\r\nOutput: [3]\r\n\r\nExample 2:\r\n\r\n\r\nInput: [1,1,1,3,3,2,2,2]\r\nOutput: [1,2]\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<int> majorityElement(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public List<Integer> majorityElement(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def majorityElement(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def majorityElement(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nint* majorityElement(int* nums, int numsSize, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public IList<int> MajorityElement(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number[]}\r\n */\r\nvar majorityElement = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer[]}\r\ndef majority_element(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func majorityElement(_ nums: [Int]) -> [Int] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func majorityElement(nums []int) []int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def majorityElement(nums: Array[Int]): List[Int] = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun majorityElement(nums: IntArray): List<Int> {\r\n        \r\n    }\r\n}"}],"testcase":"[3,2,3]","testable":true,"templateMeta":{"name":"majorityElement","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"list<integer>"}}}
{"id":96,"fid":96,"name":"Unique Binary Search Trees","slug":"unique-binary-search-trees","link":"https://leetcode.com/problems/unique-binary-search-trees/description/","percent":43.715740217000054,"level":"Medium","category":"algorithms","totalAC":"170K","totalSubmit":"388.9K","desc":"Given n, how many structurally unique BST's (binary search trees) that store values 1 ...Â n?\r\n\r\nExample:\r\n\r\n\r\nInput: 3\r\nOutput: 5\r\nExplanation:\r\nGiven n = 3, there are a total of 5 unique BST's:\r\n\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int numTrees(int n) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int numTrees(int n) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def numTrees(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def numTrees(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int numTrees(int n) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int NumTrees(int n) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} n\r\n * @return {number}\r\n */\r\nvar numTrees = function(n) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\r\n# @return {Integer}\r\ndef num_trees(n)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numTrees(_ n: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func numTrees(n int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def numTrees(n: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun numTrees(n: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"3","testable":true,"templateMeta":{"name":"numTrees","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}
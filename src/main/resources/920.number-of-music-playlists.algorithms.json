{"id":956,"fid":920,"name":"Number of Music Playlists","slug":"number-of-music-playlists","link":"https://leetcode.com/problems/number-of-music-playlists/description/","percent":40.15309672929715,"level":"Hard","category":"algorithms","totalAC":"1.7K","totalSubmit":"4.3K","desc":"Your music player contains N different songs and she wants to listen to L (not necessarily different) songs during your trip.  You create a playlist so that:\r\n\r\n\r\n\tEvery song is played at least once\r\n\tA song can only be played again only if K other songs have been played\r\n\r\n\r\nReturn the number of possible playlists.  As the answer can be very large, return it modulo 10^9 + 7.\r\n\r\n \r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: N = 3, L = 3, K = 1\r\nOutput: 6\r\nExplanation: There are 6 possible playlists. [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: N = 2, L = 3, K = 0\r\nOutput: 6\r\nExplanation: There are 6 possible playlists. [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], [1, 2, 2]\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: N = 2, L = 3, K = 1\r\nOutput: 2\r\nExplanation: There are 2 possible playlists. [1, 2, 1], [2, 1, 2]\r\n\r\n\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t0 <= K < N <= L <= 100\r\n\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int numMusicPlaylists(int N, int L, int K) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int numMusicPlaylists(int N, int L, int K) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numMusicPlaylists(self, N, L, K):\n        \"\"\"\n        :type N: int\n        :type L: int\n        :type K: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numMusicPlaylists(self, N, L, K):\n        \"\"\"\n        :type N: int\n        :type L: int\n        :type K: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int numMusicPlaylists(int N, int L, int K) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NumMusicPlaylists(int N, int L, int K) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} N\n * @param {number} L\n * @param {number} K\n * @return {number}\n */\nvar numMusicPlaylists = function(N, L, K) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @param {Integer} l\n# @param {Integer} k\n# @return {Integer}\ndef num_music_playlists(n, l, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numMusicPlaylists(_ N: Int, _ L: Int, _ K: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func numMusicPlaylists(N int, L int, K int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numMusicPlaylists(N: Int, L: Int, K: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numMusicPlaylists(N: Int, L: Int, K: Int): Int {\n        \n    }\n}"}],"testcase":"3\n3\n1","testable":true,"templateMeta":{"name":"numMusicPlaylists","params":[{"name":"N","type":"integer"},{"name":"L","type":"integer"},{"name":"K","type":"integer"}],"return":{"type":"integer"}}}
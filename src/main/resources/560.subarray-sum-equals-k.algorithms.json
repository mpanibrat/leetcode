{"id":560,"fid":560,"name":"Subarray Sum Equals K","slug":"subarray-sum-equals-k","link":"https://leetcode.com/problems/subarray-sum-equals-k/description/","percent":40.39283722659396,"level":"Medium","category":"algorithms","totalAC":"58.7K","totalSubmit":"145.3K","desc":"Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.\r\n\r\nExample 1:\r\n\r\nInput:nums = [1,1,1], k = 2\r\nOutput: 2\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the array is in range [1, 20,000].\r\nThe range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int subarraySum(vector<int>& nums, int k) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int subarraySum(int[] nums, int k) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def subarraySum(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def subarraySum(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int subarraySum(int* nums, int numsSize, int k) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int SubarraySum(int[] nums, int k) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar subarraySum = function(nums, k) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef subarray_sum(nums, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func subarraySum(_ nums: [Int], _ k: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func subarraySum(nums []int, k int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def subarraySum(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun subarraySum(nums: IntArray, k: Int): Int {\n        \n    }\n}"}],"testcase":"[1,1,1]\n2","testable":true,"templateMeta":{"name":"subarraySum","params":[{"name":"nums","type":"integer[]"},{"name":"k","type":"integer"}],"return":{"type":"integer"}}}
{"id":800,"fid":784,"name":"Letter Case Permutation","slug":"letter-case-permutation","link":"https://leetcode.com/problems/letter-case-permutation/description/","percent":53.60603000037407,"level":"Easy","category":"algorithms","totalAC":"28.7K","totalSubmit":"53.5K","desc":"Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.\r\n\r\n\r\nExamples:\r\nInput: S = \"a1b2\"\r\nOutput: [\"a1b2\", \"a1B2\", \"A1b2\", \"A1B2\"]\r\n\r\nInput: S = \"3z4\"\r\nOutput: [\"3z4\", \"3Z4\"]\r\n\r\nInput: S = \"12345\"\r\nOutput: [\"12345\"]\r\n\r\n\r\nNote:\r\n\r\n\r\n\tS will be a string with length between 1 and 12.\r\n\tS will consist only of letters or digits.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<string> letterCasePermutation(string S) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public List<String> letterCasePermutation(String S) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def letterCasePermutation(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: List[str]\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def letterCasePermutation(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: List[str]\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"/**\n * Return an array of size *returnSize.\n * Note: The returned array must be malloced, assume caller calls free().\n */\nchar** letterCasePermutation(char* S, int* returnSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public IList<string> LetterCasePermutation(string S) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} S\n * @return {string[]}\n */\nvar letterCasePermutation = function(S) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {String[]}\ndef letter_case_permutation(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func letterCasePermutation(_ S: String) -> [String] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func letterCasePermutation(S string) []string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def letterCasePermutation(S: String): List[String] = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun letterCasePermutation(S: String): List<String> {\n        \n    }\n}"}],"testcase":"\"a1b2\"","testable":true,"templateMeta":{"name":"letterCasePermutation","params":[{"name":"S","type":"string"}],"return":{"type":"list<string>"}}}
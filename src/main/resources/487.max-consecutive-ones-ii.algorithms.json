{"id":487,"fid":487,"name":"Max Consecutive Ones II","slug":"max-consecutive-ones-ii","link":"https://leetcode.com/problems/max-consecutive-ones-ii/description/","percent":45.541453766276575,"level":"Medium","category":"algorithms","totalAC":"19.3K","totalSubmit":"42.5K","desc":"\r\nGiven a binary array, find the maximum number of consecutive 1s in this array if you can flip at most one 0.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,0,1,1,0]\r\nOutput: 4\r\nExplanation: Flip the first zero will get the the maximum number of consecutive 1s.\r\n    After flipping, the maximum number of consecutive 1s is 4.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input array will only contain 0 and 1.\r\nThe length of input array is a positive integer and will not exceed 10,000\r\n\r\n\r\n\r\nFollow up:\r\nWhat if the input numbers come in one by one as an infinite stream? In other words, you can't store all numbers coming from the stream as it's too large to hold in memory. Could you solve it efficiently?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int findMaxConsecutiveOnes(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int findMaxConsecutiveOnes(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def findMaxConsecutiveOnes(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def findMaxConsecutiveOnes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int findMaxConsecutiveOnes(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int FindMaxConsecutiveOnes(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar findMaxConsecutiveOnes = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef find_max_consecutive_ones(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func findMaxConsecutiveOnes(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func findMaxConsecutiveOnes(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def findMaxConsecutiveOnes(nums: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun findMaxConsecutiveOnes(nums: IntArray): Int {\n        \n    }\n}"}],"testcase":"[1,0,1,1,0,1]","testable":true,"templateMeta":{"name":"findMaxConsecutiveOnes","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
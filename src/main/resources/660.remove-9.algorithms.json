{"id":660,"fid":660,"name":"Remove 9","slug":"remove-9","link":"https://leetcode.com/problems/remove-9/description/","percent":50.337950138504155,"level":"Hard","category":"algorithms","totalAC":"4.5K","totalSubmit":"9K","desc":"Start from integer 1, remove any integer that contains 9 such as 9, 19, 29... \r\n\r\nSo now, you will have a new integer sequence: 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, ...\r\n\r\nGiven a positive integer n, you need to return the n-th integer after removing. Note that 1 will be the first integer.\r\n\r\nExample 1:\r\n\r\nInput: 9\r\nOutput: 10\r\n\r\n\r\n\r\n\r\n Hint: n will not exceed 9 x 10^8.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int newInteger(int n) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int newInteger(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def newInteger(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def newInteger(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int newInteger(int n) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NewInteger(int n) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {number}\n */\nvar newInteger = function(n) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Integer}\ndef new_integer(n)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func newInteger(_ n: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func newInteger(n int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def newInteger(n: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun newInteger(n: Int): Int {\n        \n    }\n}"}],"testcase":"10","testable":true,"templateMeta":{"name":"newInteger","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}
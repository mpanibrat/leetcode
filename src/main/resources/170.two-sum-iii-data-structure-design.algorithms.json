{"id":170,"fid":170,"name":"Two Sum III - Data structure design","slug":"two-sum-iii-data-structure-design","link":"https://leetcode.com/problems/two-sum-iii-data-structure-design/description/","percent":28.296225640530295,"level":"Easy","category":"algorithms","totalAC":"46.9K","totalSubmit":"165.6K","desc":"Design and implement a TwoSum class. It should support the following operations: add and find.\r\n\r\nadd - Add the number to an internal data structure.\r\nfind - Find if there exists any pair of numbers which sum is equal to the value.\r\n\r\nExample 1:\r\n\r\n\r\nadd(1); add(3); add(5);\r\nfind(4) -> true\r\nfind(7) -> false\r\n\r\n\r\nExample 2:\r\n\r\n\r\nadd(3); add(1); add(2);\r\nfind(3) -> true\r\nfind(6) -> false\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class TwoSum {\r\npublic:\r\n    /** Initialize your data structure here. */\r\n    TwoSum() {\r\n        \r\n    }\r\n    \r\n    /** Add the number to an internal data structure.. */\r\n    void add(int number) {\r\n        \r\n    }\r\n    \r\n    /** Find if there exists any pair of numbers which sum is equal to the value. */\r\n    bool find(int value) {\r\n        \r\n    }\r\n};\r\n\r\n/**\r\n * Your TwoSum object will be instantiated and called as such:\r\n * TwoSum obj = new TwoSum();\r\n * obj.add(number);\r\n * bool param_2 = obj.find(value);\r\n */"},{"value":"java","text":"Java","defaultCode":"class TwoSum {\r\n\r\n    /** Initialize your data structure here. */\r\n    public TwoSum() {\r\n        \r\n    }\r\n    \r\n    /** Add the number to an internal data structure.. */\r\n    public void add(int number) {\r\n        \r\n    }\r\n    \r\n    /** Find if there exists any pair of numbers which sum is equal to the value. */\r\n    public boolean find(int value) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your TwoSum object will be instantiated and called as such:\r\n * TwoSum obj = new TwoSum();\r\n * obj.add(number);\r\n * boolean param_2 = obj.find(value);\r\n */"},{"value":"python","text":"Python","defaultCode":"class TwoSum(object):\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        Initialize your data structure here.\r\n        \"\"\"\r\n        \r\n\r\n    def add(self, number):\r\n        \"\"\"\r\n        Add the number to an internal data structure..\r\n        :type number: int\r\n        :rtype: void\r\n        \"\"\"\r\n        \r\n\r\n    def find(self, value):\r\n        \"\"\"\r\n        Find if there exists any pair of numbers which sum is equal to the value.\r\n        :type value: int\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your TwoSum object will be instantiated and called as such:\r\n# obj = TwoSum()\r\n# obj.add(number)\r\n# param_2 = obj.find(value)"},{"value":"python3","text":"Python3","defaultCode":"class TwoSum:\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        Initialize your data structure here.\r\n        \"\"\"\r\n        \r\n\r\n    def add(self, number):\r\n        \"\"\"\r\n        Add the number to an internal data structure..\r\n        :type number: int\r\n        :rtype: void\r\n        \"\"\"\r\n        \r\n\r\n    def find(self, value):\r\n        \"\"\"\r\n        Find if there exists any pair of numbers which sum is equal to the value.\r\n        :type value: int\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your TwoSum object will be instantiated and called as such:\r\n# obj = TwoSum()\r\n# obj.add(number)\r\n# param_2 = obj.find(value)"},{"value":"c","text":"C","defaultCode":"typedef struct {\r\n    \r\n} TwoSum;\r\n\r\n/** Initialize your data structure here. */\r\nTwoSum* twoSumCreate() {\r\n    \r\n}\r\n\r\n/** Add the number to an internal data structure.. */\r\nvoid twoSumAdd(TwoSum* obj, int number) {\r\n    \r\n}\r\n\r\n/** Find if there exists any pair of numbers which sum is equal to the value. */\r\nbool twoSumFind(TwoSum* obj, int value) {\r\n    \r\n}\r\n\r\nvoid twoSumFree(TwoSum* obj) {\r\n    \r\n}\r\n\r\n/**\r\n * Your TwoSum struct will be instantiated and called as such:\r\n * struct TwoSum* obj = twoSumCreate();\r\n * twoSumAdd(obj, number);\r\n * bool param_2 = twoSumFind(obj, value);\r\n * twoSumFree(obj);\r\n */"},{"value":"csharp","text":"C#","defaultCode":"public class TwoSum {\r\n\r\n    /** Initialize your data structure here. */\r\n    public TwoSum() {\r\n        \r\n    }\r\n    \r\n    /** Add the number to an internal data structure.. */\r\n    public void Add(int number) {\r\n        \r\n    }\r\n    \r\n    /** Find if there exists any pair of numbers which sum is equal to the value. */\r\n    public bool Find(int value) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your TwoSum object will be instantiated and called as such:\r\n * TwoSum obj = new TwoSum();\r\n * obj.Add(number);\r\n * bool param_2 = obj.Find(value);\r\n */"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * Initialize your data structure here.\r\n */\r\nvar TwoSum = function() {\r\n    \r\n};\r\n\r\n/**\r\n * Add the number to an internal data structure.. \r\n * @param {number} number\r\n * @return {void}\r\n */\r\nTwoSum.prototype.add = function(number) {\r\n    \r\n};\r\n\r\n/**\r\n * Find if there exists any pair of numbers which sum is equal to the value. \r\n * @param {number} value\r\n * @return {boolean}\r\n */\r\nTwoSum.prototype.find = function(value) {\r\n    \r\n};\r\n\r\n/** \r\n * Your TwoSum object will be instantiated and called as such:\r\n * var obj = Object.create(TwoSum).createNew()\r\n * obj.add(number)\r\n * var param_2 = obj.find(value)\r\n */"},{"value":"ruby","text":"Ruby","defaultCode":"class TwoSum\r\n\r\n=begin\r\n    Initialize your data structure here.\r\n=end\r\n    def initialize()\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    Add the number to an internal data structure..\r\n    :type number: Integer\r\n    :rtype: Void\r\n=end\r\n    def add(number)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    Find if there exists any pair of numbers which sum is equal to the value.\r\n    :type value: Integer\r\n    :rtype: Boolean\r\n=end\r\n    def find(value)\r\n        \r\n    end\r\n\r\n\r\nend\r\n\r\n# Your TwoSum object will be instantiated and called as such:\r\n# obj = TwoSum.new()\r\n# obj.add(number)\r\n# param_2 = obj.find(value)"},{"value":"swift","text":"Swift","defaultCode":"\nclass TwoSum {\n\n    /** Initialize your data structure here. */\n    init() {\n        \n    }\n    \n    /** Add the number to an internal data structure.. */\n    func add(_ number: Int) {\n      \n    }\n    \n    /** Find if there exists any pair of numbers which sum is equal to the value. */\n    func find(_ value: Int) -> Bool {\n      \n    }\n}\n\n/**\n * Your TwoSum object will be instantiated and called as such:\n * let obj = TwoSum()\n * obj.add(number)\n * let ret_2: Bool = obj.find(value)\n */\n "},{"value":"golang","text":"Go","defaultCode":"type TwoSum struct {\r\n    \r\n}\r\n\r\n\r\n/** Initialize your data structure here. */\r\nfunc Constructor() TwoSum {\r\n    \r\n}\r\n\r\n\r\n/** Add the number to an internal data structure.. */\r\nfunc (this *TwoSum) Add(number int)  {\r\n    \r\n}\r\n\r\n\r\n/** Find if there exists any pair of numbers which sum is equal to the value. */\r\nfunc (this *TwoSum) Find(value int) bool {\r\n    \r\n}\r\n\r\n\r\n/**\r\n * Your TwoSum object will be instantiated and called as such:\r\n * obj := Constructor();\r\n * obj.Add(number);\r\n * param_2 := obj.Find(value);\r\n */"},{"value":"scala","text":"Scala","defaultCode":"class TwoSum() {\r\n\r\n    /** Initialize your data structure here. */\r\n    \r\n\r\n    /** Add the number to an internal data structure.. */\r\n    def add(number: Int) {\r\n        \r\n    }\r\n\r\n    /** Find if there exists any pair of numbers which sum is equal to the value. */\r\n    def find(value: Int): Boolean = {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your TwoSum object will be instantiated and called as such:\r\n * var obj = new TwoSum()\r\n * obj.add(number)\r\n * var param_2 = obj.find(value)\r\n */"},{"value":"kotlin","text":"Kotlin","defaultCode":"class TwoSum() {\r\n\r\n    /** Initialize your data structure here. */\r\n    \r\n\r\n    /** Add the number to an internal data structure.. */\r\n    fun add(number: Int) {\r\n        \r\n    }\r\n\r\n    /** Find if there exists any pair of numbers which sum is equal to the value. */\r\n    fun find(value: Int): Boolean {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your TwoSum object will be instantiated and called as such:\r\n * var obj = TwoSum()\r\n * obj.add(number)\r\n * var param_2 = obj.find(value)\r\n */"}],"testcase":"[\"TwoSum\",\"add\",\"add\",\"add\",\"find\",\"find\"]\n[[],[1],[3],[5],[4],[7]]","testable":true,"templateMeta":{"classname":"TwoSum","maxbytesperline":165000,"constructor":{"params":[],"comment":"Initialize your data structure here."},"methods":[{"name":"add","params":[{"type":"integer","name":"number"}],"return":{"type":"void"},"comment":"Add the number to an internal data structure.."},{"name":"find","params":[{"type":"integer","name":"value"}],"return":{"type":"boolean"},"comment":"Find if there exists any pair of numbers which sum is equal to the value."}],"systemdesign":true,"params":[{"name":"inputs","type":"integer[]"},{"name":"inputs","type":"integer[]"}],"return":{"type":"list<String>","dealloc":true}}}
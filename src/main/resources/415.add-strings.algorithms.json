{"id":415,"fid":415,"name":"Add Strings","slug":"add-strings","link":"https://leetcode.com/problems/add-strings/description/","percent":42.25803656528897,"level":"Easy","category":"algorithms","totalAC":"73.2K","totalSubmit":"173.1K","desc":"Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.\r\n\r\nNote:\r\n\r\nThe length of both num1 and num2 is < 5100.\r\nBoth num1 and num2 contains only digits 0-9.\r\nBoth num1 and num2 does not contain any leading zero.\r\nYou must not use any built-in BigInteger library or convert the inputs to integer directly.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    string addStrings(string num1, string num2) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String addStrings(String num1, String num2) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def addStrings(self, num1, num2):\r\n        \"\"\"\r\n        :type num1: str\r\n        :type num2: str\r\n        :rtype: str\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def addStrings(self, num1, num2):\n        \"\"\"\n        :type num1: str\n        :type num2: str\n        :rtype: str\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"char* addStrings(char* num1, char* num2) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public string AddStrings(string num1, string num2) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} num1\r\n * @param {string} num2\r\n * @return {string}\r\n */\r\nvar addStrings = function(num1, num2) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} num1\r\n# @param {String} num2\r\n# @return {String}\r\ndef add_strings(num1, num2)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func addStrings(_ num1: String, _ num2: String) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func addStrings(num1 string, num2 string) string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def addStrings(num1: String, num2: String): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun addStrings(num1: String, num2: String): String {\n        \n    }\n}"}],"testcase":"\"0\"\n\"0\"","testable":true,"templateMeta":{"name":"addStrings","params":[{"name":"num1","type":"string"},{"name":"num2","type":"string"}],"return":{"type":"string"}}}
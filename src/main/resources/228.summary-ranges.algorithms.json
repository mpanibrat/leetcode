{"id":228,"fid":228,"name":"Summary Ranges","slug":"summary-ranges","link":"https://leetcode.com/problems/summary-ranges/description/","percent":34.00928640230937,"level":"Medium","category":"algorithms","totalAC":"114K","totalSubmit":"335.3K","desc":"Given a sorted integer array without duplicates, return the summary of its ranges.\r\n\r\nExample 1:\r\n\r\n\r\nInput:  [0,1,2,4,5,7]\r\nOutput: [\"0->2\",\"4->5\",\"7\"]\r\nExplanation: 0,1,2 form a continuous range; 4,5 form a continuous range.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput:  [0,2,3,4,6,8,9]\r\nOutput: [\"0\",\"2->4\",\"6\",\"8->9\"]\r\nExplanation: 2,3,4 form a continuous range; 8,9 form a continuous range.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<string> summaryRanges(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public List<String> summaryRanges(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def summaryRanges(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: List[str]\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def summaryRanges(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: List[str]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nchar** summaryRanges(int* nums, int numsSize, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public IList<string> SummaryRanges(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {string[]}\r\n */\r\nvar summaryRanges = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {String[]}\r\ndef summary_ranges(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func summaryRanges(_ nums: [Int]) -> [String] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func summaryRanges(nums []int) []string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def summaryRanges(nums: Array[Int]): List[String] = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun summaryRanges(nums: IntArray): List<String> {\r\n        \r\n    }\r\n}"}],"testcase":"[0,1,2,4,5,7]","testable":true,"templateMeta":{"name":"summaryRanges","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"list<string>"}}}
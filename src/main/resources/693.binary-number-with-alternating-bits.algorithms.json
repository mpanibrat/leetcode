{"id":693,"fid":693,"name":"Binary Number with Alternating Bits","slug":"binary-number-with-alternating-bits","link":"https://leetcode.com/problems/binary-number-with-alternating-bits/description/","percent":56.685566640350245,"level":"Easy","category":"algorithms","totalAC":"31.6K","totalSubmit":"55.7K","desc":"Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.\r\n\r\nExample 1:\r\n\r\nInput: 5\r\nOutput: True\r\nExplanation:\r\nThe binary representation of 5 is: 101\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 7\r\nOutput: False\r\nExplanation:\r\nThe binary representation of 7 is: 111.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: 11\r\nOutput: False\r\nExplanation:\r\nThe binary representation of 11 is: 1011.\r\n\r\n\r\n\r\nExample 4:\r\n\r\nInput: 10\r\nOutput: True\r\nExplanation:\r\nThe binary representation of 10 is: 1010.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool hasAlternatingBits(int n) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean hasAlternatingBits(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def hasAlternatingBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def hasAlternatingBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool hasAlternatingBits(int n) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool HasAlternatingBits(int n) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {boolean}\n */\nvar hasAlternatingBits = function(n) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Boolean}\ndef has_alternating_bits(n)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func hasAlternatingBits(_ n: Int) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func hasAlternatingBits(n int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def hasAlternatingBits(n: Int): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun hasAlternatingBits(n: Int): Boolean {\n        \n    }\n}"}],"testcase":"5","testable":true,"templateMeta":{"name":"hasAlternatingBits","params":[{"name":"n","type":"integer"}],"return":{"type":"boolean"}}}
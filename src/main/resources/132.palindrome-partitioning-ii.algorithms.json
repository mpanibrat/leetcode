{"id":132,"fid":132,"name":"Palindrome Partitioning II","slug":"palindrome-partitioning-ii","link":"https://leetcode.com/problems/palindrome-partitioning-ii/description/","percent":25.939401543190517,"level":"Hard","category":"algorithms","totalAC":"91K","totalSubmit":"350.7K","desc":"Given a string s, partition s such that every substring of the partition is a palindrome.\r\n\r\nReturn the minimum cuts needed for a palindrome partitioning of s.\r\n\r\nExample:\r\n\r\n\r\nInput:Â \"aab\"\r\nOutput: 1\r\nExplanation: The palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int minCut(string s) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int minCut(String s) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def minCut(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def minCut(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int minCut(char* s) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MinCut(string s) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @return {number}\r\n */\r\nvar minCut = function(s) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @return {Integer}\r\ndef min_cut(s)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minCut(_ s: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func minCut(s string) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def minCut(s: String): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun minCut(s: String): Int {\r\n        \r\n    }\r\n}"}],"testcase":"\"aab\"","testable":true,"templateMeta":{"name":"minCut","params":[{"name":"s","type":"string"}],"return":{"type":"integer"}}}
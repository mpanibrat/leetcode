{"id":890,"fid":860,"name":"Lemonade Change","slug":"lemonade-change","link":"https://leetcode.com/problems/lemonade-change/description/","percent":49.39324039715174,"level":"Easy","category":"algorithms","totalAC":"14.8K","totalSubmit":"29.9K","desc":"At a lemonade stand, each lemonade costs $5. \r\n\r\nCustomers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).\r\n\r\nEach customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.  You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.\r\n\r\nNote that you don't have any change in hand at first.\r\n\r\nReturn true if and only if you can provide every customer with correct change.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [5,5,5,10,20]\r\nOutput: true\r\nExplanation: \r\nFrom the first 3 customers, we collect three $5 bills in order.\r\nFrom the fourth customer, we collect a $10 bill and give back a $5.\r\nFrom the fifth customer, we give a $10 bill and a $5 bill.\r\nSince all customers got correct change, we output true.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [5,5,10]\r\nOutput: true\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: [10,10]\r\nOutput: false\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: [5,5,10,10,20]\r\nOutput: false\r\nExplanation: \r\nFrom the first two customers in order, we collect two $5 bills.\r\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\r\nFor the last customer, we can't give change of $15 back because we only have two $10 bills.\r\nSince not every customer received correct change, the answer is false.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t0 <= bills.length <= 10000\r\n\tbills[i] will be either 5, 10, or 20.\r\n\r\n\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool lemonadeChange(vector<int>& bills) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean lemonadeChange(int[] bills) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def lemonadeChange(self, bills):\n        \"\"\"\n        :type bills: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def lemonadeChange(self, bills):\n        \"\"\"\n        :type bills: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool lemonadeChange(int* bills, int billsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool LemonadeChange(int[] bills) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} bills\n * @return {boolean}\n */\nvar lemonadeChange = function(bills) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} bills\n# @return {Boolean}\ndef lemonade_change(bills)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func lemonadeChange(_ bills: [Int]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func lemonadeChange(bills []int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def lemonadeChange(bills: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun lemonadeChange(bills: IntArray): Boolean {\n        \n    }\n}"}],"testcase":"[5,5,5,10,20]","testable":true,"templateMeta":{"name":"lemonadeChange","params":[{"name":"bills","type":"integer[]"}],"return":{"type":"boolean"}}}
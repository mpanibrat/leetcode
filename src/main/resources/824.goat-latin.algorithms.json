{"id":851,"fid":824,"name":"Goat Latin","slug":"goat-latin","link":"https://leetcode.com/problems/goat-latin/description/","percent":55.14098547422387,"level":"Easy","category":"algorithms","totalAC":"19.4K","totalSubmit":"35.1K","desc":"A sentence S is given, composed of words separated by spaces. Each word consists of lowercase and uppercase letters only.\r\n\r\nWe would like to convert the sentence to \"Goat Latin\" (a made-up language similar to Pig Latin.)\r\n\r\nThe rules of Goat Latin are as follows:\r\n\r\n\r\n\tIf a word begins with a vowel (a, e, i, o, or u), append \"ma\" to the end of the word.\r\n\tFor example, the word 'apple' becomes 'applema'.\r\n\t \r\n\tIf a word begins with a consonant (i.e. not a vowel), remove the first letter and append it to the end, then add \"ma\".\r\n\tFor example, the word \"goat\" becomes \"oatgma\".\r\n\t \r\n\tAdd one letter 'a' to the end of each word per its word index in the sentence, starting with 1.\r\n\tFor example, the first word gets \"a\" added to the end, the second word gets \"aa\" added to the end and so on.\r\n\r\n\r\nReturn the final sentence representing the conversion from S to Goat Latin. \r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: \"I speak Goat Latin\"\r\nOutput: \"Imaa peaksmaaa oatGmaaaa atinLmaaaaa\"\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"The quick brown fox jumped over the lazy dog\"\r\nOutput: \"heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa\"\r\n\r\n\r\n \r\n\r\nNotes:\r\n\r\n\r\n\tS contains only uppercase, lowercase and spaces. Exactly one space between each word.\r\n\t1 <= S.length <= 150.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string toGoatLatin(string S) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String toGoatLatin(String S) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def toGoatLatin(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def toGoatLatin(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: str\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"char* toGoatLatin(char* S) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string ToGoatLatin(string S) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} S\n * @return {string}\n */\nvar toGoatLatin = function(S) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {String}\ndef to_goat_latin(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func toGoatLatin(_ S: String) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func toGoatLatin(S string) string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def toGoatLatin(S: String): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun toGoatLatin(S: String): String {\n        \n    }\n}"}],"testcase":"\"I speak Goat Latin\"","testable":true,"templateMeta":{"name":"toGoatLatin","params":[{"name":"S","type":"string"}],"return":{"type":"string"}}}
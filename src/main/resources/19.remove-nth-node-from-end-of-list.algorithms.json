{"id":19,"fid":19,"name":"Remove Nth Node From End of List","slug":"remove-nth-node-from-end-of-list","link":"https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/","percent":33.60238801021688,"level":"Medium","category":"algorithms","totalAC":"308.1K","totalSubmit":"916.9K","desc":"Given a linked list, remove the n-th node from the end of list and return its head.\r\n\r\nExample:\r\n\r\n\r\nGiven linked list: 1->2->3->4->5, and n = 2.\r\n\r\nAfter removing the second node from the end, the linked list becomes 1->2->3->5.\r\n\r\n\r\nNote:\r\n\r\nGiven n will always be valid.\r\n\r\nFollow up:\r\n\r\nCould you do this in one pass?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\nclass Solution {\r\n    public ListNode removeNthFromEnd(ListNode head, int n) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"# Definition for singly-linked list.\r\n# class ListNode(object):\r\n#     def __init__(self, x):\r\n#         self.val = x\r\n#         self.next = None\r\n\r\nclass Solution(object):\r\n    def removeNthFromEnd(self, head, n):\r\n        \"\"\"\r\n        :type head: ListNode\r\n        :type n: int\r\n        :rtype: ListNode\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"# Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, x):\r\n#         self.val = x\r\n#         self.next = None\r\n\r\nclass Solution:\r\n    def removeNthFromEnd(self, head, n):\r\n        \"\"\"\r\n        :type head: ListNode\r\n        :type n: int\r\n        :rtype: ListNode\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n */\r\nstruct ListNode* removeNthFromEnd(struct ListNode* head, int n) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     public int val;\r\n *     public ListNode next;\r\n *     public ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode RemoveNthFromEnd(ListNode head, int n) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} head\r\n * @param {number} n\r\n * @return {ListNode}\r\n */\r\nvar removeNthFromEnd = function(head, n) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# Definition for singly-linked list.\r\n# class ListNode\r\n#     attr_accessor :val, :next\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @next = nil\r\n#     end\r\n# end\r\n\r\n# @param {ListNode} head\r\n# @param {Integer} n\r\n# @return {ListNode}\r\ndef remove_nth_from_end(head, n)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init(_ val: Int) {\n *         self.val = val\n *         self.next = nil\n *     }\n * }\n */\nclass Solution {\n    func removeNthFromEnd(_ head: ListNode?, _ n: Int) -> ListNode? {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * type ListNode struct {\r\n *     Val int\r\n *     Next *ListNode\r\n * }\r\n */\r\nfunc removeNthFromEnd(head *ListNode, n int) *ListNode {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * class ListNode(var _x: Int = 0) {\r\n *   var next: ListNode = null\r\n *   var x: Int = _x\r\n * }\r\n */\r\nobject Solution {\r\n    def removeNthFromEnd(head: ListNode, n: Int): ListNode = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * class ListNode(var `val`: Int = 0) {\r\n *     var next: ListNode? = null\r\n * }\r\n */\r\nclass Solution {\r\n    fun removeNthFromEnd(head: ListNode?, n: Int): ListNode? {\r\n        \r\n    }\r\n}"}],"testcase":"[1,2,3,4,5]\n2","testable":true,"templateMeta":{"name":"removeNthFromEnd","params":[{"name":"head","type":"ListNode","dealloc":false},{"name":"n","type":"integer"}],"return":{"type":"ListNode","dealloc":true}}}
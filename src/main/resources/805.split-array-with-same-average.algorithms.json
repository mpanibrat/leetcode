{"id":823,"fid":805,"name":"Split Array With Same Average","slug":"split-array-with-same-average","link":"https://leetcode.com/problems/split-array-with-same-average/description/","percent":22.309024578988097,"level":"Hard","category":"algorithms","totalAC":"6.1K","totalSubmit":"27.1K","desc":"In a given integer array A, we must move every element of A to either list B or list C. (B and C initially start empty.)\r\n\r\nReturn true if and only if after such a move, it is possible that the average value of B is equal to the average value of C, and B and C are both non-empty.\r\n\r\n\r\nExample :\r\nInput: \r\n[1,2,3,4,5,6,7,8]\r\nOutput: true\r\nExplanation: We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have the average of 4.5.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tThe length of A will be in the range [1, 30].\r\n\tA[i] will be in the range of [0, 10000].\r\n\r\n\r\n \r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool splitArraySameAverage(vector<int>& A) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean splitArraySameAverage(int[] A) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def splitArraySameAverage(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def splitArraySameAverage(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool splitArraySameAverage(int* A, int ASize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool SplitArraySameAverage(int[] A) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} A\n * @return {boolean}\n */\nvar splitArraySameAverage = function(A) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\n# @return {Boolean}\ndef split_array_same_average(a)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func splitArraySameAverage(_ A: [Int]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func splitArraySameAverage(A []int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def splitArraySameAverage(A: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun splitArraySameAverage(A: IntArray): Boolean {\n        \n    }\n}"}],"testcase":"[1,2,3,4,5,6,7,8]","testable":true,"templateMeta":{"name":"splitArraySameAverage","params":[{"name":"A","type":"integer[]"}],"return":{"type":"boolean"}}}
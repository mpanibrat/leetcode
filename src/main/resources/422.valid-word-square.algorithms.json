{"id":422,"fid":422,"name":"Valid Word Square","slug":"valid-word-square","link":"https://leetcode.com/problems/valid-word-square/description/","percent":36.28012919848397,"level":"Easy","category":"algorithms","totalAC":"19.4K","totalSubmit":"53.6K","desc":"Given a sequence of words, check whether it forms a valid word square.\r\n\r\nA sequence of words forms a valid word square if the kth row and column read the exact same string, where 0 â‰¤ k < max(numRows, numColumns).\r\n\r\nNote:\r\n\r\nThe number of words given is at least 1 and does not exceed 500.\r\nWord length will be at least 1 and does not exceed 500.\r\nEach word contains only lowercase English alphabet a-z.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n[\r\n  \"abcd\",\r\n  \"bnrt\",\r\n  \"crmy\",\r\n  \"dtye\"\r\n]\r\n\r\nOutput:\r\ntrue\r\n\r\nExplanation:\r\nThe first row and first column both read \"abcd\".\r\nThe second row and second column both read \"bnrt\".\r\nThe third row and third column both read \"crmy\".\r\nThe fourth row and fourth column both read \"dtye\".\r\n\r\nTherefore, it is a valid word square.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n[\r\n  \"abcd\",\r\n  \"bnrt\",\r\n  \"crm\",\r\n  \"dt\"\r\n]\r\n\r\nOutput:\r\ntrue\r\n\r\nExplanation:\r\nThe first row and first column both read \"abcd\".\r\nThe second row and second column both read \"bnrt\".\r\nThe third row and third column both read \"crm\".\r\nThe fourth row and fourth column both read \"dt\".\r\n\r\nTherefore, it is a valid word square.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput:\r\n[\r\n  \"ball\",\r\n  \"area\",\r\n  \"read\",\r\n  \"lady\"\r\n]\r\n\r\nOutput:\r\nfalse\r\n\r\nExplanation:\r\nThe third row reads \"read\" while the third column reads \"lead\".\r\n\r\nTherefore, it is NOT a valid word square.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool validWordSquare(vector<string>& words) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean validWordSquare(List<String> words) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def validWordSquare(self, words):\r\n        \"\"\"\r\n        :type words: List[str]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def validWordSquare(self, words):\n        \"\"\"\n        :type words: List[str]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool validWordSquare(char** words, int wordsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool ValidWordSquare(IList<string> words) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string[]} words\r\n * @return {boolean}\r\n */\r\nvar validWordSquare = function(words) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String[]} words\r\n# @return {Boolean}\r\ndef valid_word_square(words)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func validWordSquare(_ words: [String]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func validWordSquare(words []string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def validWordSquare(words: List[String]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun validWordSquare(words: List<String>): Boolean {\n        \n    }\n}"}],"testcase":"[\"abcd\",\"bnrt\",\"crmy\",\"dtye\"]","testable":true,"templateMeta":{"name":"validWordSquare","params":[{"name":"words","type":"list<string>"}],"return":{"type":"boolean"}}}
{"id":408,"fid":408,"name":"Valid Word Abbreviation","slug":"valid-word-abbreviation","link":"https://leetcode.com/problems/valid-word-abbreviation/description/","percent":28.61012956419317,"level":"Easy","category":"algorithms","totalAC":"19.4K","totalSubmit":"67.9K","desc":"\r\nGiven a non-empty string s and an abbreviation abbr, return whether the string matches with the given abbreviation.\r\n\r\n\r\nA string such as \"word\" contains only the following valid abbreviations:\r\n\r\n[\"word\", \"1ord\", \"w1rd\", \"wo1d\", \"wor1\", \"2rd\", \"w2d\", \"wo2\", \"1o1d\", \"1or1\", \"w1r1\", \"1o2\", \"2r1\", \"3d\", \"w3\", \"4\"]\r\n\r\n\r\nNotice that only the above abbreviations are valid abbreviations of the string \"word\". Any other string is not a valid abbreviation of \"word\".\r\n\r\nNote:\r\nAssume s contains only lowercase letters and abbr contains only lowercase letters and digits.\r\n\r\n\r\nExample 1:\r\n\r\nGiven s = \"internationalization\", abbr = \"i12iz4n\":\r\n\r\nReturn true.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven s = \"apple\", abbr = \"a2e\":\r\n\r\nReturn false.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool validWordAbbreviation(string word, string abbr) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean validWordAbbreviation(String word, String abbr) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def validWordAbbreviation(self, word, abbr):\r\n        \"\"\"\r\n        :type word: str\r\n        :type abbr: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def validWordAbbreviation(self, word, abbr):\n        \"\"\"\n        :type word: str\n        :type abbr: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool validWordAbbreviation(char* word, char* abbr) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool ValidWordAbbreviation(string word, string abbr) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} word\r\n * @param {string} abbr\r\n * @return {boolean}\r\n */\r\nvar validWordAbbreviation = function(word, abbr) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} word\r\n# @param {String} abbr\r\n# @return {Boolean}\r\ndef valid_word_abbreviation(word, abbr)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func validWordAbbreviation(_ word: String, _ abbr: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func validWordAbbreviation(word string, abbr string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def validWordAbbreviation(word: String, abbr: String): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun validWordAbbreviation(word: String, abbr: String): Boolean {\n        \n    }\n}"}],"testcase":"\"internationalization\"\n\"i12iz4n\"","testable":true,"templateMeta":{"name":"validWordAbbreviation","params":[{"name":"word","type":"string"},{"name":"abbr","type":"string"}],"return":{"type":"boolean"}}}
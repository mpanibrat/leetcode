{"id":9,"fid":9,"name":"Palindrome Number","slug":"palindrome-number","link":"https://leetcode.com/problems/palindrome-number/description/","percent":39.24854445501148,"level":"Easy","category":"algorithms","totalAC":"423K","totalSubmit":"1.1M","desc":"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.\r\n\r\nExample 1:\r\n\r\n\r\nInput: 121\r\nOutput: true\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: -121\r\nOutput: false\r\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: 10\r\nOutput: false\r\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\r\n\r\n\r\nFollow up:\r\n\r\nCoud you solve it without converting the integer to a string?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isPalindrome(int x) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isPalindrome(int x) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isPalindrome(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isPalindrome(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool isPalindrome(int x) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsPalindrome(int x) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function(x) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} x\n# @return {Boolean}\ndef is_palindrome(x)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isPalindrome(_ x: Int) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isPalindrome(x int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isPalindrome(x: Int): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isPalindrome(x: Int): Boolean {\n        \n    }\n}"}],"testcase":"121","testable":true,"templateMeta":{"name":"isPalindrome","params":[{"name":"x","type":"integer"}],"return":{"type":"boolean"}}}
{"id":32,"fid":32,"name":"Longest Valid Parentheses","slug":"longest-valid-parentheses","link":"https://leetcode.com/problems/longest-valid-parentheses/description/","percent":24.096818644778622,"level":"Hard","category":"algorithms","totalAC":"152.8K","totalSubmit":"634.3K","desc":"Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\r\n\r\nExample 1:\r\n\r\n\r\nInput: \"(()\"\r\nOutput: 2\r\nExplanation: The longest valid parentheses substring is \"()\"\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \")()())\"\r\nOutput: 4\r\nExplanation: The longest valid parentheses substring is \"()()\"\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int longestValidParentheses(string s) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int longestValidParentheses(String s) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def longestValidParentheses(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def longestValidParentheses(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int longestValidParentheses(char* s) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int LongestValidParentheses(string s) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @return {number}\r\n */\r\nvar longestValidParentheses = function(s) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @return {Integer}\r\ndef longest_valid_parentheses(s)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func longestValidParentheses(_ s: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func longestValidParentheses(s string) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def longestValidParentheses(s: String): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun longestValidParentheses(s: String): Int {\r\n        \r\n    }\r\n}"}],"testcase":"\"(()\"","testable":true,"templateMeta":{"name":"longestValidParentheses","params":[{"name":"s","type":"string"}],"return":{"type":"integer"}}}
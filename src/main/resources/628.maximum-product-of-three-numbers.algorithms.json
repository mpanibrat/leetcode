{"id":628,"fid":628,"name":"Maximum Product of Three Numbers","slug":"maximum-product-of-three-numbers","link":"https://leetcode.com/problems/maximum-product-of-three-numbers/description/","percent":44.86070231288404,"level":"Easy","category":"algorithms","totalAC":"50.4K","totalSubmit":"112.5K","desc":"Given an integer array, find three numbers whose product is maximum and output the maximum product.\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3]\r\nOutput: 6\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2,3,4]\r\nOutput: 24\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].\r\nMultiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maximumProduct(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int maximumProduct(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maximumProduct(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def maximumProduct(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int maximumProduct(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaximumProduct(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar maximumProduct = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef maximum_product(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maximumProduct(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func maximumProduct(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def maximumProduct(nums: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun maximumProduct(nums: IntArray): Int {\n        \n    }\n}"}],"testcase":"[1,2,3]","testable":true,"templateMeta":{"name":"maximumProduct","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
{"id":737,"fid":737,"name":"Sentence Similarity II","slug":"sentence-similarity-ii","link":"https://leetcode.com/problems/sentence-similarity-ii/description/","percent":40.84082612636892,"level":"Medium","category":"algorithms","totalAC":"16.7K","totalSubmit":"40.8K","desc":"Given two sentences words1, words2 (each represented as an array of strings), and a list of similar word pairs pairs, determine if two sentences are similar.\r\n\r\nFor example, words1 = [\"great\", \"acting\", \"skills\"] and words2 = [\"fine\", \"drama\", \"talent\"] are similar, if the similar word pairs are pairs = [[\"great\", \"good\"], [\"fine\", \"good\"], \r\n [\"acting\",\"drama\"], [\"skills\",\"talent\"]].\r\n\r\nNote that the similarity relation is transitive. For example, if \"great\" and \"good\" are similar, and \"fine\" and \"good\" are similar, then \"great\" and \"fine\" are similar.\r\n\r\nSimilarity is also symmetric.  For example, \"great\" and \"fine\" being similar is the same as \"fine\" and \"great\" being similar.\r\n\r\nAlso, a word is always similar with itself.  For example, the sentences words1 = [\"great\"], words2 = [\"great\"], pairs = [] are similar, even though there are no specified similar word pairs.\r\n\r\nFinally, sentences can only be similar if they have the same number of words.  So a sentence like words1 = [\"great\"] can never be similar to words2 = [\"doubleplus\",\"good\"].\r\n\r\n\r\nNote:\r\nThe length of words1 and words2 will not exceed 1000.\r\nThe length of pairs will not exceed 2000.\r\nThe length of each pairs[i] will be 2.\r\nThe length of each words[i] and pairs[i][j] will be in the range [1, 20].\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool areSentencesSimilarTwo(vector<string>& words1, vector<string>& words2, vector<pair<string, string>> pairs) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean areSentencesSimilarTwo(String[] words1, String[] words2, String[][] pairs) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def areSentencesSimilarTwo(self, words1, words2, pairs):\n        \"\"\"\n        :type words1: List[str]\n        :type words2: List[str]\n        :type pairs: List[List[str]]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def areSentencesSimilarTwo(self, words1, words2, pairs):\n        \"\"\"\n        :type words1: List[str]\n        :type words2: List[str]\n        :type pairs: List[List[str]]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool areSentencesSimilarTwo(char** words1, int words1Size, char** words2, int words2Size, char*** pairs, int pairsRowSize, int pairsColSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool AreSentencesSimilarTwo(string[] words1, string[] words2, string[,] pairs) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string[]} words1\n * @param {string[]} words2\n * @param {string[][]} pairs\n * @return {boolean}\n */\nvar areSentencesSimilarTwo = function(words1, words2, pairs) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String[]} words1\n# @param {String[]} words2\n# @param {string[][]} pairs\n# @return {Boolean}\ndef are_sentences_similar_two(words1, words2, pairs)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func areSentencesSimilarTwo(_ words1: [String], _ words2: [String], _ pairs: [[String]]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func areSentencesSimilarTwo(words1 []string, words2 []string, pairs [][]string) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def areSentencesSimilarTwo(words1: Array[String], words2: Array[String], pairs: Array[Array[String]]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun areSentencesSimilarTwo(words1: Array<String>, words2: Array<String>, pairs: Array<Array<String>>): Boolean {\n        \n    }\n}"}],"testcase":"[\"great\",\"acting\",\"skills\"]\n[\"fine\",\"drama\",\"talent\"]\n[[\"great\",\"good\"],[\"fine\",\"good\"],[\"drama\",\"acting\"],[\"skills\",\"talent\"]]","testable":true,"templateMeta":{"name":"areSentencesSimilarTwo","params":[{"name":"words1","type":"string[]"},{"name":"words2","type":"string[]"},{"name":"pairs","type":"pair<string,string>[]"}],"return":{"type":"boolean"}}}
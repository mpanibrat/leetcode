{"id":34,"fid":34,"name":"Find First and Last Position of Element in Sorted Array","slug":"find-first-and-last-position-of-element-in-sorted-array","link":"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/","percent":32.19941502429136,"level":"Medium","category":"algorithms","totalAC":"233.8K","totalSubmit":"726.2K","desc":"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\r\n\r\nYour algorithm's runtime complexity must be in the order of O(log n).\r\n\r\nIf the target is not found in the array, return [-1, -1].\r\n\r\nExample 1:\r\n\r\n\r\nInput: nums = [5,7,7,8,8,10], target = 8\r\nOutput: [3,4]\r\n\r\nExample 2:\r\n\r\n\r\nInput: nums = [5,7,7,8,8,10], target = 6\r\nOutput: [-1,-1]\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<int> searchRange(vector<int>& nums, int target) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int[] searchRange(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def searchRange(self, nums, target):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type target: int\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def searchRange(self, nums, target):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type target: int\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nint* searchRange(int* nums, int numsSize, int target, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int[] SearchRange(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @param {number} target\r\n * @return {number[]}\r\n */\r\nvar searchRange = function(nums, target) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @param {Integer} target\r\n# @return {Integer[]}\r\ndef search_range(nums, target)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func searchRange(_ nums: [Int], _ target: Int) -> [Int] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func searchRange(nums []int, target int) []int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def searchRange(nums: Array[Int], target: Int): Array[Int] = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun searchRange(nums: IntArray, target: Int): IntArray {\r\n        \r\n    }\r\n}"}],"testcase":"[5,7,7,8,8,10]\n8","testable":true,"templateMeta":{"name":"searchRange","params":[{"name":"nums","type":"integer[]"},{"name":"target","type":"integer"}],"return":{"type":"integer[]"}}}
{"id":679,"fid":679,"name":"24 Game","slug":"24-game","link":"https://leetcode.com/problems/24-game/description/","percent":39.85624494368038,"level":"Hard","category":"algorithms","totalAC":"12.8K","totalSubmit":"32.1K","desc":"\r\nYou have 4 cards each containing a number from 1 to 9.  You need to judge whether they could operated through *, /, +, -, (, ) to get the value of 24.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [4, 1, 8, 7]\r\nOutput: True\r\nExplanation: (8-4) * (7-1) = 24\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 2, 1, 2]\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\n\r\nThe division operator / represents real division, not integer division.  For example, 4 / (1 - 2/3) = 12.\r\nEvery operation done is between two numbers.  In particular, we cannot use - as a unary operator.  For example, with [1, 1, 1, 1] as input, the expression -1 - 1 - 1 - 1 is not allowed.\r\nYou cannot concatenate numbers together.  For example, if the input is [1, 2, 1, 2], we cannot write this as 12 + 12.\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool judgePoint24(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean judgePoint24(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def judgePoint24(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def judgePoint24(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool judgePoint24(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool JudgePoint24(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {boolean}\r\n */\r\nvar judgePoint24 = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Boolean}\r\ndef judge_point24(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func judgePoint24(_ nums: [Int]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func judgePoint24(nums []int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def judgePoint24(nums: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun judgePoint24(nums: IntArray): Boolean {\n        \n    }\n}"}],"testcase":"[4,1,8,7]","testable":true,"templateMeta":{"name":"judgePoint24","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"boolean"}}}
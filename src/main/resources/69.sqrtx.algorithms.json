{"id":69,"fid":69,"name":"Sqrt(x)","slug":"sqrtx","link":"https://leetcode.com/problems/sqrtx/description/","percent":29.696271175197552,"level":"Easy","category":"algorithms","totalAC":"286.5K","totalSubmit":"964.8K","desc":"Implement int sqrt(int x).\r\n\r\nCompute and return the square root of x, where x is guaranteed to be a non-negative integer.\r\n\r\nSince the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.\r\n\r\nExample 1:\r\n\r\n\r\nInput: 4\r\nOutput: 2\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: 8\r\nOutput: 2\r\nExplanation: The square root of 8 is 2.82842..., and since \r\n             the decimal part is truncated, 2 is returned.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int mySqrt(int x) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int mySqrt(int x) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def mySqrt(self, x):\r\n        \"\"\"\r\n        :type x: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def mySqrt(self, x):\r\n        \"\"\"\r\n        :type x: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int mySqrt(int x) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MySqrt(int x) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} x\r\n * @return {number}\r\n */\r\nvar mySqrt = function(x) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} x\r\n# @return {Integer}\r\ndef my_sqrt(x)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func mySqrt(_ x: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func mySqrt(x int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def mySqrt(x: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun mySqrt(x: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"4","testable":true,"templateMeta":{"name":"mySqrt","params":[{"name":"x","type":"integer"}],"return":{"type":"integer"}}}
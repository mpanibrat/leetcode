{"id":692,"fid":692,"name":"Top K Frequent Words","slug":"top-k-frequent-words","link":"https://leetcode.com/problems/top-k-frequent-words/description/","percent":43.02933818512622,"level":"Medium","category":"algorithms","totalAC":"37.8K","totalSubmit":"87.9K","desc":"Given a non-empty list of words, return the k most frequent elements.\r\nYour answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first.\r\n\r\nExample 1:\r\n\r\nInput: [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2\r\nOutput: [\"i\", \"love\"]\r\nExplanation: \"i\" and \"love\" are the two most frequent words.\r\n    Note that \"i\" comes before \"love\" due to a lower alphabetical order.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4\r\nOutput: [\"the\", \"is\", \"sunny\", \"day\"]\r\nExplanation: \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words,\r\n    with the number of occurrence being 4, 3, 2 and 1 respectively.\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume k is always valid, 1 ≤ k ≤ number of unique elements.\r\nInput words contain only lowercase letters.\r\n\r\n\r\n\r\nFollow up:\r\n\r\nTry to solve it in O(n log k) time and O(n) extra space.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<string> topKFrequent(vector<string>& words, int k) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public List<String> topKFrequent(String[] words, int k) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def topKFrequent(self, words, k):\r\n        \"\"\"\r\n        :type words: List[str]\r\n        :type k: int\r\n        :rtype: List[str]\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def topKFrequent(self, words, k):\r\n        \"\"\"\r\n        :type words: List[str]\r\n        :type k: int\r\n        :rtype: List[str]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nchar** topKFrequent(char** words, int wordsSize, int k, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public IList<string> TopKFrequent(string[] words, int k) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string[]} words\r\n * @param {number} k\r\n * @return {string[]}\r\n */\r\nvar topKFrequent = function(words, k) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String[]} words\r\n# @param {Integer} k\r\n# @return {String[]}\r\ndef top_k_frequent(words, k)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func topKFrequent(_ words: [String], _ k: Int) -> [String] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func topKFrequent(words []string, k int) []string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def topKFrequent(words: Array[String], k: Int): List[String] = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun topKFrequent(words: Array<String>, k: Int): List<String> {\n        \n    }\n}"}],"testcase":"[\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"]\n2","testable":true,"templateMeta":{"name":"topKFrequent","params":[{"name":"words","type":"string[]"},{"name":"k","type":"integer"}],"return":{"type":"list<string>"}}}
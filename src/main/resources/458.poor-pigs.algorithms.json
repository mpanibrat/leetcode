{"id":458,"fid":458,"name":"Poor Pigs","slug":"poor-pigs","link":"https://leetcode.com/problems/poor-pigs/description/","percent":43.80780056292722,"level":"Easy","category":"algorithms","totalAC":"13.1K","totalSubmit":"29.8K","desc":"There are 1000 buckets, one and only one of them contains poison, the rest are filled with water. They all look the same. If a pig drinks that poison it will die within 15 minutes. What is the minimum amount of pigs you need to figure out which bucket contains the poison within one hour.\r\n\r\nAnswer this question, and write an algorithm for the follow-up general case.\r\n\r\nFollow-up: \r\n\r\nIf there are n buckets and a pig drinking poison will die within m minutes, how many pigs (x) you need to figure out the \"poison\" bucket within p minutes? There is exact one bucket with poison.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int poorPigs(int buckets, int minutesToDie, int minutesToTest) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int poorPigs(int buckets, int minutesToDie, int minutesToTest) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def poorPigs(self, buckets, minutesToDie, minutesToTest):\r\n        \"\"\"\r\n        :type buckets: int\r\n        :type minutesToDie: int\r\n        :type minutesToTest: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int poorPigs(int buckets, int minutesToDie, int minutesToTest) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int PoorPigs(int buckets, int minutesToDie, int minutesToTest) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} buckets\r\n * @param {number} minutesToDie\r\n * @param {number} minutesToTest\r\n * @return {number}\r\n */\r\nvar poorPigs = function(buckets, minutesToDie, minutesToTest) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} buckets\r\n# @param {Integer} minutes_to_die\r\n# @param {Integer} minutes_to_test\r\n# @return {Integer}\r\ndef poor_pigs(buckets, minutes_to_die, minutes_to_test)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func poorPigs(_ buckets: Int, _ minutesToDie: Int, _ minutesToTest: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func poorPigs(buckets int, minutesToDie int, minutesToTest int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def poorPigs(buckets: Int, minutesToDie: Int, minutesToTest: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun poorPigs(buckets: Int, minutesToDie: Int, minutesToTest: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"1000\n15\n60","testable":true,"templateMeta":{"name":"poorPigs","params":[{"name":"buckets","type":"integer"},{"name":"minutesToDie","type":"integer"},{"name":"minutesToTest","type":"integer"}],"return":{"type":"integer"}}}
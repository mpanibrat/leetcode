{"id":361,"fid":361,"name":"Bomb Enemy","slug":"bomb-enemy","link":"https://leetcode.com/problems/bomb-enemy/description/","percent":41.44091116441279,"level":"Medium","category":"algorithms","totalAC":"28.2K","totalSubmit":"68K","desc":"Given a 2D grid, each cell is either a wall 'W', an enemy 'E' or empty '0' (the number zero), return the maximum enemies you can kill using one bomb.\r\nThe bomb kills all the enemies in the same row and column from the planted point until it hits the wall since the wall is too strong to be destroyed.\r\nNote: You can only put the bomb at an empty cell.\r\n\r\nExample:\r\n\r\n\r\n\r\nInput: [[\"0\",\"E\",\"0\",\"0\"],[\"E\",\"0\",\"W\",\"E\"],[\"0\",\"E\",\"0\",\"0\"]]\r\nOutput: 3 \r\nExplanation: For the given grid,\r\n\r\n0 E 0 0 \r\nE 0 W E \r\n0 E 0 0\r\n\r\nPlacing a bomb at (1,1) kills 3 enemies.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maxKilledEnemies(vector<vector<char>>& grid) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int maxKilledEnemies(char[][] grid) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maxKilledEnemies(self, grid):\r\n        \"\"\"\r\n        :type grid: List[List[str]]\r\n        :rtype: int\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def maxKilledEnemies(self, grid):\r\n        \"\"\"\r\n        :type grid: List[List[str]]\r\n        :rtype: int\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"int maxKilledEnemies(char** grid, int gridRowSize, int gridColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaxKilledEnemies(char[,] grid) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {character[][]} grid\r\n * @return {number}\r\n */\r\nvar maxKilledEnemies = function(grid) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Character[][]} grid\r\n# @return {Integer}\r\ndef max_killed_enemies(grid)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maxKilledEnemies(_ grid: [[Character]]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func maxKilledEnemies(grid [][]byte) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def maxKilledEnemies(grid: Array[Array[Char]]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun maxKilledEnemies(grid: Array<CharArray>): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[[\"0\",\"E\",\"0\",\"0\"],[\"E\",\"0\",\"W\",\"E\"],[\"0\",\"E\",\"0\",\"0\"]]","testable":true,"templateMeta":{"name":"maxKilledEnemies","params":[{"name":"grid","type":"character[][]"}],"return":{"type":"integer"}}}
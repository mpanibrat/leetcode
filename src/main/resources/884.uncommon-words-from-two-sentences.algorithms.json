{"id":920,"fid":884,"name":"Uncommon Words from Two Sentences","slug":"uncommon-words-from-two-sentences","link":"https://leetcode.com/problems/uncommon-words-from-two-sentences/description/","percent":59.955678207058035,"level":"Easy","category":"algorithms","totalAC":"14.3K","totalSubmit":"23.9K","desc":"We are given two sentences A and B.  (A sentence is a string of space separated words.  Each word consists only of lowercase letters.)\r\n\r\nA word is uncommon if it appears exactly once in one of the sentences, and does not appear in the other sentence.\r\n\r\nReturn a list of all uncommon words. \r\n\r\nYou may return the list in any order.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = \"this apple is sweet\", B = \"this apple is sour\"\r\nOutput: [\"sweet\",\"sour\"]\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = \"apple apple\", B = \"banana\"\r\nOutput: [\"banana\"]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t0 <= A.length <= 200\r\n\t0 <= B.length <= 200\r\n\tA and B both contain only spaces and lowercase letters.\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<string> uncommonFromSentences(string A, string B) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String[] uncommonFromSentences(String A, String B) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def uncommonFromSentences(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: List[str]\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def uncommonFromSentences(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: List[str]\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"/**\n * Return an array of size *returnSize.\n * Note: The returned array must be malloced, assume caller calls free().\n */\nchar** uncommonFromSentences(char* A, char* B, int* returnSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string[] UncommonFromSentences(string A, string B) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} A\n * @param {string} B\n * @return {string[]}\n */\nvar uncommonFromSentences = function(A, B) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} a\n# @param {String} b\n# @return {String[]}\ndef uncommon_from_sentences(a, b)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func uncommonFromSentences(_ A: String, _ B: String) -> [String] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func uncommonFromSentences(A string, B string) []string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def uncommonFromSentences(A: String, B: String): Array[String] = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun uncommonFromSentences(A: String, B: String): Array<String> {\n        \n    }\n}"}],"testcase":"\"this apple is sweet\"\n\"this apple is sour\"","testable":true,"templateMeta":{"name":"uncommonFromSentences","params":[{"name":"A","type":"string"},{"name":"B","type":"string"}],"return":{"type":"string[]"}}}
{"id":941,"fid":905,"name":"Sort Array By Parity","slug":"sort-array-by-parity","link":"https://leetcode.com/problems/sort-array-by-parity/description/","percent":70.75004189509468,"level":"Easy","category":"algorithms","totalAC":"29.6K","totalSubmit":"41.8K","desc":"Given an array A of non-negative integers, return an array consisting of all the even elements of A, followed by all the odd elements of A.\r\n\r\nYou may return any answer array that satisfies this condition.\r\n\r\n \r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [3,1,2,4]\r\nOutput: [2,4,3,1]\r\nThe outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 5000\r\n\t0 <= A[i] <= 5000\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<int> sortArrayByParity(vector<int>& A) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int[] sortArrayByParity(int[] A) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def sortArrayByParity(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: List[int]\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def sortArrayByParity(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: List[int]\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"/**\n * Return an array of size *returnSize.\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* sortArrayByParity(int* A, int ASize, int* returnSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int[] SortArrayByParity(int[] A) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} A\n * @return {number[]}\n */\nvar sortArrayByParity = function(A) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\n# @return {Integer[]}\ndef sort_array_by_parity(a)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func sortArrayByParity(_ A: [Int]) -> [Int] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func sortArrayByParity(A []int) []int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def sortArrayByParity(A: Array[Int]): Array[Int] = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun sortArrayByParity(A: IntArray): IntArray {\n        \n    }\n}"}],"testcase":"[3,1,2,4]","testable":true,"templateMeta":{"name":"sortArrayByParity","params":[{"name":"A","type":"integer[]"}],"return":{"type":"integer[]"}}}
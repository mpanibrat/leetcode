{"id":788,"fid":774,"name":"Minimize Max Distance to Gas Station","slug":"minimize-max-distance-to-gas-station","link":"https://leetcode.com/problems/minimize-max-distance-to-gas-station/description/","percent":36.778875472618616,"level":"Hard","category":"algorithms","totalAC":"6K","totalSubmit":"16.4K","desc":"On a horizontal number line, we have gas stations at positions stations[0], stations[1], ..., stations[N-1], where N = stations.length.\r\n\r\nNow, we add K more gas stations so that D, the maximum distance between adjacent gas stations, is minimized.\r\n\r\nReturn the smallest possible value of D.\r\n\r\nExample:\r\n\r\n\r\nInput: stations = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], K = 9\r\nOutput: 0.500000\r\n\r\n\r\nNote:\r\n\r\n\r\n\tstations.length will be an integer in range [10, 2000].\r\n\tstations[i] will be an integer in range [0, 10^8].\r\n\tK will be an integer in range [1, 10^6].\r\n\tAnswers within 10^-6 of the true value will be accepted as correct.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    double minmaxGasDist(vector<int>& stations, int K) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public double minmaxGasDist(int[] stations, int K) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minmaxGasDist(self, stations, K):\n        \"\"\"\n        :type stations: List[int]\n        :type K: int\n        :rtype: float\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minmaxGasDist(self, stations, K):\n        \"\"\"\n        :type stations: List[int]\n        :type K: int\n        :rtype: float\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"double minmaxGasDist(int* stations, int stationsSize, int K) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public double MinmaxGasDist(int[] stations, int K) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} stations\n * @param {number} K\n * @return {number}\n */\nvar minmaxGasDist = function(stations, K) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} stations\n# @param {Integer} k\n# @return {Float}\ndef minmax_gas_dist(stations, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minmaxGasDist(_ stations: [Int], _ K: Int) -> Double {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func minmaxGasDist(stations []int, K int) float64 {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minmaxGasDist(stations: Array[Int], K: Int): Double = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minmaxGasDist(stations: IntArray, K: Int): Double {\n        \n    }\n}"}],"testcase":"[1,2,3,4,5,6,7,8,9,10]\n9","testable":true,"templateMeta":{"name":"minmaxGasDist","params":[{"name":"stations","type":"integer[]"},{"name":"K","type":"integer"}],"return":{"type":"double"}}}
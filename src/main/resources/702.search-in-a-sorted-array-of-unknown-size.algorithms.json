{"id":786,"fid":702,"name":"Search in a Sorted Array of Unknown Size","slug":"search-in-a-sorted-array-of-unknown-size","link":"https://leetcode.com/problems/search-in-a-sorted-array-of-unknown-size/description/","percent":42.58044361137144,"level":"Medium","category":"algorithms","totalAC":"2.7K","totalSubmit":"6.4K","desc":"Given an integer array sorted in ascending order, write a function to search target in nums.  If target exists, then return its index, otherwise return -1. However, the array size is unknown to you. You may only access the array using an ArrayReader interface, where ArrayReader.get(k) returns the element of the array at index k (0-indexed).\r\n\r\nYou may assume all integers in the array are less than 10000, and if you access the array out of bounds, ArrayReader.get will return 2147483647.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: array = [-1,0,3,5,9,12], target = 9\r\nOutput: 4\r\nExplanation: 9 exists in nums and its index is 4\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: array = [-1,0,3,5,9,12], target = 2\r\nOutput: -1\r\nExplanation: 2 does not exist in nums so return -1\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tYou may assume that all elements in the array are unique.\r\n\tThe value of each element in the array will be in the range [-9999, 9999].\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"// Forward declaration of ArrayReader class.\r\nclass ArrayReader;\r\n\r\nclass Solution {\r\npublic:\r\n    int search(const ArrayReader& reader, int target) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int search(ArrayReader reader, int target) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def search(self, reader, target):\r\n        \"\"\"\r\n        :type reader: ArrayReader\r\n        :type target: int\r\n        :rtype: int\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def search(self, reader, target):\r\n        \"\"\"\r\n        :type reader: ArrayReader\r\n        :type target: int\r\n        :rtype: int\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"// Forward declaration of ArrayReader's getElement API.\r\nint getElement(struct ArrayReader* reader, int index);\r\n\r\nint search(struct ArrayReader* reader, int target) {\r\n    \r\n}"}],"testcase":"[-1,0,3,5,9,12]\n9","testable":true,"templateMeta":{"name":"search","params":[{"name":"reader","type":"ArrayReader"},{"name":"target","type":"integer"}],"return":{"type":"integer"},"generatedriver":false,"generatedefinition":false}}
{"id":678,"fid":678,"name":"Valid Parenthesis String","slug":"valid-parenthesis-string","link":"https://leetcode.com/problems/valid-parenthesis-string/description/","percent":30.487112914596192,"level":"Medium","category":"algorithms","totalAC":"17.7K","totalSubmit":"58.2K","desc":"\r\nGiven a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:\r\n\r\nAny left parenthesis '(' must have a corresponding right parenthesis ')'.\r\nAny right parenthesis ')' must have a corresponding left parenthesis '('.\r\nLeft parenthesis '(' must go before the corresponding right parenthesis ')'.\r\n'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.\r\nAn empty string is also valid.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"()\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"(*)\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"(*))\"\r\nOutput: True\r\n\r\n\r\n\r\nNote:\r\n\r\nThe string size will be in the range [1, 100].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool checkValidString(string s) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean checkValidString(String s) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def checkValidString(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def checkValidString(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool checkValidString(char* s) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool CheckValidString(string s) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @return {boolean}\r\n */\r\nvar checkValidString = function(s) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @return {Boolean}\r\ndef check_valid_string(s)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func checkValidString(_ s: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func checkValidString(s string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def checkValidString(s: String): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun checkValidString(s: String): Boolean {\n        \n    }\n}"}],"testcase":"\"()\"","testable":true,"templateMeta":{"name":"checkValidString","params":[{"name":"s","type":"string"}],"return":{"type":"boolean"}}}
{"id":938,"fid":902,"name":"Numbers At Most N Given Digit Set","slug":"numbers-at-most-n-given-digit-set","link":"https://leetcode.com/problems/numbers-at-most-n-given-digit-set/description/","percent":26.072992700729927,"level":"Hard","category":"algorithms","totalAC":"2.7K","totalSubmit":"10.3K","desc":"We have a sorted set of digits D, a non-empty subset of {'1','2','3','4','5','6','7','8','9'}.  (Note that '0' is not included.)\r\n\r\nNow, we write numbers using these digits, using each digit as many times as we want.  For example, if D = {'1','3','5'}, we may write numbers such as '13', '551', '1351315'.\r\n\r\nReturn the number of positive integers that can be written (using the digits of D) that are less than or equal to N.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: D = [\"1\",\"3\",\"5\",\"7\"], N = 100\r\nOutput: 20\r\nExplanation: \r\nThe 20 numbers that can be written are:\r\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: D = [\"1\",\"4\",\"9\"], N = 1000000000\r\nOutput: 29523\r\nExplanation: \r\nWe can write 3 one digit numbers, 9 two digit numbers, 27 three digit numbers,\r\n81 four digit numbers, 243 five digit numbers, 729 six digit numbers,\r\n2187 seven digit numbers, 6561 eight digit numbers, and 19683 nine digit numbers.\r\nIn total, this is 29523 integers that can be written using the digits of D.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tD is a subset of digits '1'-'9' in sorted order.\r\n\t1 <= N <= 10^9\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int atMostNGivenDigitSet(vector<string>& D, int N) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int atMostNGivenDigitSet(String[] D, int N) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def atMostNGivenDigitSet(self, D, N):\n        \"\"\"\n        :type D: List[str]\n        :type N: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def atMostNGivenDigitSet(self, D, N):\n        \"\"\"\n        :type D: List[str]\n        :type N: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int atMostNGivenDigitSet(char** D, int DSize, int N) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int AtMostNGivenDigitSet(string[] D, int N) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string[]} D\n * @param {number} N\n * @return {number}\n */\nvar atMostNGivenDigitSet = function(D, N) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String[]} d\n# @param {Integer} n\n# @return {Integer}\ndef at_most_n_given_digit_set(d, n)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func atMostNGivenDigitSet(_ D: [String], _ N: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func atMostNGivenDigitSet(D []string, N int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def atMostNGivenDigitSet(D: Array[String], N: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun atMostNGivenDigitSet(D: Array<String>, N: Int): Int {\n        \n    }\n}"}],"testcase":"[\"1\",\"3\",\"5\",\"7\"]\n100","testable":true,"templateMeta":{"name":"atMostNGivenDigitSet","params":[{"name":"D","type":"string[]"},{"name":"N","type":"integer"}],"return":{"type":"integer"}}}
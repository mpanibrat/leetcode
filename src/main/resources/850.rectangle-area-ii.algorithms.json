{"id":880,"fid":850,"name":"Rectangle Area II","slug":"rectangle-area-ii","link":"https://leetcode.com/problems/rectangle-area-ii/description/","percent":41.666666666666664,"level":"Hard","category":"algorithms","totalAC":"3.1K","totalSubmit":"7.5K","desc":"We are given a list of (axis-aligned) rectangles.  Each rectangle[i] = [x1, y1, x2, y2] , where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the ith rectangle.\r\n\r\nFind the total area covered by all rectangles in the plane.  Since the answer may be too large, return it modulo 10^9 + 7.\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [[0,0,2,2],[1,0,2,3],[1,0,3,1]]\r\nOutput: 6\r\nExplanation: As illustrated in the picture.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[0,0,1000000000,1000000000]]\r\nOutput: 49\r\nExplanation: The answer is 10^18 modulo (10^9 + 7), which is (10^9)^2 = (-7)^2 = 49.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= rectangles.length <= 200\r\n\trectanges[i].length = 4\r\n\t0 <= rectangles[i][j] <= 10^9\r\n\tThe total area covered by all rectangles will never exceed 2^63 - 1 and thus will fit in a 64-bit signed integer.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int rectangleArea(vector<vector<int>>& rectangles) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int rectangleArea(int[][] rectangles) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def rectangleArea(self, rectangles):\r\n        \"\"\"\r\n        :type rectangles: List[List[int]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def rectangleArea(self, rectangles):\r\n        \"\"\"\r\n        :type rectangles: List[List[int]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int rectangleArea(int** rectangles, int rectanglesRowSize, int *rectanglesColSizes) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int RectangleArea(int[][] rectangles) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} rectangles\r\n * @return {number}\r\n */\r\nvar rectangleArea = function(rectangles) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} rectangles\r\n# @return {Integer}\r\ndef rectangle_area(rectangles)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func rectangleArea(_ rectangles: [[Int]]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func rectangleArea(rectangles [][]int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def rectangleArea(rectangles: Array[Array[Int]]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun rectangleArea(rectangles: Array<IntArray>): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[[0,0,2,2],[1,0,2,3],[1,0,3,1]]","testable":true,"templateMeta":{"name":"rectangleArea","params":[{"name":"rectangles","type":"integer[][]"}],"return":{"type":"integer"}}}
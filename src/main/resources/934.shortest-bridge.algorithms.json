{"id":971,"fid":934,"name":"Shortest Bridge","slug":"shortest-bridge","link":"https://leetcode.com/problems/shortest-bridge/description/","percent":41.008105369807495,"level":"Medium","category":"algorithms","totalAC":"1.6K","totalSubmit":"4K","desc":"In a given 2D binary array A, there are two islands.  (An island is a 4-directionally connected group of 1s not connected to any other 1s.)\r\n\r\nNow, we may change 0s to 1s so as to connect the two islands together to form 1 island.\r\n\r\nReturn the smallest number of 0s that must be flipped.  (It is guaranteed that the answer is at least 1.)\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: [[0,1],[1,0]]\r\nOutput: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [[0,1,0],[0,0,0],[0,0,1]]\r\nOutput: 2\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\r\nOutput: 1\r\n\r\n \r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length = A[0].length <= 100\r\n\tA[i][j] == 0 or A[i][j] == 1\r\n\r\n\r\n\r\n\r\n \r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int shortestBridge(vector<vector<int>>& A) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int shortestBridge(int[][] A) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def shortestBridge(self, A):\n        \"\"\"\n        :type A: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def shortestBridge(self, A):\n        \"\"\"\n        :type A: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int shortestBridge(int** A, int ARowSize, int *AColSizes) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int ShortestBridge(int[][] A) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} A\n * @return {number}\n */\nvar shortestBridge = function(A) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} a\n# @return {Integer}\ndef shortest_bridge(a)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func shortestBridge(_ A: [[Int]]) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func shortestBridge(A [][]int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def shortestBridge(A: Array[Array[Int]]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun shortestBridge(A: Array<IntArray>): Int {\n        \n    }\n}"}],"testcase":"[[0,1],[1,0]]","testable":true,"templateMeta":{"name":"shortestBridge","params":[{"name":"A","type":"integer[][]"}],"return":{"type":"integer"}}}
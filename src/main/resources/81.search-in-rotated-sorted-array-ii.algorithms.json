{"id":81,"fid":81,"name":"Search in Rotated Sorted Array II","slug":"search-in-rotated-sorted-array-ii","link":"https://leetcode.com/problems/search-in-rotated-sorted-array-ii/description/","percent":32.38607166082302,"level":"Medium","category":"algorithms","totalAC":"142.4K","totalSubmit":"439.8K","desc":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).\r\n\r\nYou are given a target value to search. If found in the array return true, otherwise return false.\r\n\r\nExample 1:\r\n\r\n\r\nInput: nums = [2,5,6,0,0,1,2], target = 0\r\nOutput: true\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: nums = [2,5,6,0,0,1,2], target = 3\r\nOutput: false\r\n\r\nFollow up:\r\n\r\n\r\n\tThis is a follow up problem toÂ Search in Rotated Sorted Array, where nums may contain duplicates.\r\n\tWould this affect the run-time complexity? How and why?\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool search(vector<int>& nums, int target) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean search(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def search(self, nums, target):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type target: int\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def search(self, nums, target):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type target: int\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool search(int* nums, int numsSize, int target) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool Search(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @param {number} target\r\n * @return {boolean}\r\n */\r\nvar search = function(nums, target) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @param {Integer} target\r\n# @return {Boolean}\r\ndef search(nums, target)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func search(_ nums: [Int], _ target: Int) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func search(nums []int, target int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def search(nums: Array[Int], target: Int): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun search(nums: IntArray, target: Int): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"[2,5,6,0,0,1,2]\n0","testable":true,"templateMeta":{"name":"search","params":[{"name":"nums","type":"integer[]"},{"name":"target","type":"integer"}],"return":{"type":"boolean"}}}
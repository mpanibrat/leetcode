{"id":301,"fid":301,"name":"Remove Invalid Parentheses","slug":"remove-invalid-parentheses","link":"https://leetcode.com/problems/remove-invalid-parentheses/description/","percent":36.98675536838021,"level":"Hard","category":"algorithms","totalAC":"91.5K","totalSubmit":"247.4K","desc":"Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.\r\n\r\nNote:Â The input string may contain letters other than the parentheses ( and ).\r\n\r\nExample 1:\r\n\r\n\r\nInput: \"()())()\"\r\nOutput: [\"()()()\", \"(())()\"]\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"(a)())()\"\r\nOutput: [\"(a)()()\", \"(a())()\"]\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \")(\"\r\nOutput: [\"\"]\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<string> removeInvalidParentheses(string s) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public List<String> removeInvalidParentheses(String s) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def removeInvalidParentheses(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: List[str]\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def removeInvalidParentheses(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: List[str]\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nchar** removeInvalidParentheses(char* s, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public IList<string> RemoveInvalidParentheses(string s) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @return {string[]}\r\n */\r\nvar removeInvalidParentheses = function(s) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @return {String[]}\r\ndef remove_invalid_parentheses(s)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func removeInvalidParentheses(_ s: String) -> [String] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func removeInvalidParentheses(s string) []string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def removeInvalidParentheses(s: String): List[String] = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun removeInvalidParentheses(s: String): List<String> {\r\n        \r\n    }\r\n}"}],"testcase":"\"()())()\"","testable":true,"templateMeta":{"name":"removeInvalidParentheses","params":[{"name":"s","type":"string"}],"return":{"type":"list<string>"}}}
{"id":748,"fid":747,"name":"Largest Number At Least Twice of Others","slug":"largest-number-at-least-twice-of-others","link":"https://leetcode.com/problems/largest-number-at-least-twice-of-others/description/","percent":39.903783334323215,"level":"Easy","category":"algorithms","totalAC":"33.6K","totalSubmit":"84.2K","desc":"In a given integer array nums, there is always exactly one largest element.\r\n\r\nFind whether the largest element in the array is at least twice as much as every other number in the array.\r\n\r\nIf it is, return the index of the largest element, otherwise return -1.\r\n\r\nExample 1:\r\n\r\n\r\nInput: nums = [3, 6, 1, 0]\r\nOutput: 1\r\nExplanation: 6 is the largest integer, and for every other number in the array x,\r\n6 is more than twice as big as x.  The index of value 6 is 1, so we return 1.\r\n\r\n\r\n \r\n\r\nExample 2:\r\n\r\n\r\nInput: nums = [1, 2, 3, 4]\r\nOutput: -1\r\nExplanation: 4 isn't at least as big as twice the value of 3, so we return -1.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tnums will have a length in the range [1, 50].\r\n\tEvery nums[i] will be an integer in the range [0, 99].\r\n\r\n\r\n \r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int dominantIndex(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int dominantIndex(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def dominantIndex(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def dominantIndex(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int dominantIndex(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int DominantIndex(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar dominantIndex = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef dominant_index(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func dominantIndex(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func dominantIndex(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def dominantIndex(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun dominantIndex(nums: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[0,0,0,1]","testable":true,"templateMeta":{"name":"dominantIndex","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
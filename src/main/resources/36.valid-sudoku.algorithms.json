{"id":36,"fid":36,"name":"Valid Sudoku","slug":"valid-sudoku","link":"https://leetcode.com/problems/valid-sudoku/description/","percent":39.98933963045468,"level":"Medium","category":"algorithms","totalAC":"188.3K","totalSubmit":"470.9K","desc":"Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:\r\n\r\n\r\n\tEach row must contain the digits 1-9 without repetition.\r\n\tEach column must contain the digits 1-9 without repetition.\r\n\tEach of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition.\r\n\r\n\r\n\r\nA partially filled sudoku which is valid.\r\n\r\nThe Sudoku board could be partially filled, where empty cells are filled with the character '.'.\r\n\r\nExample 1:\r\n\r\n\r\nInput:\r\n[\r\n  [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\r\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\r\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\r\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\r\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\r\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\r\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\r\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\r\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\r\n]\r\nOutput: true\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput:\r\n[\r\n  [\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\r\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\r\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\r\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\r\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\r\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\r\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\r\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\r\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\r\n]\r\nOutput: false\r\nExplanation: Same as Example 1, except with the 5 in the top left corner being \r\n    modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tA Sudoku board (partially filled) could be valid but is not necessarily solvable.\r\n\tOnly the filled cells need to be validated according to the mentioned rules.\r\n\tThe given board contain only digits 1-9 and the character '.'.\r\n\tThe given board size is always 9x9.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isValidSudoku(vector<vector<char>>& board) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isValidSudoku(char[][] board) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isValidSudoku(self, board):\r\n        \"\"\"\r\n        :type board: List[List[str]]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isValidSudoku(self, board):\r\n        \"\"\"\r\n        :type board: List[List[str]]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool isValidSudoku(char** board, int boardRowSize, int boardColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsValidSudoku(char[,] board) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {character[][]} board\r\n * @return {boolean}\r\n */\r\nvar isValidSudoku = function(board) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Character[][]} board\r\n# @return {Boolean}\r\ndef is_valid_sudoku(board)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isValidSudoku(_ board: [[Character]]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isValidSudoku(board [][]byte) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isValidSudoku(board: Array[Array[Char]]): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isValidSudoku(board: Array<CharArray>): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]","testable":true,"templateMeta":{"name":"isValidSudoku","params":[{"name":"board","type":"character[][]"}],"return":{"type":"boolean"}}}
{"id":664,"fid":664,"name":"Strange Printer","slug":"strange-printer","link":"https://leetcode.com/problems/strange-printer/description/","percent":35.27087449308516,"level":"Hard","category":"algorithms","totalAC":"6.8K","totalSubmit":"19.2K","desc":"\r\nThere is a strange printer with the following two special requirements:\r\n\r\n\r\nThe printer can only print a sequence of the same character each time.\r\nAt each turn, the printer can print new characters starting from and ending at any places, and will cover the original existing characters.\r\n\r\n\r\n\r\n\r\n\r\nGiven a string consists of lower English letters only, your job is to count the minimum number of turns the printer needed in order to print it.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"aaabbb\"\r\nOutput: 2\r\nExplanation: Print \"aaa\" first and then print \"bbb\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"aba\"\r\nOutput: 2\r\nExplanation: Print \"aaa\" first and then print \"b\" from the second place of the string, which will cover the existing character 'a'.\r\n\r\n\r\n\r\nHint: Length of the given string will not exceed 100.","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int strangePrinter(string s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int strangePrinter(String s) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def strangePrinter(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def strangePrinter(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int strangePrinter(char* s) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int StrangePrinter(string s) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {number}\n */\nvar strangePrinter = function(s) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {Integer}\ndef strange_printer(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func strangePrinter(_ s: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func strangePrinter(s string) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def strangePrinter(s: String): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun strangePrinter(s: String): Int {\n        \n    }\n}"}],"testcase":"\"aaabbb\"","testable":true,"templateMeta":{"name":"strangePrinter","params":[{"name":"s","type":"string"}],"return":{"type":"integer"}}}
{"id":754,"fid":753,"name":"Cracking the Safe","slug":"cracking-the-safe","link":"https://leetcode.com/problems/cracking-the-safe/description/","percent":42.873150007003126,"level":"Hard","category":"algorithms","totalAC":"9.2K","totalSubmit":"21.4K","desc":"\r\nThere is a box protected by a password.  The password is n digits, where each letter can be one of the first k digits 0, 1, ..., k-1.\r\n\r\nYou can keep inputting the password, the password will automatically be matched against the last n digits entered.\r\n\r\nFor example, assuming the password is \"345\", I can open it when I type \"012345\", but I enter a total of 6 digits.\r\n\r\nPlease return any string of minimum length that is guaranteed to open the box after the entire string is inputted.\r\n\r\n\r\nExample 1:\r\n\r\nInput: n = 1, k = 2\r\nOutput: \"01\"\r\nNote: \"10\" will be accepted too.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: n = 2, k = 2\r\nOutput: \"00110\"\r\nNote: \"01100\", \"10011\", \"11001\" will be accepted too.\r\n\r\n\r\n\r\nNote:\r\n\r\nn will be in the range [1, 4].\r\nk will be in the range [1, 10].\r\nk^n will be at most 4096.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string crackSafe(int n, int k) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String crackSafe(int n, int k) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def crackSafe(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def crackSafe(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: str\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"char* crackSafe(int n, int k) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string CrackSafe(int n, int k) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */\nvar crackSafe = function(n, k) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @param {Integer} k\n# @return {String}\ndef crack_safe(n, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func crackSafe(_ n: Int, _ k: Int) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func crackSafe(n int, k int) string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def crackSafe(n: Int, k: Int): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun crackSafe(n: Int, k: Int): String {\n        \n    }\n}"}],"testcase":"1\n1","testable":true,"templateMeta":{"name":"crackSafe","params":[{"name":"n","type":"integer"},{"name":"k","type":"integer"}],"return":{"type":"string"}}}
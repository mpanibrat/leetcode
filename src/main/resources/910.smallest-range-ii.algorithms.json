{"id":946,"fid":910,"name":"Smallest Range II","slug":"smallest-range-ii","link":"https://leetcode.com/problems/smallest-range-ii/description/","percent":19.677053446320144,"level":"Medium","category":"algorithms","totalAC":"2.9K","totalSubmit":"15K","desc":"Given an array A of integers, for each integer A[i] we need to choose either x = -K or x = K, and add x to A[i] (only once).\r\n\r\nAfter this process, we have some array B.\r\n\r\nReturn the smallest possible difference between the maximum value of B and the minimum value of B.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [1], K = 0\r\nOutput: 0\r\nExplanation: B = [1]\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = [0,10], K = 2\r\nOutput: 6\r\nExplanation: B = [2,8]\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: A = [1,3,6], K = 3\r\nOutput: 3\r\nExplanation: B = [4,6,3]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 10000\r\n\t0 <= A[i] <= 10000\r\n\t0 <= K <= 10000\r\n\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int smallestRangeII(vector<int>& A, int K) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int smallestRangeII(int[] A, int K) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def smallestRangeII(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def smallestRangeII(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int smallestRangeII(int* A, int ASize, int K) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int SmallestRangeII(int[] A, int K) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar smallestRangeII = function(A, K) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\n# @param {Integer} k\n# @return {Integer}\ndef smallest_range_ii(a, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func smallestRangeII(_ A: [Int], _ K: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func smallestRangeII(A []int, K int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def smallestRangeII(A: Array[Int], K: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun smallestRangeII(A: IntArray, K: Int): Int {\n        \n    }\n}"}],"testcase":"[1]\n0","testable":true,"templateMeta":{"name":"smallestRangeII","params":[{"name":"A","type":"integer[]"},{"name":"K","type":"integer"}],"return":{"type":"integer"}}}
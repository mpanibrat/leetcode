{"id":263,"fid":263,"name":"Ugly Number","slug":"ugly-number","link":"https://leetcode.com/problems/ugly-number/description/","percent":40.04457673836237,"level":"Easy","category":"algorithms","totalAC":"138.2K","totalSubmit":"345K","desc":"Write a program to check whether a given number is an ugly number.\r\n\r\nUgly numbers are positive numbers whose prime factors only include 2, 3, 5.\r\n\r\nExample 1:\r\n\r\n\r\nInput: 6\r\nOutput: true\r\nExplanation: 6 = 2 × 3\r\n\r\nExample 2:\r\n\r\n\r\nInput: 8\r\nOutput: true\r\nExplanation: 8 = 2 × 2 × 2\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: 14\r\nOutput: false \r\nExplanation: 14 is not ugly since it includes another prime factor 7.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 is typically treated as an ugly number.\r\n\tInput is within the 32-bit signed integer range: [−231,  231 − 1].\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isUgly(int num) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isUgly(int num) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isUgly(self, num):\r\n        \"\"\"\r\n        :type num: int\r\n        :rtype: bool\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isUgly(self, num):\r\n        \"\"\"\r\n        :type num: int\r\n        :rtype: bool\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"bool isUgly(int num) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsUgly(int num) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} num\r\n * @return {boolean}\r\n */\r\nvar isUgly = function(num) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} num\r\n# @return {Boolean}\r\ndef is_ugly(num)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isUgly(_ num: Int) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isUgly(num int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isUgly(num: Int): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isUgly(num: Int): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"6","testable":true,"templateMeta":{"name":"isUgly","params":[{"name":"num","type":"integer"}],"return":{"type":"boolean"}}}
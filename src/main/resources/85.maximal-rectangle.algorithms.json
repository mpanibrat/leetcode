{"id":85,"fid":85,"name":"Maximal Rectangle","slug":"maximal-rectangle","link":"https://leetcode.com/problems/maximal-rectangle/description/","percent":31.201335848356475,"level":"Hard","category":"algorithms","totalAC":"100.9K","totalSubmit":"323.4K","desc":"Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\r\n\r\nExample:\r\n\r\n\r\nInput:\r\n[\r\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\r\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\r\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\r\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\r\n]\r\nOutput: 6\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maximalRectangle(vector<vector<char>>& matrix) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int maximalRectangle(char[][] matrix) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maximalRectangle(self, matrix):\r\n        \"\"\"\r\n        :type matrix: List[List[str]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def maximalRectangle(self, matrix):\r\n        \"\"\"\r\n        :type matrix: List[List[str]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int maximalRectangle(char** matrix, int matrixRowSize, int matrixColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaximalRectangle(char[,] matrix) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {character[][]} matrix\r\n * @return {number}\r\n */\r\nvar maximalRectangle = function(matrix) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Character[][]} matrix\r\n# @return {Integer}\r\ndef maximal_rectangle(matrix)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maximalRectangle(_ matrix: [[Character]]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func maximalRectangle(matrix [][]byte) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def maximalRectangle(matrix: Array[Array[Char]]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun maximalRectangle(matrix: Array<CharArray>): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]","testable":true,"templateMeta":{"name":"maximalRectangle","params":[{"name":"matrix","type":"character[][]"}],"return":{"type":"integer"}}}
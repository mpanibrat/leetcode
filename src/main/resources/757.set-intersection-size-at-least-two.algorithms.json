{"id":759,"fid":757,"name":"Set Intersection Size At Least Two","slug":"set-intersection-size-at-least-two","link":"https://leetcode.com/problems/set-intersection-size-at-least-two/description/","percent":34.99406880189798,"level":"Hard","category":"algorithms","totalAC":"3.2K","totalSubmit":"9.3K","desc":"\r\nAn integer interval [a, b] (for integers a < b) is a set of all consecutive integers from a to b, including a and b.\r\n\r\nFind the minimum size of a set S such that for every integer interval A in intervals, the intersection of S with A has size at least 2.\r\n\r\n\r\nExample 1:\r\n\r\nInput: intervals = [[1, 3], [1, 4], [2, 5], [3, 5]]\r\nOutput: 3\r\nExplanation:\r\nConsider the set S = {2, 3, 4}.  For each interval, there are at least 2 elements from S in the interval.\r\nAlso, there isn't a smaller size set that fulfills the above condition.\r\nThus, we output the size of this set, which is 3.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: intervals = [[1, 2], [2, 3], [2, 4], [4, 5]]\r\nOutput: 5\r\nExplanation:\r\nAn example of a minimum sized set is {1, 2, 3, 4, 5}.\r\n\r\n\r\n\r\nNote:\r\nintervals will have length in range [1, 3000].\r\nintervals[i] will have length 2, representing some integer interval.\r\nintervals[i][j] will be an integer in [0, 10^8].\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int intersectionSizeTwo(vector<vector<int>>& intervals) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int intersectionSizeTwo(int[][] intervals) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def intersectionSizeTwo(self, intervals):\n        \"\"\"\n        :type intervals: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def intersectionSizeTwo(self, intervals):\n        \"\"\"\n        :type intervals: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int intersectionSizeTwo(int** intervals, int intervalsRowSize, int intervalsColSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int IntersectionSizeTwo(int[,] intervals) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nvar intersectionSizeTwo = function(intervals) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} intervals\n# @return {Integer}\ndef intersection_size_two(intervals)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func intersectionSizeTwo(_ intervals: [[Int]]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func intersectionSizeTwo(intervals [][]int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def intersectionSizeTwo(intervals: Array[Array[Int]]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun intersectionSizeTwo(intervals: Array<IntArray>): Int {\n        \n    }\n}"}],"testcase":"[[1,3],[1,4],[2,5],[3,5]]","testable":true,"templateMeta":{"name":"intersectionSizeTwo","params":[{"name":"intervals","type":"integer[][]"}],"return":{"type":"integer"}}}
{"id":878,"fid":848,"name":"Shifting Letters","slug":"shifting-letters","link":"https://leetcode.com/problems/shifting-letters/description/","percent":36.97210013376648,"level":"Medium","category":"algorithms","totalAC":"7.7K","totalSubmit":"20.9K","desc":"We have a string S of lowercase letters, and an integer array shifts.\r\n\r\nCall the shift of a letter, the next letter in the alphabet, (wrapping around so that 'z' becomes 'a'). \r\n\r\nFor example, shift('a') = 'b', shift('t') = 'u', and shift('z') = 'a'.\r\n\r\nNow for each shifts[i] = x, we want to shift the first i+1 letters of S, x times.\r\n\r\nReturn the final string after all such shifts to S are applied.\r\n\r\nExample 1:\r\n\r\n\r\nInput: S = \"abc\", shifts = [3,5,9]\r\nOutput: \"rpl\"\r\nExplanation: \r\nWe start with \"abc\".\r\nAfter shifting the first 1 letters of S by 3, we have \"dbc\".\r\nAfter shifting the first 2 letters of S by 5, we have \"igc\".\r\nAfter shifting the first 3 letters of S by 9, we have \"rpl\", the answer.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= S.length = shifts.length <= 20000\r\n\t0 <= shifts[i] <= 10 ^ 9\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string shiftingLetters(string S, vector<int>& shifts) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String shiftingLetters(String S, int[] shifts) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def shiftingLetters(self, S, shifts):\n        \"\"\"\n        :type S: str\n        :type shifts: List[int]\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def shiftingLetters(self, S, shifts):\n        \"\"\"\n        :type S: str\n        :type shifts: List[int]\n        :rtype: str\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"char* shiftingLetters(char* S, int* shifts, int shiftsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string ShiftingLetters(string S, int[] shifts) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} S\n * @param {number[]} shifts\n * @return {string}\n */\nvar shiftingLetters = function(S, shifts) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @param {Integer[]} shifts\n# @return {String}\ndef shifting_letters(s, shifts)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func shiftingLetters(_ S: String, _ shifts: [Int]) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func shiftingLetters(S string, shifts []int) string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def shiftingLetters(S: String, shifts: Array[Int]): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun shiftingLetters(S: String, shifts: IntArray): String {\n        \n    }\n}"}],"testcase":"\"abc\"\n[3,5,9]","testable":true,"templateMeta":{"name":"shiftingLetters","params":[{"name":"S","type":"string"},{"name":"shifts","type":"integer[]"}],"return":{"type":"string"}}}
{"id":201,"fid":201,"name":"Bitwise AND of Numbers Range","slug":"bitwise-and-of-numbers-range","link":"https://leetcode.com/problems/bitwise-and-of-numbers-range/description/","percent":35.00187602820777,"level":"Medium","category":"algorithms","totalAC":"72.8K","totalSubmit":"207.9K","desc":"Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [5,7]\r\nOutput: 4\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [0,1]\r\nOutput: 0","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int rangeBitwiseAnd(int m, int n) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int rangeBitwiseAnd(int m, int n) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def rangeBitwiseAnd(self, m, n):\r\n        \"\"\"\r\n        :type m: int\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def rangeBitwiseAnd(self, m, n):\r\n        \"\"\"\r\n        :type m: int\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"int rangeBitwiseAnd(int m, int n) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int RangeBitwiseAnd(int m, int n) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} m\r\n * @param {number} n\r\n * @return {number}\r\n */\r\nvar rangeBitwiseAnd = function(m, n) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} m\r\n# @param {Integer} n\r\n# @return {Integer}\r\ndef range_bitwise_and(m, n)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func rangeBitwiseAnd(_ m: Int, _ n: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func rangeBitwiseAnd(m int, n int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def rangeBitwiseAnd(m: Int, n: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun rangeBitwiseAnd(m: Int, n: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"5\n7","testable":true,"templateMeta":{"name":"rangeBitwiseAnd","params":[{"name":"m","type":"integer"},{"name":"n","type":"integer"}],"return":{"type":"integer"}}}
{"id":6,"fid":6,"name":"ZigZag Conversion","slug":"zigzag-conversion","link":"https://leetcode.com/problems/zigzag-conversion/description/","percent":29.037990551692918,"level":"Medium","category":"algorithms","totalAC":"250.2K","totalSubmit":"861.5K","desc":"The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\r\n\r\n\r\nP   A   H   N\r\nA P L S I I G\r\nY   I   R\r\n\r\n\r\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\r\n\r\nWrite the code that will take a string and make this conversion given a number of rows:\r\n\r\n\r\nstring convert(string s, int numRows);\r\n\r\nExample 1:\r\n\r\n\r\nInput: s = \"PAYPALISHIRING\", numRows = 3\r\nOutput: \"PAHNAPLSIIGYIR\"\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: s = \"PAYPALISHIRING\", numRows = 4\r\nOutput: \"PINALSIGYAHRPI\"\r\nExplanation:\r\n\r\nP     I    N\r\nA   L S  I G\r\nY A   H R\r\nP     I\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    string convert(string s, int numRows) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public String convert(String s, int numRows) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def convert(self, s, numRows):\r\n        \"\"\"\r\n        :type s: str\r\n        :type numRows: int\r\n        :rtype: str\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def convert(self, s, numRows):\r\n        \"\"\"\r\n        :type s: str\r\n        :type numRows: int\r\n        :rtype: str\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"char* convert(char* s, int numRows) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public string Convert(string s, int numRows) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @param {number} numRows\r\n * @return {string}\r\n */\r\nvar convert = function(s, numRows) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @param {Integer} num_rows\r\n# @return {String}\r\ndef convert(s, num_rows)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func convert(_ s: String, _ numRows: Int) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func convert(s string, numRows int) string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def convert(s: String, numRows: Int): String = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun convert(s: String, numRows: Int): String {\r\n        \r\n    }\r\n}"}],"testcase":"\"PAYPALISHIRING\"\n3","testable":true,"templateMeta":{"name":"convert","params":[{"name":"s","type":"string"},{"name":"numRows","type":"integer"}],"return":{"type":"string"}}}
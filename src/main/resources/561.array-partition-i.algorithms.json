{"id":561,"fid":561,"name":"Array Partition I","slug":"array-partition-i","link":"https://leetcode.com/problems/array-partition-i/description/","percent":67.33598409542743,"level":"Easy","category":"algorithms","totalAC":"111.8K","totalSubmit":"166K","desc":"\r\nGiven an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,4,3,2]\r\n\r\nOutput: 4\r\nExplanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).\r\n\r\n\r\n\r\nNote:\r\n\r\nn is a positive integer, which is in the range of [1, 10000].\r\nAll the integers in the array will be in the range of [-10000, 10000].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int arrayPairSum(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int arrayPairSum(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def arrayPairSum(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def arrayPairSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int arrayPairSum(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int ArrayPairSum(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar arrayPairSum = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef array_pair_sum(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func arrayPairSum(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func arrayPairSum(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def arrayPairSum(nums: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun arrayPairSum(nums: IntArray): Int {\n        \n    }\n}"}],"testcase":"[1,4,3,2]","testable":true,"templateMeta":{"name":"arrayPairSum","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
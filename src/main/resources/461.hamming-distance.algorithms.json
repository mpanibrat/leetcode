{"id":461,"fid":461,"name":"Hamming Distance","slug":"hamming-distance","link":"https://leetcode.com/problems/hamming-distance/description/","percent":69.46698658135608,"level":"Easy","category":"algorithms","totalAC":"195.4K","totalSubmit":"281.3K","desc":"The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\r\n\r\nGiven two integers x and y, calculate the Hamming distance.\r\n\r\nNote:\r\n0 ≤ x, y < 231.\r\n\r\n\r\nExample:\r\n\r\nInput: x = 1, y = 4\r\n\r\nOutput: 2\r\n\r\nExplanation:\r\n1   (0 0 0 1)\r\n4   (0 1 0 0)\r\n       ↑   ↑\r\n\r\nThe above arrows point to positions where the corresponding bits are different.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int hammingDistance(int x, int y) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int hammingDistance(int x, int y) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def hammingDistance(self, x, y):\r\n        \"\"\"\r\n        :type x: int\r\n        :type y: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def hammingDistance(self, x, y):\n        \"\"\"\n        :type x: int\n        :type y: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int hammingDistance(int x, int y) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int HammingDistance(int x, int y) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {number}\r\n */\r\nvar hammingDistance = function(x, y) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} x\r\n# @param {Integer} y\r\n# @return {Integer}\r\ndef hamming_distance(x, y)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func hammingDistance(_ x: Int, _ y: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func hammingDistance(x int, y int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def hammingDistance(x: Int, y: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun hammingDistance(x: Int, y: Int): Int {\n        \n    }\n}"}],"testcase":"1\n4","testable":true,"templateMeta":{"name":"hammingDistance","params":[{"name":"x","type":"integer"},{"name":"y","type":"integer"}],"return":{"type":"integer"}}}
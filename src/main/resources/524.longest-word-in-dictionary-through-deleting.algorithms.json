{"id":524,"fid":524,"name":"Longest Word in Dictionary through Deleting","slug":"longest-word-in-dictionary-through-deleting","link":"https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/description/","percent":43.80137371917577,"level":"Medium","category":"algorithms","totalAC":"31.1K","totalSubmit":"71K","desc":"\r\nGiven a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\r\n\r\nExample 1:\r\n\r\nInput:\r\ns = \"abpcplea\", d = [\"ale\",\"apple\",\"monkey\",\"plea\"]\r\n\r\nOutput: \r\n\"apple\"\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\ns = \"abpcplea\", d = [\"a\",\"b\",\"c\"]\r\n\r\nOutput: \r\n\"a\"\r\n\r\n\r\n\r\nNote:\r\n\r\nAll the strings in the input will only contain lower-case letters.\r\nThe size of the dictionary won't exceed 1,000.\r\nThe length of all the strings in the input won't exceed 1,000.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string findLongestWord(string s, vector<string>& d) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String findLongestWord(String s, List<String> d) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def findLongestWord(self, s, d):\n        \"\"\"\n        :type s: str\n        :type d: List[str]\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def findLongestWord(self, s, d):\n        \"\"\"\n        :type s: str\n        :type d: List[str]\n        :rtype: str\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"char* findLongestWord(char* s, char** d, int dSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string FindLongestWord(string s, IList<string> d) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @param {string[]} d\n * @return {string}\n */\nvar findLongestWord = function(s, d) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @param {String[]} d\n# @return {String}\ndef find_longest_word(s, d)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func findLongestWord(_ s: String, _ d: [String]) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func findLongestWord(s string, d []string) string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def findLongestWord(s: String, d: List[String]): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun findLongestWord(s: String, d: List<String>): String {\n        \n    }\n}"}],"testcase":"\"abpcplea\"\n[\"ale\",\"apple\",\"monkey\",\"plea\"]","testable":true,"templateMeta":{"name":"findLongestWord","params":[{"name":"s","type":"string"},{"name":"d","type":"list<string>"}],"return":{"type":"string"}}}
{"id":812,"fid":796,"name":"Rotate String","slug":"rotate-string","link":"https://leetcode.com/problems/rotate-string/description/","percent":48.68163521548063,"level":"Easy","category":"algorithms","totalAC":"26.4K","totalSubmit":"54.2K","desc":"We are given two strings, A and B.\r\n\r\nA shift on A consists of taking string A and moving the leftmost character to the rightmost position. For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. Return True if and only if A can become B after some number of shifts on A.\r\n\r\n\r\nExample 1:\r\nInput: A = 'abcde', B = 'cdeab'\r\nOutput: true\r\n\r\nExample 2:\r\nInput: A = 'abcde', B = 'abced'\r\nOutput: false\r\n\r\n\r\nNote:\r\n\r\n\r\n\tA and B will have length at most 100.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool rotateString(string A, string B) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean rotateString(String A, String B) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def rotateString(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def rotateString(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool rotateString(char* A, char* B) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool RotateString(string A, string B) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} A\n * @param {string} B\n * @return {boolean}\n */\nvar rotateString = function(A, B) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} a\n# @param {String} b\n# @return {Boolean}\ndef rotate_string(a, b)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func rotateString(_ A: String, _ B: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func rotateString(A string, B string) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def rotateString(A: String, B: String): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun rotateString(A: String, B: String): Boolean {\n        \n    }\n}"}],"testcase":"\"abcde\"\n\"cdeab\"","testable":true,"templateMeta":{"name":"rotateString","params":[{"name":"A","type":"string"},{"name":"B","type":"string"}],"return":{"type":"boolean"}}}
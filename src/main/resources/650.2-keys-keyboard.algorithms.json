{"id":650,"fid":650,"name":"2 Keys Keyboard","slug":"2-keys-keyboard","link":"https://leetcode.com/problems/2-keys-keyboard/description/","percent":45.887183396278715,"level":"Medium","category":"algorithms","totalAC":"26.5K","totalSubmit":"57.7K","desc":"\r\nInitially on a notepad only one character 'A' is present. You can perform two operations on this notepad for each step: \r\n\r\nCopy All: You can copy all the characters present on the notepad (partial copy is not allowed).\r\nPaste: You can paste the characters which are copied last time.\r\n\r\n\r\n\r\n\r\nGiven a number n. You have to get exactly n 'A' on the notepad by performing the minimum number of steps permitted. Output the minimum number of steps to get n 'A'. \r\n\r\n\r\nExample 1:\r\n\r\nInput: 3\r\nOutput: 3\r\nExplanation:\r\nIntitally, we have one character 'A'.\r\nIn step 1, we use Copy All operation.\r\nIn step 2, we use Paste operation to get 'AA'.\r\nIn step 3, we use Paste operation to get 'AAA'.\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe n will be in the range [1, 1000].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int minSteps(int n) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minSteps(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def minSteps(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def minSteps(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int minSteps(int n) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MinSteps(int n) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} n\r\n * @return {number}\r\n */\r\nvar minSteps = function(n) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\r\n# @return {Integer}\r\ndef min_steps(n)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minSteps(_ n: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func minSteps(n int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minSteps(n: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minSteps(n: Int): Int {\n        \n    }\n}"}],"testcase":"3","testable":true,"templateMeta":{"name":"minSteps","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}
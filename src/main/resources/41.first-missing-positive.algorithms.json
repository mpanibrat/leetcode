{"id":41,"fid":41,"name":"First Missing Positive","slug":"first-missing-positive","link":"https://leetcode.com/problems/first-missing-positive/description/","percent":27.082271634812972,"level":"Hard","category":"algorithms","totalAC":"164.7K","totalSubmit":"608.3K","desc":"Given an unsorted integer array, find the smallest missingÂ positive integer.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [1,2,0]\r\nOutput: 3\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [3,4,-1,1]\r\nOutput: 2\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: [7,8,9,11,12]\r\nOutput: 1\r\n\r\n\r\nNote:\r\n\r\nYour algorithm should run in O(n) time and uses constant extra space.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int firstMissingPositive(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int firstMissingPositive(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def firstMissingPositive(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def firstMissingPositive(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int firstMissingPositive(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int FirstMissingPositive(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar firstMissingPositive = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef first_missing_positive(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func firstMissingPositive(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func firstMissingPositive(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def firstMissingPositive(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun firstMissingPositive(nums: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[1,2,0]","testable":true,"templateMeta":{"name":"firstMissingPositive","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
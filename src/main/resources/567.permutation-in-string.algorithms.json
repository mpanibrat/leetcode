{"id":567,"fid":567,"name":"Permutation in String","slug":"permutation-in-string","link":"https://leetcode.com/problems/permutation-in-string/description/","percent":36.65532439653794,"level":"Medium","category":"algorithms","totalAC":"32.1K","totalSubmit":"87.6K","desc":"Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.\r\n\r\nExample 1:\r\n\r\nInput:s1 = \"ab\" s2 = \"eidbaooo\"\r\nOutput:True\r\nExplanation: s2 contains one permutation of s1 (\"ba\").\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:s1= \"ab\" s2 = \"eidboaoo\"\r\nOutput: False\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input strings only contain lower case letters.\r\nThe length of both given strings is in range [1, 10,000].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool checkInclusion(string s1, string s2) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean checkInclusion(String s1, String s2) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def checkInclusion(self, s1, s2):\r\n        \"\"\"\r\n        :type s1: str\r\n        :type s2: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def checkInclusion(self, s1, s2):\n        \"\"\"\n        :type s1: str\n        :type s2: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool checkInclusion(char* s1, char* s2) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool CheckInclusion(string s1, string s2) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s1\r\n * @param {string} s2\r\n * @return {boolean}\r\n */\r\nvar checkInclusion = function(s1, s2) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s1\r\n# @param {String} s2\r\n# @return {Boolean}\r\ndef check_inclusion(s1, s2)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func checkInclusion(_ s1: String, _ s2: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func checkInclusion(s1 string, s2 string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def checkInclusion(s1: String, s2: String): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun checkInclusion(s1: String, s2: String): Boolean {\n        \n    }\n}"}],"testcase":"\"ab\"\n\"eidbaooo\"","testable":true,"templateMeta":{"name":"checkInclusion","params":[{"name":"s1","type":"string"},{"name":"s2","type":"string"}],"return":{"type":"boolean"}}}
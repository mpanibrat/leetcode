{"id":680,"fid":680,"name":"Valid Palindrome II","slug":"valid-palindrome-ii","link":"https://leetcode.com/problems/valid-palindrome-ii/description/","percent":32.80739644575984,"level":"Easy","category":"algorithms","totalAC":"49.2K","totalSubmit":"150K","desc":"\r\nGiven a non-empty string s, you may delete at most one character.  Judge whether you can make it a palindrome.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"aba\"\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"abca\"\r\nOutput: True\r\nExplanation: You could delete the character 'c'.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe string will only contain lowercase characters a-z.\r\nThe maximum length of the string is 50000.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool validPalindrome(string s) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean validPalindrome(String s) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def validPalindrome(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def validPalindrome(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool validPalindrome(char* s) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool ValidPalindrome(string s) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @return {boolean}\r\n */\r\nvar validPalindrome = function(s) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @return {Boolean}\r\ndef valid_palindrome(s)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func validPalindrome(_ s: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func validPalindrome(s string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def validPalindrome(s: String): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun validPalindrome(s: String): Boolean {\n        \n    }\n}"}],"testcase":"\"aba\"","testable":true,"templateMeta":{"name":"validPalindrome","params":[{"name":"s","type":"string"}],"return":{"type":"boolean"}}}
{"id":481,"fid":481,"name":"Magical String","slug":"magical-string","link":"https://leetcode.com/problems/magical-string/description/","percent":45.48481065334998,"level":"Medium","category":"algorithms","totalAC":"16.4K","totalSubmit":"36K","desc":"\r\nA magical string S consists of only '1' and '2' and obeys the following rules:\r\n\r\n\r\nThe string S is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string S itself.\r\n\r\n\r\n\r\nThe first few elements of string S is the following:\r\nS = \"1221121221221121122……\"\r\n\r\n\r\n\r\nIf we group the consecutive '1's and '2's in S, it will be:\r\n\r\n\r\n1   22  11  2  1  22  1  22  11  2  11  22 ......\r\n\r\n\r\nand the occurrences of '1's or '2's in each group are:\r\n\r\n\r\n1   2\t   2    1   1    2     1    2     2    1    2    2 ......\r\n\r\n\r\n\r\nYou can see that the occurrence sequence above is the S itself. \r\n\r\n\r\n\r\nGiven an integer N as input, return the number of '1's in the first N number in the magical string S.\r\n\r\n\r\nNote:\r\nN will not exceed 100,000.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: 6\r\nOutput: 3\r\nExplanation: The first 6 elements of magical string S is \"12211\" and it contains three 1's, so return 3.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int magicalString(int n) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int magicalString(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def magicalString(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def magicalString(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int magicalString(int n) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MagicalString(int n) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} n\r\n * @return {number}\r\n */\r\nvar magicalString = function(n) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\r\n# @return {Integer}\r\ndef magical_string(n)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func magicalString(_ n: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func magicalString(n int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def magicalString(n: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun magicalString(n: Int): Int {\n        \n    }\n}"}],"testcase":"1","testable":true,"templateMeta":{"name":"magicalString","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}
{"id":493,"fid":493,"name":"Reverse Pairs","slug":"reverse-pairs","link":"https://leetcode.com/problems/reverse-pairs/description/","percent":21.384686037707745,"level":"Hard","category":"algorithms","totalAC":"17.2K","totalSubmit":"80.6K","desc":"Given an array nums, we call (i, j) an important reverse pair if i < j and nums[i] > 2*nums[j].\r\n\r\nYou need to return the number of important reverse pairs in the given array.\r\n\r\nExample1:\r\n\r\nInput: [1,3,2,3,1]\r\nOutput: 2\r\n\r\n\r\nExample2:\r\n\r\nInput: [2,4,3,5,1]\r\nOutput: 3\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array will not exceed 50,000.\r\nAll the numbers in the input array are in the range of 32-bit integer.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int reversePairs(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int reversePairs(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def reversePairs(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def reversePairs(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int reversePairs(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int ReversePairs(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar reversePairs = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef reverse_pairs(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func reversePairs(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func reversePairs(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def reversePairs(nums: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun reversePairs(nums: IntArray): Int {\n        \n    }\n}"}],"testcase":"[1,3,2,3,1]","testable":true,"templateMeta":{"name":"reversePairs","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
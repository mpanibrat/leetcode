{"id":712,"fid":712,"name":"Minimum ASCII Delete Sum for Two Strings","slug":"minimum-ascii-delete-sum-for-two-strings","link":"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/description/","percent":52.236567791960795,"level":"Medium","category":"algorithms","totalAC":"14.3K","totalSubmit":"27.3K","desc":"Given two strings s1, s2, find the lowest ASCII sum of deleted characters to make two strings equal.\r\n\r\nExample 1:\r\n\r\nInput: s1 = \"sea\", s2 = \"eat\"\r\nOutput: 231\r\nExplanation: Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\r\nDeleting \"t\" from \"eat\" adds 116 to the sum.\r\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: s1 = \"delete\", s2 = \"leet\"\r\nOutput: 403\r\nExplanation: Deleting \"dee\" from \"delete\" to turn the string into \"let\",\r\nadds 100[d]+101[e]+101[e] to the sum.  Deleting \"e\" from \"leet\" adds 101[e] to the sum.\r\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\r\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\r\n\r\n\r\n\r\nNote:\r\n0 < s1.length, s2.length .\r\nAll elements of each string will have an ASCII value in [97, 122]. \r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int minimumDeleteSum(string s1, string s2) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minimumDeleteSum(String s1, String s2) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minimumDeleteSum(self, s1, s2):\n        \"\"\"\n        :type s1: str\n        :type s2: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minimumDeleteSum(self, s1, s2):\n        \"\"\"\n        :type s1: str\n        :type s2: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int minimumDeleteSum(char* s1, char* s2) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MinimumDeleteSum(string s1, string s2) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s1\n * @param {string} s2\n * @return {number}\n */\nvar minimumDeleteSum = function(s1, s2) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s1\n# @param {String} s2\n# @return {Integer}\ndef minimum_delete_sum(s1, s2)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minimumDeleteSum(_ s1: String, _ s2: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func minimumDeleteSum(s1 string, s2 string) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minimumDeleteSum(s1: String, s2: String): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minimumDeleteSum(s1: String, s2: String): Int {\n        \n    }\n}"}],"testcase":"\"sea\"\n\"eat\"","testable":true,"templateMeta":{"name":"minimumDeleteSum","params":[{"name":"s1","type":"string"},{"name":"s2","type":"string"}],"return":{"type":"integer"}}}
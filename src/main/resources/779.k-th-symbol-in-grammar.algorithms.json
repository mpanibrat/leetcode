{"id":795,"fid":779,"name":"K-th Symbol in Grammar","slug":"k-th-symbol-in-grammar","link":"https://leetcode.com/problems/k-th-symbol-in-grammar/description/","percent":37.36867239732569,"level":"Medium","category":"algorithms","totalAC":"7.8K","totalSubmit":"20.9K","desc":"On the first row, we write a 0. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.\r\n\r\nGiven row N and index K, return the K-th indexed symbol in row N. (The values of K are 1-indexed.) (1 indexed).\r\n\r\n\r\nExamples:\r\nInput: N = 1, K = 1\r\nOutput: 0\r\n\r\nInput: N = 2, K = 1\r\nOutput: 0\r\n\r\nInput: N = 2, K = 2\r\nOutput: 1\r\n\r\nInput: N = 4, K = 5\r\nOutput: 1\r\n\r\nExplanation:\r\nrow 1: 0\r\nrow 2: 01\r\nrow 3: 0110\r\nrow 4: 01101001\r\n\r\n\r\nNote:\r\n\r\n\r\n\tN will be an integer in the range [1, 30].\r\n\tK will be an integer in the range [1, 2^(N-1)].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int kthGrammar(int N, int K) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int kthGrammar(int N, int K) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def kthGrammar(self, N, K):\r\n        \"\"\"\r\n        :type N: int\r\n        :type K: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def kthGrammar(self, N, K):\r\n        \"\"\"\r\n        :type N: int\r\n        :type K: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int kthGrammar(int N, int K) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int KthGrammar(int N, int K) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} N\r\n * @param {number} K\r\n * @return {number}\r\n */\r\nvar kthGrammar = function(N, K) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\r\n# @param {Integer} k\r\n# @return {Integer}\r\ndef kth_grammar(n, k)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func kthGrammar(_ N: Int, _ K: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func kthGrammar(N int, K int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def kthGrammar(N: Int, K: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun kthGrammar(N: Int, K: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"1\n1","testable":true,"templateMeta":{"name":"kthGrammar","params":[{"name":"N","type":"integer"},{"name":"K","type":"integer"}],"return":{"type":"integer"}}}
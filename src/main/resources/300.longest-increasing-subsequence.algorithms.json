{"id":300,"fid":300,"name":"Longest Increasing Subsequence","slug":"longest-increasing-subsequence","link":"https://leetcode.com/problems/longest-increasing-subsequence/description/","percent":39.458832441645754,"level":"Medium","category":"algorithms","totalAC":"166.7K","totalSubmit":"422.4K","desc":"Given an unsorted array of integers, find the length of longest increasing subsequence.\r\n\r\nExample:\r\n\r\n\r\nInput: [10,9,2,5,3,7,101,18]\r\nOutput: 4 \r\nExplanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. \r\n\r\nNote: \r\n\r\n\r\n\tThere may be more than one LIS combination, it is only necessary for you to return the length.\r\n\tYour algorithm should run in O(n2) complexity.\r\n\r\n\r\nFollow up: Could you improve it to O(n log n) time complexity?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int lengthOfLIS(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int lengthOfLIS(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def lengthOfLIS(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def lengthOfLIS(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"int lengthOfLIS(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int LengthOfLIS(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar lengthOfLIS = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef length_of_lis(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func lengthOfLIS(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func lengthOfLIS(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def lengthOfLIS(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun lengthOfLIS(nums: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[10,9,2,5,3,7,101,18]","testable":true,"templateMeta":{"name":"lengthOfLIS","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
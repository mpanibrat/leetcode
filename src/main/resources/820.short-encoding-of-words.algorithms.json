{"id":839,"fid":820,"name":"Short Encoding of Words","slug":"short-encoding-of-words","link":"https://leetcode.com/problems/short-encoding-of-words/description/","percent":44.50751519027822,"level":"Medium","category":"algorithms","totalAC":"5.6K","totalSubmit":"12.5K","desc":"Given a list of words, we may encode it by writing a reference string S and a list of indexes A.\r\n\r\nFor example, if the list of words is [\"time\", \"me\", \"bell\"], we can write it as S = \"time#bell#\" and indexes = [0, 2, 5].\r\n\r\nThen for each index, we will recover the word by reading from the reference string from that index until we reach a \"#\" character.\r\n\r\nWhat is the length of the shortest reference string S possible that encodes the given words?\r\n\r\nExample:\r\n\r\n\r\nInput: words = [\"time\", \"me\", \"bell\"]\r\nOutput: 10\r\nExplanation: S = \"time#bell#\" and indexes = [0, 2, 5].\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= words.length <= 2000.\r\n\t1 <= words[i].length <= 7.\r\n\tEach word has only lowercase letters.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int minimumLengthEncoding(vector<string>& words) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minimumLengthEncoding(String[] words) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minimumLengthEncoding(self, words):\n        \"\"\"\n        :type words: List[str]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minimumLengthEncoding(self, words):\n        \"\"\"\n        :type words: List[str]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int minimumLengthEncoding(char** words, int wordsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MinimumLengthEncoding(string[] words) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string[]} words\n * @return {number}\n */\nvar minimumLengthEncoding = function(words) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String[]} words\n# @return {Integer}\ndef minimum_length_encoding(words)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minimumLengthEncoding(_ words: [String]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func minimumLengthEncoding(words []string) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minimumLengthEncoding(words: Array[String]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minimumLengthEncoding(words: Array<String>): Int {\n        \n    }\n}"}],"testcase":"[\"time\", \"me\", \"bell\"]","testable":true,"templateMeta":{"name":"minimumLengthEncoding","params":[{"name":"words","type":"string[]"}],"return":{"type":"integer"}}}
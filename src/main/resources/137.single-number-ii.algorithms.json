{"id":137,"fid":137,"name":"Single Number II","slug":"single-number-ii","link":"https://leetcode.com/problems/single-number-ii/description/","percent":44.12619973596889,"level":"Medium","category":"algorithms","totalAC":"148.4K","totalSubmit":"336.3K","desc":"Given a non-emptyÂ array of integers, every element appears three times except for one, which appears exactly once. Find that single one.\r\n\r\nNote:\r\n\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n\r\nExample 1:\r\n\r\n\r\nInput: [2,2,3,2]\r\nOutput: 3\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [0,1,0,1,0,1,99]\r\nOutput: 99\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int singleNumber(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int singleNumber(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def singleNumber(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def singleNumber(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int singleNumber(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int SingleNumber(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar singleNumber = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef single_number(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func singleNumber(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func singleNumber(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def singleNumber(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun singleNumber(nums: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[2,2,3,2]","testable":true,"templateMeta":{"name":"singleNumber","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
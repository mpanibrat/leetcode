{"id":73,"fid":73,"name":"Set Matrix Zeroes","slug":"set-matrix-zeroes","link":"https://leetcode.com/problems/set-matrix-zeroes/description/","percent":37.92620596339967,"level":"Medium","category":"algorithms","totalAC":"168.7K","totalSubmit":"444.9K","desc":"Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in-place.\r\n\r\nExample 1:\r\n\r\n\r\nInput: \r\n[\r\n  [1,1,1],\r\n  [1,0,1],\r\n  [1,1,1]\r\n]\r\nOutput: \r\n[\r\n  [1,0,1],\r\n  [0,0,0],\r\n  [1,0,1]\r\n]\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \r\n[\r\n  [0,1,2,0],\r\n  [3,4,5,2],\r\n  [1,3,1,5]\r\n]\r\nOutput: \r\n[\r\n  [0,0,0,0],\r\n  [0,4,5,0],\r\n  [0,3,1,0]\r\n]\r\n\r\n\r\nFollow up:\r\n\r\n\r\n\tA straight forward solution using O(mn) space is probably a bad idea.\r\n\tA simple improvement uses O(m + n) space, but still not the best solution.\r\n\tCould you devise a constant space solution?\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    void setZeroes(vector<vector<int>>& matrix) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public void setZeroes(int[][] matrix) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def setZeroes(self, matrix):\r\n        \"\"\"\r\n        :type matrix: List[List[int]]\r\n        :rtype: void Do not return anything, modify matrix in-place instead.\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def setZeroes(self, matrix):\r\n        \"\"\"\r\n        :type matrix: List[List[int]]\r\n        :rtype: void Do not return anything, modify matrix in-place instead.\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"void setZeroes(int** matrix, int matrixRowSize, int matrixColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public void SetZeroes(int[,] matrix) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} matrix\r\n * @return {void} Do not return anything, modify matrix in-place instead.\r\n */\r\nvar setZeroes = function(matrix) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} matrix\r\n# @return {Void} Do not return anything, modify matrix in-place instead.\r\ndef set_zeroes(matrix)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func setZeroes(_ matrix: inout [[Int]]) {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func setZeroes(matrix [][]int)  {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def setZeroes(matrix: Array[Array[Int]]): Unit = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun setZeroes(matrix: Array<IntArray>): Unit {\r\n        \r\n    }\r\n}"}],"testcase":"[[1,1,1],[1,0,1],[1,1,1]]","testable":true,"templateMeta":{"name":"setZeroes","params":[{"name":"matrix","type":"integer[][]"}],"return":{"type":"void"},"output":{"paramindex":0}}}
{"id":391,"fid":391,"name":"Perfect Rectangle","slug":"perfect-rectangle","link":"https://leetcode.com/problems/perfect-rectangle/description/","percent":27.539392709812674,"level":"Hard","category":"algorithms","totalAC":"16.3K","totalSubmit":"59.1K","desc":"Given N axis-aligned rectangles where N > 0, determine if they all together form an exact cover of a rectangular region.\r\n\r\nEach rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [3,2,4,4],\r\n  [1,3,2,4],\r\n  [2,3,3,4]\r\n]\r\n\r\nReturn true. All 5 rectangles together form an exact cover of a rectangular region.\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nrectangles = [\r\n  [1,1,2,3],\r\n  [1,3,2,4],\r\n  [3,1,4,2],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap between the two rectangular regions.\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap in the top center.\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [2,2,4,4]\r\n]\r\n\r\nReturn false. Because two of the rectangles overlap with each other.\r\n\r\n\r\n \r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isRectangleCover(vector<vector<int>>& rectangles) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isRectangleCover(int[][] rectangles) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isRectangleCover(self, rectangles):\r\n        \"\"\"\r\n        :type rectangles: List[List[int]]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isRectangleCover(self, rectangles):\r\n        \"\"\"\r\n        :type rectangles: List[List[int]]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool isRectangleCover(int** rectangles, int rectanglesRowSize, int rectanglesColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsRectangleCover(int[,] rectangles) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} rectangles\r\n * @return {boolean}\r\n */\r\nvar isRectangleCover = function(rectangles) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} rectangles\r\n# @return {Boolean}\r\ndef is_rectangle_cover(rectangles)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func isRectangleCover(_ rectangles: [[Int]]) -> Bool {\r\n\r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func isRectangleCover(rectangles [][]int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isRectangleCover(rectangles: Array[Array[Int]]): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isRectangleCover(rectangles: Array<IntArray>): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"[[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]]","testable":true,"templateMeta":{"name":"isRectangleCover","params":[{"name":"rectangles","type":"integer[][]"}],"return":{"type":"boolean"}}}
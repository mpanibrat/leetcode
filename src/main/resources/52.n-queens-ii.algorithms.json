{"id":52,"fid":52,"name":"N-Queens II","slug":"n-queens-ii","link":"https://leetcode.com/problems/n-queens-ii/description/","percent":49.1481041225214,"level":"Hard","category":"algorithms","totalAC":"85.6K","totalSubmit":"174.1K","desc":"The n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.\r\n\r\n\r\n\r\nGiven an integer n, return the number of distinct solutions to the n-queens puzzle.\r\n\r\nExample:\r\n\r\n\r\nInput: 4\r\nOutput: 2\r\nExplanation: There are two distinct solutions to the 4-queens puzzle as shown below.\r\n[\r\n [\".Q..\",  // Solution 1\r\n  \"...Q\",\r\n  \"Q...\",\r\n  \"..Q.\"],\r\n\r\n [\"..Q.\",  // Solution 2\r\n  \"Q...\",\r\n  \"...Q\",\r\n  \".Q..\"]\r\n]\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int totalNQueens(int n) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int totalNQueens(int n) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def totalNQueens(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def totalNQueens(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int totalNQueens(int n) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int TotalNQueens(int n) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} n\r\n * @return {number}\r\n */\r\nvar totalNQueens = function(n) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\r\n# @return {Integer}\r\ndef total_n_queens(n)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func totalNQueens(_ n: Int) -> Int {\r\n\r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func totalNQueens(n int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def totalNQueens(n: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun totalNQueens(n: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"4","testable":true,"templateMeta":{"name":"totalNQueens","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}
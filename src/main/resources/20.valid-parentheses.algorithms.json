{"id":20,"fid":20,"name":"Valid Parentheses","slug":"valid-parentheses","link":"https://leetcode.com/problems/valid-parentheses/description/","percent":34.847166787444095,"level":"Easy","category":"algorithms","totalAC":"431.8K","totalSubmit":"1.2M","desc":"Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\r\n\r\nAn input string is valid if:\r\n\r\n\r\n\tOpen brackets must be closed by the same type of brackets.\r\n\tOpen brackets must be closed in the correct order.\r\n\r\n\r\nNote that an empty string isÂ also considered valid.\r\n\r\nExample 1:\r\n\r\n\r\nInput: \"()\"\r\nOutput: true\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"()[]{}\"\r\nOutput: true\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: \"(]\"\r\nOutput: false\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: \"([)]\"\r\nOutput: false\r\n\r\n\r\nExample 5:\r\n\r\n\r\nInput: \"{[]}\"\r\nOutput: true\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isValid(string s) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isValid(String s) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isValid(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isValid(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool isValid(char* s) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsValid(string s) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @return {boolean}\r\n */\r\nvar isValid = function(s) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @return {Boolean}\r\ndef is_valid(s)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isValid(_ s: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isValid(s string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isValid(s: String): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isValid(s: String): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"\"()\"","testable":true,"templateMeta":{"name":"isValid","params":[{"name":"s","type":"string"}],"return":{"type":"boolean"}}}
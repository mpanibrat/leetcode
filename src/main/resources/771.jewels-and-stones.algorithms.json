{"id":782,"fid":771,"name":"Jewels and Stones","slug":"jewels-and-stones","link":"https://leetcode.com/problems/jewels-and-stones/description/","percent":81.67585897503562,"level":"Easy","category":"algorithms","totalAC":"123.8K","totalSubmit":"151.6K","desc":"You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.\r\n\r\nThe letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so \"a\" is considered a different type of stone from \"A\".\r\n\r\nExample 1:\r\n\r\n\r\nInput: J = \"aA\", S = \"aAAbbbb\"\r\nOutput: 3\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: J = \"z\", S = \"ZZ\"\r\nOutput: 0\r\n\r\n\r\nNote:\r\n\r\n\r\n\tS and J will consist of letters and have length at most 50.\r\n\tThe characters in J are distinct.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int numJewelsInStones(string J, string S) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int numJewelsInStones(String J, String S) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numJewelsInStones(self, J, S):\n        \"\"\"\n        :type J: str\n        :type S: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numJewelsInStones(self, J, S):\n        \"\"\"\n        :type J: str\n        :type S: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int numJewelsInStones(char* J, char* S) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NumJewelsInStones(string J, string S) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} J\n * @param {string} S\n * @return {number}\n */\nvar numJewelsInStones = function(J, S) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} j\n# @param {String} s\n# @return {Integer}\ndef num_jewels_in_stones(j, s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numJewelsInStones(_ J: String, _ S: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func numJewelsInStones(J string, S string) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numJewelsInStones(J: String, S: String): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numJewelsInStones(J: String, S: String): Int {\n        \n    }\n}"}],"testcase":"\"aA\"\n\"aAAbbbb\"","testable":true,"templateMeta":{"name":"numJewelsInStones","params":[{"name":"J","type":"string"},{"name":"S","type":"string"}],"return":{"type":"integer"}}}
{"id":287,"fid":287,"name":"Find the Duplicate Number","slug":"find-the-duplicate-number","link":"https://leetcode.com/problems/find-the-duplicate-number/description/","percent":46.521556527806716,"level":"Medium","category":"algorithms","totalAC":"140.7K","totalSubmit":"302.4K","desc":"Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [1,3,4,2,2]\r\nOutput: 2\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [3,1,3,4,2]\r\nOutput: 3\r\n\r\nNote:\r\n\r\n\r\n\tYou must not modify the array (assume the array is read only).\r\n\tYou must use only constant, O(1) extra space.\r\n\tYour runtime complexity should be less than O(n2).\r\n\tThere is only one duplicate number in the array, but it could be repeated more than once.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int findDuplicate(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int findDuplicate(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def findDuplicate(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def findDuplicate(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"int findDuplicate(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int FindDuplicate(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar findDuplicate = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef find_duplicate(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func findDuplicate(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func findDuplicate(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def findDuplicate(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun findDuplicate(nums: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[1,3,4,2,2]","testable":true,"templateMeta":{"name":"findDuplicate","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
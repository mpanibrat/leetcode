{"id":413,"fid":413,"name":"Arithmetic Slices","slug":"arithmetic-slices","link":"https://leetcode.com/problems/arithmetic-slices/description/","percent":54.48990867431506,"level":"Medium","category":"algorithms","totalAC":"50.3K","totalSubmit":"92.3K","desc":"A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\r\n\r\nFor example, these are arithmetic sequence:\r\n1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9\r\n\r\nThe following sequence is not arithmetic. 1, 1, 2, 5, 7 \r\n\r\n\r\nA zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 \r\n\r\nA slice (P, Q) of array A is called arithmetic if the sequence:\r\n    A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 < Q.\r\n\r\nThe function should return the number of arithmetic slices in the array A. \r\n\r\n\r\nExample:\r\n\r\nA = [1, 2, 3, 4]\r\n\r\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int numberOfArithmeticSlices(vector<int>& A) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int numberOfArithmeticSlices(int[] A) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def numberOfArithmeticSlices(self, A):\r\n        \"\"\"\r\n        :type A: List[int]\r\n        :rtype: int\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numberOfArithmeticSlices(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int numberOfArithmeticSlices(int* A, int ASize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int NumberOfArithmeticSlices(int[] A) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} A\r\n * @return {number}\r\n */\r\nvar numberOfArithmeticSlices = function(A) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\r\n# @return {Integer}\r\ndef number_of_arithmetic_slices(a)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numberOfArithmeticSlices(_ A: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func numberOfArithmeticSlices(A []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numberOfArithmeticSlices(A: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numberOfArithmeticSlices(A: IntArray): Int {\n        \n    }\n}"}],"testcase":"[1,2,3,4]","testable":true,"templateMeta":{"name":"numberOfArithmeticSlices","params":[{"name":"A","type":"integer[]"}],"return":{"type":"integer"}}}
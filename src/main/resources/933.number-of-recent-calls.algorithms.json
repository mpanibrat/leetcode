{"id":969,"fid":933,"name":"Number of Recent Calls","slug":"number-of-recent-calls","link":"https://leetcode.com/problems/number-of-recent-calls/description/","percent":60.60983198506534,"level":"Easy","category":"algorithms","totalAC":"2.9K","totalSubmit":"4.8K","desc":"Write a class RecentCounter to count recent requests.\r\n\r\nIt has only one method: ping(int t), where t represents some time in milliseconds.\r\n\r\nReturn the number of pings that have been made from 3000 milliseconds ago until now.\r\n\r\nAny ping with time in [t - 3000, t] will count, including the current ping.\r\n\r\nIt is guaranteed that every call to ping uses a strictly larger value of t than before.\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: inputs = [\"RecentCounter\",\"ping\",\"ping\",\"ping\",\"ping\"], inputs = [[],[1],[100],[3001],[3002]]\r\nOutput: [null,1,2,3,3]\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tEach test case will have at most 10000 calls to ping.\r\n\tEach test case will call ping with strictly increasing values of t.\r\n\tEach call to ping will have 1 <= t <= 10^9.\r\n\r\n\r\n\r\n \r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class RecentCounter {\npublic:\n    RecentCounter() {\n        \n    }\n    \n    int ping(int t) {\n        \n    }\n};\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * RecentCounter* obj = new RecentCounter();\n * int param_1 = obj->ping(t);\n */"},{"value":"java","text":"Java","defaultCode":"class RecentCounter {\n\n    public RecentCounter() {\n        \n    }\n    \n    public int ping(int t) {\n        \n    }\n}\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * RecentCounter obj = new RecentCounter();\n * int param_1 = obj.ping(t);\n */"},{"value":"python","text":"Python","defaultCode":"class RecentCounter(object):\n\n    def __init__(self):\n        \n\n    def ping(self, t):\n        \"\"\"\n        :type t: int\n        :rtype: int\n        \"\"\"\n        \n\n\n# Your RecentCounter object will be instantiated and called as such:\n# obj = RecentCounter()\n# param_1 = obj.ping(t)"},{"value":"python3","text":"Python3","defaultCode":"class RecentCounter:\n\n    def __init__(self):\n        \n\n    def ping(self, t):\n        \"\"\"\n        :type t: int\n        :rtype: int\n        \"\"\"\n        \n\n\n# Your RecentCounter object will be instantiated and called as such:\n# obj = RecentCounter()\n# param_1 = obj.ping(t)"},{"value":"c","text":"C","defaultCode":"typedef struct {\n    \n} RecentCounter;\n\nRecentCounter* recentCounterCreate() {\n    \n}\n\nint recentCounterPing(RecentCounter* obj, int t) {\n    \n}\n\nvoid recentCounterFree(RecentCounter* obj) {\n    \n}\n\n/**\n * Your RecentCounter struct will be instantiated and called as such:\n * struct RecentCounter* obj = recentCounterCreate();\n * int param_1 = recentCounterPing(obj, t);\n * recentCounterFree(obj);\n */"},{"value":"csharp","text":"C#","defaultCode":"public class RecentCounter {\n\n    public RecentCounter() {\n        \n    }\n    \n    public int Ping(int t) {\n        \n    }\n}\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * RecentCounter obj = new RecentCounter();\n * int param_1 = obj.Ping(t);\n */"},{"value":"javascript","text":"JavaScript","defaultCode":"\nvar RecentCounter = function() {\n    \n};\n\n/** \n * @param {number} t\n * @return {number}\n */\nRecentCounter.prototype.ping = function(t) {\n    \n};\n\n/** \n * Your RecentCounter object will be instantiated and called as such:\n * var obj = Object.create(RecentCounter).createNew()\n * var param_1 = obj.ping(t)\n */"},{"value":"ruby","text":"Ruby","defaultCode":"class RecentCounter\n    def initialize()\n        \n    end\n\n\n=begin\n    :type t: Integer\n    :rtype: Integer\n=end\n    def ping(t)\n        \n    end\n\n\nend\n\n# Your RecentCounter object will be instantiated and called as such:\n# obj = RecentCounter.new()\n# param_1 = obj.ping(t)"},{"value":"swift","text":"Swift","defaultCode":"\nclass RecentCounter {\n\n    init() {\n        \n    }\n\n    func ping(_ t: Int) -> Int {\n        \n    }\n}\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * let obj = RecentCounter()\n * let ret_1: Int = obj.ping(t)\n */\n "},{"value":"golang","text":"Go","defaultCode":"type RecentCounter struct {\n    \n}\n\n\nfunc Constructor() RecentCounter {\n    \n}\n\n\nfunc (this *RecentCounter) Ping(t int) int {\n    \n}\n\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * obj := Constructor();\n * param_1 := obj.Ping(t);\n */"},{"value":"scala","text":"Scala","defaultCode":"class RecentCounter() {\n\n    def ping(t: Int): Int = {\n        \n    }\n\n}\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * var obj = new RecentCounter()\n * var param_1 = obj.ping(t)\n */"},{"value":"kotlin","text":"Kotlin","defaultCode":"class RecentCounter() {\n\n    fun ping(t: Int): Int {\n        \n    }\n\n}\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * var obj = RecentCounter()\n * var param_1 = obj.ping(t)\n */"}],"testcase":"[\"RecentCounter\",\"ping\",\"ping\",\"ping\",\"ping\"]\n[[],[1],[100],[3001],[3002]]","testable":true,"templateMeta":{"classname":"RecentCounter","maxbytesperline":200000,"constructor":{"params":[]},"methods":[{"name":"ping","params":[{"name":"t","type":"integer"}],"return":{"type":"integer"}}],"systemdesign":true,"params":[{"name":"inputs","type":"integer[]"},{"name":"inputs","type":"integer[]"}],"return":{"type":"list<String>","dealloc":true}}}
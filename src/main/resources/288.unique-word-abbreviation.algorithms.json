{"id":288,"fid":288,"name":"Unique Word Abbreviation","slug":"unique-word-abbreviation","link":"https://leetcode.com/problems/unique-word-abbreviation/description/","percent":18.943538358400673,"level":"Medium","category":"algorithms","totalAC":"37K","totalSubmit":"195.4K","desc":"An abbreviation of a word follows the form <first letter><number><last letter>. Below are some examples of word abbreviations:\r\n\r\n\r\na) it                      --> it    (no abbreviation)\r\n\r\n     1\r\n     ↓\r\nb) d|o|g                   --> d1g\r\n\r\n              1    1  1\r\n     1---5----0----5--8\r\n     ↓   ↓    ↓    ↓  ↓    \r\nc) i|nternationalizatio|n  --> i18n\r\n\r\n              1\r\n     1---5----0\r\n     ↓   ↓    ↓\r\nd) l|ocalizatio|n          --> l10n\r\n\r\n\r\nAssume you have a dictionary and given a word, find whether its abbreviation is unique in the dictionary. A word's abbreviation is unique if no other word from the dictionary has the same abbreviation.\r\n\r\nExample:\r\n\r\n\r\nGiven dictionary = [ \"deer\", \"door\", \"cake\", \"card\" ]\r\n\r\nisUnique(\"dear\") -> false\r\nisUnique(\"cart\") -> true\r\nisUnique(\"cane\") -> false\r\nisUnique(\"make\") -> true\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class ValidWordAbbr {\r\npublic:\r\n    ValidWordAbbr(vector<string> dictionary) {\r\n        \r\n    }\r\n    \r\n    bool isUnique(string word) {\r\n        \r\n    }\r\n};\r\n\r\n/**\r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * ValidWordAbbr obj = new ValidWordAbbr(dictionary);\r\n * bool param_1 = obj.isUnique(word);\r\n */"},{"value":"java","text":"Java","defaultCode":"class ValidWordAbbr {\r\n\r\n    public ValidWordAbbr(String[] dictionary) {\r\n        \r\n    }\r\n    \r\n    public boolean isUnique(String word) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * ValidWordAbbr obj = new ValidWordAbbr(dictionary);\r\n * boolean param_1 = obj.isUnique(word);\r\n */"},{"value":"python","text":"Python","defaultCode":"class ValidWordAbbr(object):\r\n\r\n    def __init__(self, dictionary):\r\n        \"\"\"\r\n        :type dictionary: List[str]\r\n        \"\"\"\r\n        \r\n\r\n    def isUnique(self, word):\r\n        \"\"\"\r\n        :type word: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your ValidWordAbbr object will be instantiated and called as such:\r\n# obj = ValidWordAbbr(dictionary)\r\n# param_1 = obj.isUnique(word)"},{"value":"python3","text":"Python3","defaultCode":"class ValidWordAbbr:\r\n\r\n    def __init__(self, dictionary):\r\n        \"\"\"\r\n        :type dictionary: List[str]\r\n        \"\"\"\r\n        \r\n\r\n    def isUnique(self, word):\r\n        \"\"\"\r\n        :type word: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your ValidWordAbbr object will be instantiated and called as such:\r\n# obj = ValidWordAbbr(dictionary)\r\n# param_1 = obj.isUnique(word)"},{"value":"c","text":"C","defaultCode":"typedef struct {\r\n    \r\n} ValidWordAbbr;\r\n\r\nValidWordAbbr* validWordAbbrCreate(char** dictionary, int dictionarySize) {\r\n    \r\n}\r\n\r\nbool validWordAbbrIsUnique(ValidWordAbbr* obj, char* word) {\r\n    \r\n}\r\n\r\nvoid validWordAbbrFree(ValidWordAbbr* obj) {\r\n    \r\n}\r\n\r\n/**\r\n * Your ValidWordAbbr struct will be instantiated and called as such:\r\n * struct ValidWordAbbr* obj = validWordAbbrCreate(dictionary, dictionarySize);\r\n * bool param_1 = validWordAbbrIsUnique(obj, word);\r\n * validWordAbbrFree(obj);\r\n */"},{"value":"csharp","text":"C#","defaultCode":"public class ValidWordAbbr {\r\n\r\n    public ValidWordAbbr(string[] dictionary) {\r\n        \r\n    }\r\n    \r\n    public bool IsUnique(string word) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * ValidWordAbbr obj = new ValidWordAbbr(dictionary);\r\n * bool param_1 = obj.IsUnique(word);\r\n */"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string[]} dictionary\r\n */\r\nvar ValidWordAbbr = function(dictionary) {\r\n    \r\n};\r\n\r\n/** \r\n * @param {string} word\r\n * @return {boolean}\r\n */\r\nValidWordAbbr.prototype.isUnique = function(word) {\r\n    \r\n};\r\n\r\n/** \r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * var obj = Object.create(ValidWordAbbr).createNew(dictionary)\r\n * var param_1 = obj.isUnique(word)\r\n */"},{"value":"ruby","text":"Ruby","defaultCode":"class ValidWordAbbr\r\n\r\n=begin\r\n    :type dictionary: String[]\r\n=end\r\n    def initialize(dictionary)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    :type word: String\r\n    :rtype: Boolean\r\n=end\r\n    def is_unique(word)\r\n        \r\n    end\r\n\r\n\r\nend\r\n\r\n# Your ValidWordAbbr object will be instantiated and called as such:\r\n# obj = ValidWordAbbr.new(dictionary)\r\n# param_1 = obj.is_unique(word)"},{"value":"swift","text":"Swift","defaultCode":"\nclass ValidWordAbbr {\n\n    init(_ dictionary: [String]) {\n        \n    }\n    \n    func isUnique(_ word: String) -> Bool {\n      \n    }\n}\n\n/**\n * Your ValidWordAbbr object will be instantiated and called as such:\n * let obj = ValidWordAbbr(dictionary)\n * let ret_1: Bool = obj.isUnique(word)\n */\n "},{"value":"golang","text":"Go","defaultCode":"type ValidWordAbbr struct {\r\n    \r\n}\r\n\r\n\r\nfunc Constructor(dictionary []string) ValidWordAbbr {\r\n    \r\n}\r\n\r\n\r\nfunc (this *ValidWordAbbr) IsUnique(word string) bool {\r\n    \r\n}\r\n\r\n\r\n/**\r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * obj := Constructor(dictionary);\r\n * param_1 := obj.IsUnique(word);\r\n */"},{"value":"scala","text":"Scala","defaultCode":"class ValidWordAbbr(_dictionary: Array[String]) {\r\n\r\n    def isUnique(word: String): Boolean = {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * var obj = new ValidWordAbbr(dictionary)\r\n * var param_1 = obj.isUnique(word)\r\n */"},{"value":"kotlin","text":"Kotlin","defaultCode":"class ValidWordAbbr(dictionary: Array<String>) {\r\n\r\n    fun isUnique(word: String): Boolean {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * var obj = ValidWordAbbr(dictionary)\r\n * var param_1 = obj.isUnique(word)\r\n */"}],"testcase":"[\"ValidWordAbbr\",\"isUnique\",\"isUnique\",\"isUnique\",\"isUnique\"]\n[[[\"deer\",\"door\",\"cake\",\"card\"]],[\"dear\"],[\"cart\"],[\"cane\"],[\"make\"]]","testable":true,"templateMeta":{"classname":"ValidWordAbbr","maxbytesperline":470000,"constructor":{"params":[{"type":"string[]","name":"dictionary"},{"type":"integer","name":"dictionarySize","lang":"c","value":"size_1"}]},"methods":[{"name":"isUnique","params":[{"type":"string","name":"word"}],"return":{"type":"boolean"}}],"systemdesign":true,"params":[{"name":"inputs","type":"integer[]"},{"name":"inputs","type":"integer[]"}],"return":{"type":"list<String>","dealloc":true}}}
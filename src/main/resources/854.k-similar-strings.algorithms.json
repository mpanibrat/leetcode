{"id":884,"fid":854,"name":"K-Similar Strings","slug":"k-similar-strings","link":"https://leetcode.com/problems/k-similar-strings/description/","percent":31.29798378417163,"level":"Hard","category":"algorithms","totalAC":"4.4K","totalSubmit":"13.9K","desc":"Strings A and B are K-similar (for some non-negative integer K) if we can swap the positions of two letters in A exactly K times so that the resulting string equals B.\r\n\r\nGiven two anagrams A and B, return the smallest K for which A and B are K-similar.\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = \"ab\", B = \"ba\"\r\nOutput: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = \"abc\", B = \"bca\"\r\nOutput: 2\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: A = \"abac\", B = \"baca\"\r\nOutput: 2\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: A = \"aabc\", B = \"abca\"\r\nOutput: 2\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length == B.length <= 20\r\n\tA and B contain only lowercase letters from the set {'a', 'b', 'c', 'd', 'e', 'f'}\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int kSimilarity(string A, string B) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int kSimilarity(String A, String B) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def kSimilarity(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def kSimilarity(self, A, B):\n        \"\"\"\n        :type A: str\n        :type B: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int kSimilarity(char* A, char* B) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int KSimilarity(string A, string B) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} A\n * @param {string} B\n * @return {number}\n */\nvar kSimilarity = function(A, B) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} a\n# @param {String} b\n# @return {Integer}\ndef k_similarity(a, b)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func kSimilarity(_ A: String, _ B: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func kSimilarity(A string, B string) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def kSimilarity(A: String, B: String): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun kSimilarity(A: String, B: String): Int {\n        \n    }\n}"}],"testcase":"\"ab\"\n\"ba\"","testable":true,"templateMeta":{"name":"kSimilarity","params":[{"name":"A","type":"string"},{"name":"B","type":"string"}],"return":{"type":"integer"}}}
{"id":311,"fid":311,"name":"Sparse Matrix Multiplication","slug":"sparse-matrix-multiplication","link":"https://leetcode.com/problems/sparse-matrix-multiplication/description/","percent":54.149395804277646,"level":"Medium","category":"algorithms","totalAC":"55.5K","totalSubmit":"102.5K","desc":"Given two sparse matrices A and B, return the result of AB.\r\n\r\nYou may assume that A's column number is equal to B's row number.\r\n\r\nExample:\r\n\r\n\r\nInput:\r\n\r\nA = [\r\n  [ 1, 0, 0],\r\n  [-1, 0, 3]\r\n]\r\n\r\nB = [\r\n  [ 7, 0, 0 ],\r\n  [ 0, 0, 0 ],\r\n  [ 0, 0, 1 ]\r\n]\r\n\r\nOutput:\r\n\r\n     |  1 0 0 |   | 7 0 0 |   |  7 0 0 |\r\nAB = | -1 0 3 | x | 0 0 0 | = | -7 0 3 |\r\n                  | 0 0 1 |\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<vector<int>> multiply(vector<vector<int>>& A, vector<vector<int>>& B) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int[][] multiply(int[][] A, int[][] B) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def multiply(self, A, B):\r\n        \"\"\"\r\n        :type A: List[List[int]]\r\n        :type B: List[List[int]]\r\n        :rtype: List[List[int]]\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def multiply(self, A, B):\r\n        \"\"\"\r\n        :type A: List[List[int]]\r\n        :type B: List[List[int]]\r\n        :rtype: List[List[int]]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of arrays.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nint** multiply(int** A, int ARowSize, int AColSize, int** B, int BRowSize, int BColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int[,] Multiply(int[,] A, int[,] B) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} A\r\n * @param {number[][]} B\r\n * @return {number[][]}\r\n */\r\nvar multiply = function(A, B) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} a\r\n# @param {Integer[][]} b\r\n# @return {Integer[][]}\r\ndef multiply(a, b)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func multiply(_ A: [[Int]], _ B: [[Int]]) -> [[Int]] {\n\n    }\n}"}],"testcase":"[[1,0,0],[-1,0,3]]\n[[7,0,0],[0,0,0],[0,0,1]]","testable":true,"templateMeta":{"name":"multiply","params":[{"name":"A","type":"integer[][]"},{"name":"B","type":"integer[][]"}],"return":{"type":"integer[][]","rowsize":"size_1","colsize":"col_size_2","dealloc":true},"generatedriver":false,"generatedefinition":false}}
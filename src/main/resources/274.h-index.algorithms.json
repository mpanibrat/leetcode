{"id":274,"fid":274,"name":"H-Index","slug":"h-index","link":"https://leetcode.com/problems/h-index/description/","percent":34.16214274433052,"level":"Medium","category":"algorithms","totalAC":"110.3K","totalSubmit":"322.9K","desc":"Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\r\n\r\nAccording to the definition of h-index on Wikipedia: \"A scientist has index h if h of his/her N papers have at least h citations each, and the other N − h papers have no more than h citations each.\"\r\n\r\nExample:\r\n\r\n\r\nInput: citations = [3,0,6,1,5]\r\nOutput: 3 \r\nExplanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had \r\n             received 3, 0, 6, 1, 5 citations respectively. \r\n             Since the researcher has 3 papers with at least 3 citations each and the remaining \r\n             two with no more than 3 citations each, her h-index is 3.\r\n\r\nNote: If there are several possible values for h, the maximum one is taken as the h-index.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int hIndex(vector<int>& citations) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int hIndex(int[] citations) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def hIndex(self, citations):\r\n        \"\"\"\r\n        :type citations: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def hIndex(self, citations):\r\n        \"\"\"\r\n        :type citations: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int hIndex(int* citations, int citationsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int HIndex(int[] citations) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} citations\r\n * @return {number}\r\n */\r\nvar hIndex = function(citations) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} citations\r\n# @return {Integer}\r\ndef h_index(citations)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func hIndex(_ citations: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func hIndex(citations []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def hIndex(citations: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun hIndex(citations: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[3,0,6,1,5]","testable":true,"templateMeta":{"name":"hIndex","params":[{"name":"citations","type":"integer[]"}],"return":{"type":"integer"}}}
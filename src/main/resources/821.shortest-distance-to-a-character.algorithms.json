{"id":841,"fid":821,"name":"Shortest Distance to a Character","slug":"shortest-distance-to-a-character","link":"https://leetcode.com/problems/shortest-distance-to-a-character/description/","percent":61.20833219580114,"level":"Easy","category":"algorithms","totalAC":"22.4K","totalSubmit":"36.6K","desc":"Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.\r\n\r\nExample 1:\r\n\r\n\r\nInput: S = \"loveleetcode\", C = 'e'\r\nOutput: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tS string length is in [1, 10000].\r\n\tC is a single character, and guaranteed to be in string S.\r\n\tAll letters in S and C are lowercase.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<int> shortestToChar(string S, char C) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int[] shortestToChar(String S, char C) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def shortestToChar(self, S, C):\n        \"\"\"\n        :type S: str\n        :type C: str\n        :rtype: List[int]\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def shortestToChar(self, S, C):\n        \"\"\"\n        :type S: str\n        :type C: str\n        :rtype: List[int]\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"/**\n * Return an array of size *returnSize.\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* shortestToChar(char* S, char C, int* returnSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int[] ShortestToChar(string S, char C) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} S\n * @param {character} C\n * @return {number[]}\n */\nvar shortestToChar = function(S, C) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @param {Character} c\n# @return {Integer[]}\ndef shortest_to_char(s, c)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func shortestToChar(_ S: String, _ C: Character) -> [Int] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func shortestToChar(S string, C byte) []int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def shortestToChar(S: String, C: Char): Array[Int] = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun shortestToChar(S: String, C: Char): IntArray {\n        \n    }\n}"}],"testcase":"\"loveleetcode\"\n\"e\"","testable":true,"templateMeta":{"name":"shortestToChar","params":[{"name":"S","type":"string"},{"name":"C","type":"character"}],"return":{"type":"integer[]"}}}
{"id":97,"fid":97,"name":"Interleaving String","slug":"interleaving-string","link":"https://leetcode.com/problems/interleaving-string/description/","percent":26.326467994770145,"level":"Hard","category":"algorithms","totalAC":"95.2K","totalSubmit":"361.8K","desc":"Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.\r\n\r\nExample 1:\r\n\r\n\r\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"\r\nOutput: true\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"\r\nOutput: false\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isInterleave(string s1, string s2, string s3) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isInterleave(String s1, String s2, String s3) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isInterleave(self, s1, s2, s3):\r\n        \"\"\"\r\n        :type s1: str\r\n        :type s2: str\r\n        :type s3: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isInterleave(self, s1, s2, s3):\r\n        \"\"\"\r\n        :type s1: str\r\n        :type s2: str\r\n        :type s3: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool isInterleave(char* s1, char* s2, char* s3) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsInterleave(string s1, string s2, string s3) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s1\r\n * @param {string} s2\r\n * @param {string} s3\r\n * @return {boolean}\r\n */\r\nvar isInterleave = function(s1, s2, s3) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s1\r\n# @param {String} s2\r\n# @param {String} s3\r\n# @return {Boolean}\r\ndef is_interleave(s1, s2, s3)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isInterleave(_ s1: String, _ s2: String, _ s3: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isInterleave(s1 string, s2 string, s3 string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isInterleave(s1: String, s2: String, s3: String): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isInterleave(s1: String, s2: String, s3: String): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"\"aabcc\"\n\"dbbca\"\n\"aadbbcbcac\"","testable":true,"templateMeta":{"name":"isInterleave","params":[{"name":"s1","type":"string"},{"name":"s2","type":"string"},{"name":"s3","type":"string"}],"return":{"type":"boolean"}}}
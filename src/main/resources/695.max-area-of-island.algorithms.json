{"id":695,"fid":695,"name":"Max Area of Island","slug":"max-area-of-island","link":"https://leetcode.com/problems/max-area-of-island/description/","percent":53.774889240985374,"level":"Medium","category":"algorithms","totalAC":"53.3K","totalSubmit":"99.1K","desc":"Given a non-empty 2D array grid of 0's and 1's, an island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.\r\n\r\nFind the maximum area of an island in the given 2D array. (If there is no island, the maximum area is 0.)\r\n\r\nExample 1:\r\n\r\n\r\n[[0,0,1,0,0,0,0,1,0,0,0,0,0],\r\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\r\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\r\n [0,1,0,0,1,1,0,0,1,0,1,0,0],\r\n [0,1,0,0,1,1,0,0,1,1,1,0,0],\r\n [0,0,0,0,0,0,0,0,0,0,1,0,0],\r\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\r\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\r\n\r\nGiven the above grid, return 6. Note the answer is not 11, because the island must be connected 4-directionally.\r\n\r\nExample 2:\r\n\r\n\r\n[[0,0,0,0,0,0,0,0]]\r\nGiven the above grid, return 0.\r\n\r\nNote: The length of each dimension in the given grid does not exceed 50.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int maxAreaOfIsland(int[][] grid) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maxAreaOfIsland(self, grid):\r\n        \"\"\"\r\n        :type grid: List[List[int]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def maxAreaOfIsland(self, grid):\r\n        \"\"\"\r\n        :type grid: List[List[int]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int maxAreaOfIsland(int** grid, int gridRowSize, int gridColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaxAreaOfIsland(int[,] grid) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} grid\r\n * @return {number}\r\n */\r\nvar maxAreaOfIsland = function(grid) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} grid\r\n# @return {Integer}\r\ndef max_area_of_island(grid)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func maxAreaOfIsland(_ grid: [[Int]]) -> Int {\r\n\r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func maxAreaOfIsland(grid [][]int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def maxAreaOfIsland(grid: Array[Array[Int]]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun maxAreaOfIsland(grid: Array<IntArray>): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[[1,1,0,0,0],[1,1,0,0,0],[0,0,0,1,1],[0,0,0,1,1]]","testable":true,"templateMeta":{"name":"maxAreaOfIsland","params":[{"name":"grid","type":"integer[][]"}],"return":{"type":"integer"}}}
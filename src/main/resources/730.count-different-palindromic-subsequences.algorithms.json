{"id":730,"fid":730,"name":"Count Different Palindromic Subsequences","slug":"count-different-palindromic-subsequences","link":"https://leetcode.com/problems/count-different-palindromic-subsequences/description/","percent":37.18524058838195,"level":"Hard","category":"algorithms","totalAC":"6K","totalSubmit":"16K","desc":"\r\nGiven a string S, find the number of different non-empty palindromic subsequences in S, and return that number modulo 10^9 + 7.\r\n\r\nA subsequence of a string S is obtained by deleting 0 or more characters from S.\r\n\r\nA sequence is palindromic if it is equal to the sequence reversed.\r\n\r\nTwo sequences A_1, A_2, ... and B_1, B_2, ... are different if there is some i for which A_i != B_i.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\nS = 'bccb'\r\nOutput: 6\r\nExplanation: \r\nThe 6 different non-empty palindromic subsequences are 'b', 'c', 'bb', 'cc', 'bcb', 'bccb'.\r\nNote that 'bcb' is counted only once, even though it occurs twice.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nS = 'abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba'\r\nOutput: 104860361\r\nExplanation: \r\nThere are 3104860382 different non-empty palindromic subsequences, which is 104860361 modulo 10^9 + 7.\r\n\r\n\r\n\r\nNote:\r\nThe length of S will be in the range [1, 1000].\r\nEach character S[i] will be in the set {'a', 'b', 'c', 'd'}.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int countPalindromicSubsequences(string S) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int countPalindromicSubsequences(String S) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def countPalindromicSubsequences(self, S):\r\n        \"\"\"\r\n        :type S: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def countPalindromicSubsequences(self, S):\r\n        \"\"\"\r\n        :type S: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int countPalindromicSubsequences(char* S) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int CountPalindromicSubsequences(string S) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} S\r\n * @return {number}\r\n */\r\nvar countPalindromicSubsequences = function(S) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @return {Integer}\r\ndef count_palindromic_subsequences(s)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func countPalindromicSubsequences(_ S: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func countPalindromicSubsequences(S string) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def countPalindromicSubsequences(S: String): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun countPalindromicSubsequences(S: String): Int {\r\n        \r\n    }\r\n}"}],"testcase":"\"bccb\"","testable":true,"templateMeta":{"name":"countPalindromicSubsequences","params":[{"name":"S","type":"string"}],"return":{"type":"integer"}}}
{"id":154,"fid":154,"name":"Find Minimum in Rotated Sorted Array II","slug":"find-minimum-in-rotated-sorted-array-ii","link":"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/description/","percent":38.51479743782865,"level":"Hard","category":"algorithms","totalAC":"111.5K","totalSubmit":"289.4K","desc":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).\r\n\r\nFind the minimum element.\r\n\r\nThe array may contain duplicates.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [1,3,5]\r\nOutput: 1\r\n\r\nExample 2:\r\n\r\n\r\nInput: [2,2,2,0,1]\r\nOutput: 0\r\n\r\nNote:\r\n\r\n\r\n\tThis is a follow up problem to Find Minimum in Rotated Sorted Array.\r\n\tWould allow duplicates affect the run-time complexity? How and why?\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int findMin(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int findMin(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def findMin(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def findMin(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int findMin(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int FindMin(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar findMin = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef find_min(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func findMin(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func findMin(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def findMin(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun findMin(nums: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[1,3,5]","testable":true,"templateMeta":{"name":"findMin","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
{"id":469,"fid":469,"name":"Convex Polygon","slug":"convex-polygon","link":"https://leetcode.com/problems/convex-polygon/description/","percent":34.85247340133816,"level":"Medium","category":"algorithms","totalAC":"6.4K","totalSubmit":"18.2K","desc":"Given a list of points that form a polygon when joined sequentially, find if this polygon is convex (Convex polygon definition).\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tThere are at least 3 and at most 10,000 points.\r\n\tCoordinates are in the range -10,000 to 10,000.\r\n\tYou may assume the polygon formed by given points is always a simple polygon (Simple polygon definition). In other words, we ensure that exactly two edges intersect at each vertex, and that edges otherwise don't intersect each other.\r\n\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\n[[0,0],[0,1],[1,1],[1,0]]\r\n\r\nAnswer: True\r\n\r\nExplanation:\r\n\r\n\r\nExample 2:\r\n\r\n\r\n[[0,0],[0,10],[10,10],[10,0],[5,5]]\r\n\r\nAnswer: False\r\n\r\nExplanation:\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isConvex(vector<vector<int>>& points) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isConvex(List<List<Integer>> points) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isConvex(self, points):\r\n        \"\"\"\r\n        :type points: List[List[int]]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isConvex(self, points):\r\n        \"\"\"\r\n        :type points: List[List[int]]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool isConvex(int** points, int pointsRowSize, int *pointsColSizes) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsConvex(IList<IList<int>> points) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} points\r\n * @return {boolean}\r\n */\r\nvar isConvex = function(points) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} points\r\n# @return {Boolean}\r\ndef is_convex(points)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func isConvex(_ points: [[Int]]) -> Bool {\r\n\r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func isConvex(points [][]int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isConvex(points: List[List[Int]]): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isConvex(points: List<List<Int>>): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"[[0,0],[0,1],[1,1],[1,0]]","testable":true,"templateMeta":{"name":"isConvex","params":[{"name":"points","type":"list<list<integer>>"}],"return":{"type":"boolean"}}}
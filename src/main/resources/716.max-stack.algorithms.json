{"id":716,"fid":716,"name":"Max Stack","slug":"max-stack","link":"https://leetcode.com/problems/max-stack/description/","percent":38.093940529309585,"level":"Easy","category":"algorithms","totalAC":"11.2K","totalSubmit":"29.4K","desc":"Design a max stack that supports push, pop, top, peekMax and popMax.\r\n\r\n\r\n\r\npush(x) -- Push element x onto stack.\r\npop() -- Remove the element on top of the stack and return it.\r\ntop() -- Get the element on the top.\r\npeekMax() -- Retrieve the maximum element in the stack.\r\npopMax() -- Retrieve the maximum element in the stack, and remove it. If you find more than one maximum elements, only remove the top-most one.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nMaxStack stack = new MaxStack();\r\nstack.push(5); \r\nstack.push(1);\r\nstack.push(5);\r\nstack.top(); -> 5\r\nstack.popMax(); -> 5\r\nstack.top(); -> 1\r\nstack.peekMax(); -> 5\r\nstack.pop(); -> 1\r\nstack.top(); -> 5\r\n\r\n\r\n\r\nNote:\r\n\r\n-1e7 \r\nNumber of operations won't exceed 10000.\r\nThe last four operations won't be called when stack is empty.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class MaxStack {\npublic:\n    /** initialize your data structure here. */\n    MaxStack() {\n        \n    }\n    \n    void push(int x) {\n        \n    }\n    \n    int pop() {\n        \n    }\n    \n    int top() {\n        \n    }\n    \n    int peekMax() {\n        \n    }\n    \n    int popMax() {\n        \n    }\n};\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * MaxStack obj = new MaxStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.peekMax();\n * int param_5 = obj.popMax();\n */"},{"value":"java","text":"Java","defaultCode":"class MaxStack {\n\n    /** initialize your data structure here. */\n    public MaxStack() {\n        \n    }\n    \n    public void push(int x) {\n        \n    }\n    \n    public int pop() {\n        \n    }\n    \n    public int top() {\n        \n    }\n    \n    public int peekMax() {\n        \n    }\n    \n    public int popMax() {\n        \n    }\n}\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * MaxStack obj = new MaxStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.peekMax();\n * int param_5 = obj.popMax();\n */"},{"value":"python","text":"Python","defaultCode":"class MaxStack(object):\n\n    def __init__(self):\n        \"\"\"\n        initialize your data structure here.\n        \"\"\"\n        \n\n    def push(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: void\n        \"\"\"\n        \n\n    def pop(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n    def top(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n    def peekMax(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n    def popMax(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n\n# Your MaxStack object will be instantiated and called as such:\n# obj = MaxStack()\n# obj.push(x)\n# param_2 = obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.peekMax()\n# param_5 = obj.popMax()"},{"value":"python3","text":"Python3","defaultCode":"class MaxStack:\n\n    def __init__(self):\n        \"\"\"\n        initialize your data structure here.\n        \"\"\"\n        \n\n    def push(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: void\n        \"\"\"\n        \n\n    def pop(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n    def top(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n    def peekMax(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n    def popMax(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n\n# Your MaxStack object will be instantiated and called as such:\n# obj = MaxStack()\n# obj.push(x)\n# param_2 = obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.peekMax()\n# param_5 = obj.popMax()"},{"value":"c","text":"C","defaultCode":"typedef struct {\n    \n} MaxStack;\n\n/** initialize your data structure here. */\nMaxStack* maxStackCreate(int maxSize) {\n    \n}\n\nvoid maxStackPush(MaxStack* obj, int x) {\n    \n}\n\nint maxStackPop(MaxStack* obj) {\n    \n}\n\nint maxStackTop(MaxStack* obj) {\n    \n}\n\nint maxStackPeekMax(MaxStack* obj) {\n    \n}\n\nint maxStackPopMax(MaxStack* obj) {\n    \n}\n\nvoid maxStackFree(MaxStack* obj) {\n    \n}\n\n/**\n * Your MaxStack struct will be instantiated and called as such:\n * struct MaxStack* obj = maxStackCreate(maxSize);\n * maxStackPush(obj, x);\n * int param_2 = maxStackPop(obj);\n * int param_3 = maxStackTop(obj);\n * int param_4 = maxStackPeekMax(obj);\n * int param_5 = maxStackPopMax(obj);\n * maxStackFree(obj);\n */"},{"value":"csharp","text":"C#","defaultCode":"public class MaxStack {\n\n    /** initialize your data structure here. */\n    public MaxStack() {\n        \n    }\n    \n    public void Push(int x) {\n        \n    }\n    \n    public int Pop() {\n        \n    }\n    \n    public int Top() {\n        \n    }\n    \n    public int PeekMax() {\n        \n    }\n    \n    public int PopMax() {\n        \n    }\n}\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * MaxStack obj = new MaxStack();\n * obj.Push(x);\n * int param_2 = obj.Pop();\n * int param_3 = obj.Top();\n * int param_4 = obj.PeekMax();\n * int param_5 = obj.PopMax();\n */"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * initialize your data structure here.\n */\nvar MaxStack = function() {\n    \n};\n\n/** \n * @param {number} x\n * @return {void}\n */\nMaxStack.prototype.push = function(x) {\n    \n};\n\n/**\n * @return {number}\n */\nMaxStack.prototype.pop = function() {\n    \n};\n\n/**\n * @return {number}\n */\nMaxStack.prototype.top = function() {\n    \n};\n\n/**\n * @return {number}\n */\nMaxStack.prototype.peekMax = function() {\n    \n};\n\n/**\n * @return {number}\n */\nMaxStack.prototype.popMax = function() {\n    \n};\n\n/** \n * Your MaxStack object will be instantiated and called as such:\n * var obj = Object.create(MaxStack).createNew()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.peekMax()\n * var param_5 = obj.popMax()\n */"},{"value":"ruby","text":"Ruby","defaultCode":"class MaxStack\n\n=begin\n    initialize your data structure here.\n=end\n    def initialize()\n        \n    end\n\n\n=begin\n    :type x: Integer\n    :rtype: Void\n=end\n    def push(x)\n        \n    end\n\n\n=begin\n    :rtype: Integer\n=end\n    def pop()\n        \n    end\n\n\n=begin\n    :rtype: Integer\n=end\n    def top()\n        \n    end\n\n\n=begin\n    :rtype: Integer\n=end\n    def peek_max()\n        \n    end\n\n\n=begin\n    :rtype: Integer\n=end\n    def pop_max()\n        \n    end\n\n\nend\n\n# Your MaxStack object will be instantiated and called as such:\n# obj = MaxStack.new()\n# obj.push(x)\n# param_2 = obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.peek_max()\n# param_5 = obj.pop_max()"},{"value":"swift","text":"Swift","defaultCode":"\nclass MaxStack {\n\n    /** initialize your data structure here. */\n    init() {\n        \n    }\n    \n    func push(_ x: Int) {\n      \n    }\n    \n    func pop() -> Int {\n      \n    }\n    \n    func top() -> Int {\n      \n    }\n    \n    func peekMax() -> Int {\n      \n    }\n    \n    func popMax() -> Int {\n      \n    }\n}\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * let obj = MaxStack()\n * obj.push(x)\n * let ret_2: Int = obj.pop()\n * let ret_3: Int = obj.top()\n * let ret_4: Int = obj.peekMax()\n * let ret_5: Int = obj.popMax()\n */\n "},{"value":"golang","text":"Go","defaultCode":"type MaxStack struct {\n    \n}\n\n\n/** initialize your data structure here. */\nfunc Constructor() MaxStack {\n    \n}\n\n\nfunc (this *MaxStack) Push(x int)  {\n    \n}\n\n\nfunc (this *MaxStack) Pop() int {\n    \n}\n\n\nfunc (this *MaxStack) Top() int {\n    \n}\n\n\nfunc (this *MaxStack) PeekMax() int {\n    \n}\n\n\nfunc (this *MaxStack) PopMax() int {\n    \n}\n\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * obj := Constructor();\n * obj.Push(x);\n * param_2 := obj.Pop();\n * param_3 := obj.Top();\n * param_4 := obj.PeekMax();\n * param_5 := obj.PopMax();\n */"},{"value":"scala","text":"Scala","defaultCode":"class MaxStack() {\n\n    /** initialize your data structure here. */\n    \n\n    def push(x: Int) {\n        \n    }\n\n    def pop(): Int = {\n        \n    }\n\n    def top(): Int = {\n        \n    }\n\n    def peekMax(): Int = {\n        \n    }\n\n    def popMax(): Int = {\n        \n    }\n\n}\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * var obj = new MaxStack()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.peekMax()\n * var param_5 = obj.popMax()\n */"},{"value":"kotlin","text":"Kotlin","defaultCode":"class MaxStack() {\n\n    /** initialize your data structure here. */\n    \n\n    fun push(x: Int) {\n        \n    }\n\n    fun pop(): Int {\n        \n    }\n\n    fun top(): Int {\n        \n    }\n\n    fun peekMax(): Int {\n        \n    }\n\n    fun popMax(): Int {\n        \n    }\n\n}\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * var obj = MaxStack()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.peekMax()\n * var param_5 = obj.popMax()\n */"}],"testcase":"[\"MaxStack\",\"push\",\"push\",\"push\",\"top\",\"popMax\",\"top\",\"peekMax\",\"pop\",\"top\"]\n[[],[5],[1],[5],[],[],[],[],[],[]]","testable":true,"templateMeta":{"classname":"MaxStack","maxbytesperline":130000,"constructor":{"params":[{"type":"integer","name":"maxSize","lang":"c","value":"64000"}],"comment":"initialize your data structure here."},"methods":[{"name":"push","params":[{"type":"integer","name":"x"}],"return":{"type":"void"}},{"name":"pop","params":[],"return":{"type":"integer"}},{"name":"top","params":[],"return":{"type":"integer"}},{"name":"peekMax","params":[],"return":{"type":"integer"}},{"name":"popMax","params":[],"return":{"type":"integer"}}],"systemdesign":true,"params":[{"name":"inputs","type":"integer[]"},{"name":"inputs","type":"integer[]"}],"return":{"type":"list<String>","dealloc":true}}}
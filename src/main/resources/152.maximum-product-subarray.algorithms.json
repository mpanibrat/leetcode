{"id":152,"fid":152,"name":"Maximum Product Subarray","slug":"maximum-product-subarray","link":"https://leetcode.com/problems/maximum-product-subarray/description/","percent":27.734871508068366,"level":"Medium","category":"algorithms","totalAC":"169.1K","totalSubmit":"609.7K","desc":"Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [2,3,-2,4]\r\nOutput: 6\r\nExplanation: [2,3] has the largest product 6.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [-2,0,-1]\r\nOutput: 0\r\nExplanation: The result cannot be 2, because [-2,-1] is not a subarray.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maxProduct(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int maxProduct(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maxProduct(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def maxProduct(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int maxProduct(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaxProduct(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar maxProduct = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef max_product(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maxProduct(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func maxProduct(nums []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def maxProduct(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun maxProduct(nums: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[2,3,-2,4]","testable":true,"templateMeta":{"name":"maxProduct","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}
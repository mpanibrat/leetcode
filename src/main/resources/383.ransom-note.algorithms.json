{"id":383,"fid":383,"name":"Ransom Note","slug":"ransom-note","link":"https://leetcode.com/problems/ransom-note/description/","percent":48.57188455637812,"level":"Easy","category":"algorithms","totalAC":"94.3K","totalSubmit":"194.2K","desc":"\r\nGiven an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom \r\nnote can be constructed from the magazines ; otherwise, it will return false. \r\n\r\n\r\nEach letter in the magazine string can only be used once in your ransom note.\r\n\r\n\r\nNote:\r\nYou may assume that both strings contain only lowercase letters.\r\n\r\n\r\n\r\ncanConstruct(\"a\", \"b\") -> false\r\ncanConstruct(\"aa\", \"ab\") -> false\r\ncanConstruct(\"aa\", \"aab\") -> true\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool canConstruct(string ransomNote, string magazine) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean canConstruct(String ransomNote, String magazine) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def canConstruct(self, ransomNote, magazine):\r\n        \"\"\"\r\n        :type ransomNote: str\r\n        :type magazine: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def canConstruct(self, ransomNote, magazine):\n        \"\"\"\n        :type ransomNote: str\n        :type magazine: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool canConstruct(char* ransomNote, char* magazine) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool CanConstruct(string ransomNote, string magazine) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} ransomNote\r\n * @param {string} magazine\r\n * @return {boolean}\r\n */\r\nvar canConstruct = function(ransomNote, magazine) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} ransom_note\r\n# @param {String} magazine\r\n# @return {Boolean}\r\ndef can_construct(ransom_note, magazine)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func canConstruct(_ ransomNote: String, _ magazine: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func canConstruct(ransomNote string, magazine string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def canConstruct(ransomNote: String, magazine: String): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun canConstruct(ransomNote: String, magazine: String): Boolean {\n        \n    }\n}"}],"testcase":"\"a\"\n\"b\"","testable":true,"templateMeta":{"name":"canConstruct","params":[{"name":"ransomNote","type":"string"},{"name":"magazine","type":"string"}],"return":{"type":"boolean"}}}
{"id":892,"fid":862,"name":"Shortest Subarray with Sum at Least K","slug":"shortest-subarray-with-sum-at-least-k","link":"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/description/","percent":19.701403205426615,"level":"Hard","category":"algorithms","totalAC":"5.9K","totalSubmit":"30.1K","desc":"Return the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\r\n\r\nIf there is no non-empty subarray with sum at least K, return -1.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [1], K = 1\r\nOutput: 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = [1,2], K = 4\r\nOutput: -1\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: A = [2,-1,2], K = 3\r\nOutput: 3\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 50000\r\n\t-10 ^ 5 <= A[i] <= 10 ^ 5\r\n\t1 <= K <= 10 ^ 9\r\n\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int shortestSubarray(vector<int>& A, int K) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int shortestSubarray(int[] A, int K) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def shortestSubarray(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def shortestSubarray(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int shortestSubarray(int* A, int ASize, int K) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int ShortestSubarray(int[] A, int K) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar shortestSubarray = function(A, K) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\n# @param {Integer} k\n# @return {Integer}\ndef shortest_subarray(a, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func shortestSubarray(_ A: [Int], _ K: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func shortestSubarray(A []int, K int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def shortestSubarray(A: Array[Int], K: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun shortestSubarray(A: IntArray, K: Int): Int {\n        \n    }\n}"}],"testcase":"[1]\n1","testable":true,"templateMeta":{"name":"shortestSubarray","params":[{"name":"A","type":"integer[]"},{"name":"K","type":"integer"}],"return":{"type":"integer"}}}
{"id":875,"fid":845,"name":"Longest Mountain in Array","slug":"longest-mountain-in-array","link":"https://leetcode.com/problems/longest-mountain-in-array/description/","percent":32.16475345682233,"level":"Medium","category":"algorithms","totalAC":"9.9K","totalSubmit":"30.7K","desc":"Let's call any (contiguous) subarray B (of A) a mountain if the following properties hold:\r\n\r\n\r\n\tB.length >= 3\r\n\tThere exists some 0 < i < B.length - 1 such that B[0] < B[1] < ... B[i-1] < B[i] > B[i+1] > ... > B[B.length - 1]\r\n\r\n\r\n(Note that B could be any subarray of A, including the entire array A.)\r\n\r\nGiven an array A of integers, return the length of the longest mountain. \r\n\r\nReturn 0 if there is no mountain.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [2,1,4,7,3,2,5]\r\nOutput: 5\r\nExplanation: The largest mountain is [1,4,7,3,2] which has length 5.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [2,2,2]\r\nOutput: 0\r\nExplanation: There is no mountain.\r\n\r\n\r\nNote:\r\n\r\n\r\n\t0 <= A.length <= 10000\r\n\t0 <= A[i] <= 10000\r\n\r\n\r\nFollow up:\r\n\r\n\r\n\tCan you solve it using only one pass?\r\n\tCan you solve it in O(1) space?\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int longestMountain(vector<int>& A) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int longestMountain(int[] A) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def longestMountain(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def longestMountain(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int longestMountain(int* A, int ASize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int LongestMountain(int[] A) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} A\n * @return {number}\n */\nvar longestMountain = function(A) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\n# @return {Integer}\ndef longest_mountain(a)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func longestMountain(_ A: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func longestMountain(A []int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def longestMountain(A: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun longestMountain(A: IntArray): Int {\n        \n    }\n}"}],"testcase":"[2,1,4,7,3,2,5]","testable":true,"templateMeta":{"name":"longestMountain","params":[{"name":"A","type":"integer[]"}],"return":{"type":"integer"}}}
{"id":486,"fid":486,"name":"Predict the Winner","slug":"predict-the-winner","link":"https://leetcode.com/problems/predict-the-winner/description/","percent":45.978596516040824,"level":"Medium","category":"algorithms","totalAC":"39K","totalSubmit":"84.8K","desc":"Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins. \r\n\r\nGiven an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score. \r\n\r\nExample 1:\r\n\r\nInput: [1, 5, 2]\r\nOutput: False\r\nExplanation: Initially, player 1 can choose between 1 and 2. If he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). So, final score of player 1 is 1 + 2 = 3, and player 2 is 5. Hence, player 1 will never be the winner and you need to return False.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 5, 233, 7]\r\nOutput: True\r\nExplanation: Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.Finally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\r\n\r\n\r\n\r\nNote:\r\n\r\n1 \r\nAny scores in the given array are non-negative integers and will not exceed 10,000,000.\r\nIf the scores of both players are equal, then player 1 is still the winner.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool PredictTheWinner(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean PredictTheWinner(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def PredictTheWinner(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def PredictTheWinner(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool PredictTheWinner(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool PredictTheWinner(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {boolean}\r\n */\r\nvar PredictTheWinner = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Boolean}\r\ndef predict_the_winner(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func PredictTheWinner(_ nums: [Int]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func PredictTheWinner(nums []int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def PredictTheWinner(nums: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun PredictTheWinner(nums: IntArray): Boolean {\n        \n    }\n}"}],"testcase":"[1,5,2]","testable":true,"templateMeta":{"name":"PredictTheWinner","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"boolean"}}}
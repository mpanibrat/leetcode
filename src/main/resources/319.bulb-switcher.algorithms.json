{"id":319,"fid":319,"name":"Bulb Switcher","slug":"bulb-switcher","link":"https://leetcode.com/problems/bulb-switcher/description/","percent":43.3747923672163,"level":"Medium","category":"algorithms","totalAC":"53.5K","totalSubmit":"123.4K","desc":"There are n bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the i-th round, you toggle every i bulb. For the n-th round, you only toggle the last bulb. Find how many bulbs are on after n rounds.\r\n\r\nExample:\r\n\r\n\r\nInput: 3\r\nOutput: 1 \r\nExplanation: \r\nAt first, the three bulbs are [off, off, off].\r\nAfter first round, the three bulbs are [on, on, on].\r\nAfter second round, the three bulbs are [on, off, on].\r\nAfter third round, the three bulbs are [on, off, off]. \r\n\r\nSo you should return 1, because there is only one bulb is on.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int bulbSwitch(int n) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int bulbSwitch(int n) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def bulbSwitch(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def bulbSwitch(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int bulbSwitch(int n) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int BulbSwitch(int n) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} n\r\n * @return {number}\r\n */\r\nvar bulbSwitch = function(n) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\r\n# @return {Integer}\r\ndef bulb_switch(n)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func bulbSwitch(_ n: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func bulbSwitch(n int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def bulbSwitch(n: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun bulbSwitch(n: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"3","testable":true,"templateMeta":{"name":"bulbSwitch","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}
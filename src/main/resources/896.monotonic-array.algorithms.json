{"id":932,"fid":896,"name":"Monotonic Array","slug":"monotonic-array","link":"https://leetcode.com/problems/monotonic-array/description/","percent":54.54009616876066,"level":"Easy","category":"algorithms","totalAC":"17.6K","totalSubmit":"32.2K","desc":"An array is monotonic if it is either monotone increasing or monotone decreasing.\r\n\r\nAn array A is monotone increasing if for all i <= j, A[i] <= A[j].  An array A is monotone decreasing if for all i <= j, A[i] >= A[j].\r\n\r\nReturn true if and only if the given array A is monotonic.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: [1,2,2,3]\r\nOutput: true\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [6,5,4,4]\r\nOutput: true\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: [1,3,2]\r\nOutput: false\r\n\r\n\r\n\r\nExample 4:\r\n\r\n\r\nInput: [1,2,4,5]\r\nOutput: true\r\n\r\n\r\n\r\nExample 5:\r\n\r\n\r\nInput: [1,1,1]\r\nOutput: true\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 50000\r\n\t-100000 <= A[i] <= 100000\r\n\r\n\r\n\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isMonotonic(vector<int>& A) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isMonotonic(int[] A) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isMonotonic(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isMonotonic(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool isMonotonic(int* A, int ASize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsMonotonic(int[] A) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} A\n * @return {boolean}\n */\nvar isMonotonic = function(A) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\n# @return {Boolean}\ndef is_monotonic(a)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isMonotonic(_ A: [Int]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isMonotonic(A []int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isMonotonic(A: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isMonotonic(A: IntArray): Boolean {\n        \n    }\n}"}],"testcase":"[1,2,2,3]","testable":true,"templateMeta":{"name":"isMonotonic","params":[{"name":"A","type":"integer[]"}],"return":{"type":"boolean"}}}
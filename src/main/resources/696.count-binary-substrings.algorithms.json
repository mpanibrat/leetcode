{"id":696,"fid":696,"name":"Count Binary Substrings","slug":"count-binary-substrings","link":"https://leetcode.com/problems/count-binary-substrings/description/","percent":51.4376130198915,"level":"Easy","category":"algorithms","totalAC":"22.8K","totalSubmit":"44.2K","desc":"Give a string s, count the number of non-empty (contiguous) substrings that have the same number of 0's and 1's, and all the 0's and all the 1's in these substrings are grouped consecutively. \r\n\r\nSubstrings that occur multiple times are counted the number of times they occur.\r\n\r\nExample 1:\r\n\r\nInput: \"00110011\"\r\nOutput: 6\r\nExplanation: There are 6 substrings that have equal number of consecutive 1's and 0's: \"0011\", \"01\", \"1100\", \"10\", \"0011\", and \"01\".\r\nNotice that some of these substrings repeat and are counted the number of times they occur.\r\nAlso, \"00110011\" is not a valid substring because all the 0's (and 1's) are not grouped together.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"10101\"\r\nOutput: 4\r\nExplanation: There are 4 substrings: \"10\", \"01\", \"10\", \"01\" that have equal number of consecutive 1's and 0's.\r\n\r\n\r\n\r\nNote:\r\ns.length will be between 1 and 50,000.\r\ns will only consist of \"0\" or \"1\" characters.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int countBinarySubstrings(string s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int countBinarySubstrings(String s) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def countBinarySubstrings(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def countBinarySubstrings(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int countBinarySubstrings(char* s) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int CountBinarySubstrings(string s) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {number}\n */\nvar countBinarySubstrings = function(s) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {Integer}\ndef count_binary_substrings(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func countBinarySubstrings(_ s: String) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func countBinarySubstrings(s string) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def countBinarySubstrings(s: String): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun countBinarySubstrings(s: String): Int {\n        \n    }\n}"}],"testcase":"\"00110\"","testable":true,"templateMeta":{"name":"countBinarySubstrings","params":[{"name":"s","type":"string"}],"return":{"type":"integer"}}}
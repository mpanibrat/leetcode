{"id":944,"fid":908,"name":"Smallest Range I","slug":"smallest-range-i","link":"https://leetcode.com/problems/smallest-range-i/description/","percent":63.384327193256325,"level":"Easy","category":"algorithms","totalAC":"10.2K","totalSubmit":"16K","desc":"Given an array A of integers, for each integer A[i] we may choose any x with -K <= x <= K, and add x to A[i].\r\n\r\nAfter this process, we have some array B.\r\n\r\nReturn the smallest possible difference between the maximum value of B and the minimum value of B.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [1], K = 0\r\nOutput: 0\r\nExplanation: B = [1]\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: A = [0,10], K = 2\r\nOutput: 6\r\nExplanation: B = [2,8]\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: A = [1,3,6], K = 3\r\nOutput: 0\r\nExplanation: B = [3,3,3] or B = [4,4,4]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\t1 <= A.length <= 10000\r\n\t0 <= A[i] <= 10000\r\n\t0 <= K <= 10000\r\n\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int smallestRangeI(vector<int>& A, int K) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int smallestRangeI(int[] A, int K) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def smallestRangeI(self, A, K):\r\n        \"\"\"\r\n        :type A: List[int]\r\n        :type K: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def smallestRangeI(self, A, K):\r\n        \"\"\"\r\n        :type A: List[int]\r\n        :type K: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int smallestRangeI(int* A, int ASize, int K) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int SmallestRangeI(int[] A, int K) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} A\r\n * @param {number} K\r\n * @return {number}\r\n */\r\nvar smallestRangeI = function(A, K) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\r\n# @param {Integer} k\r\n# @return {Integer}\r\ndef smallest_range_i(a, k)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func smallestRangeI(_ A: [Int], _ K: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func smallestRangeI(A []int, K int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def smallestRangeI(A: Array[Int], K: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun smallestRangeI(A: IntArray, K: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[1]\n0","testable":true,"templateMeta":{"name":"smallestRangeI","params":[{"name":"A","type":"integer[]"},{"name":"K","type":"integer"}],"return":{"type":"integer"}}}
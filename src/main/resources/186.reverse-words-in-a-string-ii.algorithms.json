{"id":186,"fid":186,"name":"Reverse Words in a String II","slug":"reverse-words-in-a-string-ii","link":"https://leetcode.com/problems/reverse-words-in-a-string-ii/description/","percent":34.13055530485682,"level":"Medium","category":"algorithms","totalAC":"52.9K","totalSubmit":"155.1K","desc":"Given an input string , reverse the string word by word. \r\n\r\nExample:\r\n\r\n\r\nInput:  [\"t\",\"h\",\"e\",\" \",\"s\",\"k\",\"y\",\" \",\"i\",\"s\",\" \",\"b\",\"l\",\"u\",\"e\"]\r\nOutput: [\"b\",\"l\",\"u\",\"e\",\" \",\"i\",\"s\",\" \",\"s\",\"k\",\"y\",\" \",\"t\",\"h\",\"e\"]\r\n\r\nNote: \r\n\r\n\r\n\tA word is defined as a sequence of non-space characters.\r\n\tThe input string does not contain leading or trailing spaces.\r\n\tThe words are always separated by a single space.\r\n\r\n\r\nFollow up: Could you do it in-place without allocating extra space?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    void reverseWords(vector<char>& str) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public void reverseWords(char[] str) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def reverseWords(self, str):\r\n        \"\"\"\r\n        :type str: List[str]\r\n        :rtype: void Do not return anything, modify str in-place instead.\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def reverseWords(self, str):\r\n        \"\"\"\r\n        :type str: List[str]\r\n        :rtype: void Do not return anything, modify str in-place instead.\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"void reverseWords(char* str, int strSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public void ReverseWords(char[] str) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {character[]} str\r\n * @return {void} Do not return anything, modify str in-place instead.\r\n */\r\nvar reverseWords = function(str) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Character[]} str\r\n# @return {Void} Do not return anything, modify str in-place instead.\r\ndef reverse_words(str)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func reverseWords(_ str: inout [Character]) {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func reverseWords(str []byte)  {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def reverseWords(str: Array[Char]): Unit = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun reverseWords(str: CharArray): Unit {\r\n        \r\n    }\r\n}"}],"testcase":"[\"t\",\"h\",\"e\",\" \",\"s\",\"k\",\"y\",\" \",\"i\",\"s\",\" \",\"b\",\"l\",\"u\",\"e\"]","testable":true,"templateMeta":{"name":"reverseWords","params":[{"name":"str","type":"character[]"}],"return":{"type":"void"},"output":{"paramindex":0}}}
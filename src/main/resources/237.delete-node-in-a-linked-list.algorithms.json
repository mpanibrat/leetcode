{"id":237,"fid":237,"name":"Delete Node in a Linked List","slug":"delete-node-in-a-linked-list","link":"https://leetcode.com/problems/delete-node-in-a-linked-list/description/","percent":49.99315875016585,"level":"Easy","category":"algorithms","totalAC":"241.1K","totalSubmit":"482.4K","desc":"Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.\r\n\r\nGiven linked list -- head = [4,5,1,9], which looks like following:\r\n\r\n\r\n    4 -> 5 -> 1 -> 9\r\n\r\n\r\nExample 1:\r\n\r\n\r\nInput: head = [4,5,1,9], node = 5\r\nOutput: [4,1,9]\r\nExplanation: You are given the second node with value 5, the linked list\r\n             should become 4 -> 1 -> 9 after calling your function.\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: head = [4,5,1,9], node = 1\r\nOutput: [4,5,9]\r\nExplanation: You are given the third node with value 1, the linked list\r\n             should become 4 -> 5 -> 9 after calling your function.\r\n\r\n\r\nNote:\r\n\r\n\r\n\tThe linked list will have at least two elements.\r\n\tAll of the nodes' values will be unique.\r\n\tThe given node will not be the tail and it will always be a valid node of the linked list.\r\n\tDo not return anything from your function.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    void deleteNode(ListNode* node) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\nclass Solution {\r\n    public void deleteNode(ListNode node) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"# Definition for singly-linked list.\r\n# class ListNode(object):\r\n#     def __init__(self, x):\r\n#         self.val = x\r\n#         self.next = None\r\n\r\nclass Solution(object):\r\n    def deleteNode(self, node):\r\n        \"\"\"\r\n        :type node: ListNode\r\n        :rtype: void Do not return anything, modify node in-place instead.\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"# Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, x):\r\n#         self.val = x\r\n#         self.next = None\r\n\r\nclass Solution:\r\n    def deleteNode(self, node):\r\n        \"\"\"\r\n        :type node: ListNode\r\n        :rtype: void Do not return anything, modify node in-place instead.\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n */\r\nvoid deleteNode(struct ListNode* node) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     public int val;\r\n *     public ListNode next;\r\n *     public ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public void DeleteNode(ListNode node) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} node\r\n * @return {void} Do not return anything, modify node in-place instead.\r\n */\r\nvar deleteNode = function(node) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# Definition for singly-linked list.\r\n# class ListNode\r\n#     attr_accessor :val, :next\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @next = nil\r\n#     end\r\n# end\r\n\r\n# @param {ListNode} node\r\n# @return {Void} Do not return anything, modify node in-place instead.\r\ndef delete_node(node)\r\n    \r\nend"}],"testcase":"[4,5,1,9]\n5","testable":true,"templateMeta":{"name":"deleteNode","params":[{"name":"node","type":"ListNode"},{"name":"n","type":"integer"}],"return":{"type":"void"},"output":{"paramindex":0},"generatedriver":false,"generatedefinition":false}}
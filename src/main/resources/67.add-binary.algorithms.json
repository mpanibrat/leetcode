{"id":67,"fid":67,"name":"Add Binary","slug":"add-binary","link":"https://leetcode.com/problems/add-binary/description/","percent":36.280721152917295,"level":"Easy","category":"algorithms","totalAC":"244.1K","totalSubmit":"672.9K","desc":"Given two binary strings, return their sum (also a binary string).\r\n\r\nThe input strings are both non-empty and contains only characters 1 orÂ 0.\r\n\r\nExample 1:\r\n\r\n\r\nInput: a = \"11\", b = \"1\"\r\nOutput: \"100\"\r\n\r\nExample 2:\r\n\r\n\r\nInput: a = \"1010\", b = \"1011\"\r\nOutput: \"10101\"\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    string addBinary(string a, string b) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public String addBinary(String a, String b) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def addBinary(self, a, b):\r\n        \"\"\"\r\n        :type a: str\r\n        :type b: str\r\n        :rtype: str\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def addBinary(self, a, b):\r\n        \"\"\"\r\n        :type a: str\r\n        :type b: str\r\n        :rtype: str\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"char* addBinary(char* a, char* b) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public string AddBinary(string a, string b) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} a\r\n * @param {string} b\r\n * @return {string}\r\n */\r\nvar addBinary = function(a, b) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} a\r\n# @param {String} b\r\n# @return {String}\r\ndef add_binary(a, b)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func addBinary(_ a: String, _ b: String) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func addBinary(a string, b string) string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def addBinary(a: String, b: String): String = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun addBinary(a: String, b: String): String {\r\n        \r\n    }\r\n}"}],"testcase":"\"11\"\n\"1\"","testable":true,"templateMeta":{"name":"addBinary","params":[{"name":"a","type":"string"},{"name":"b","type":"string"}],"return":{"type":"string"}}}
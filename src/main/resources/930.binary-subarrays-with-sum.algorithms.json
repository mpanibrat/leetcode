{"id":966,"fid":930,"name":"Binary Subarrays With Sum","slug":"binary-subarrays-with-sum","link":"https://leetcode.com/problems/binary-subarrays-with-sum/description/","percent":33.20683111954459,"level":"Medium","category":"algorithms","totalAC":"3.7K","totalSubmit":"11.1K","desc":"In an array A of 0s and 1s, how many non-empty subarrays have sum S?\r\n\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput: A = [1,0,1,0,1], S = 2\r\nOutput: 4\r\nExplanation: \r\nThe 4 subarrays are bolded below:\r\n[1,0,1,0,1]\r\n[1,0,1,0,1]\r\n[1,0,1,0,1]\r\n[1,0,1,0,1]\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tA.length <= 30000\r\n\t0 <= S <= A.length\r\n\tA[i] is either 0 or 1.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int numSubarraysWithSum(vector<int>& A, int S) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int numSubarraysWithSum(int[] A, int S) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numSubarraysWithSum(self, A, S):\n        \"\"\"\n        :type A: List[int]\n        :type S: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numSubarraysWithSum(self, A, S):\n        \"\"\"\n        :type A: List[int]\n        :type S: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int numSubarraysWithSum(int* A, int ASize, int S) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NumSubarraysWithSum(int[] A, int S) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} A\n * @param {number} S\n * @return {number}\n */\nvar numSubarraysWithSum = function(A, S) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} a\n# @param {Integer} s\n# @return {Integer}\ndef num_subarrays_with_sum(a, s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numSubarraysWithSum(_ A: [Int], _ S: Int) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func numSubarraysWithSum(A []int, S int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numSubarraysWithSum(A: Array[Int], S: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numSubarraysWithSum(A: IntArray, S: Int): Int {\n        \n    }\n}"}],"testcase":"[1,0,1,0,1]\n2","testable":true,"templateMeta":{"name":"numSubarraysWithSum","params":[{"name":"A","type":"integer[]"},{"name":"S","type":"integer"}],"return":{"type":"integer"}}}
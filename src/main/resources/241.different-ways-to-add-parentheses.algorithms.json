{"id":241,"fid":241,"name":"Different Ways to Add Parentheses","slug":"different-ways-to-add-parentheses","link":"https://leetcode.com/problems/different-ways-to-add-parentheses/description/","percent":47.78433049715632,"level":"Medium","category":"algorithms","totalAC":"63.7K","totalSubmit":"133.3K","desc":"Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are +, - and *.\r\n\r\nExample 1:\r\n\r\n\r\nInput: \"2-1-1\"\r\nOutput: [0, 2]\r\nExplanation: \r\n((2-1)-1) = 0 \r\n(2-(1-1)) = 2\r\n\r\nExample 2:\r\n\r\n\r\nInput: \"2*3-4*5\"\r\nOutput: [-34, -14, -10, -10, 10]\r\nExplanation: \r\n(2*(3-(4*5))) = -34 \r\n((2*3)-(4*5)) = -14 \r\n((2*(3-4))*5) = -10 \r\n(2*((3-4)*5)) = -10 \r\n(((2*3)-4)*5) = 10\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<int> diffWaysToCompute(string input) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public List<Integer> diffWaysToCompute(String input) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def diffWaysToCompute(self, input):\r\n        \"\"\"\r\n        :type input: str\r\n        :rtype: List[int]\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def diffWaysToCompute(self, input):\r\n        \"\"\"\r\n        :type input: str\r\n        :rtype: List[int]\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nint* diffWaysToCompute(char* input, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public IList<int> DiffWaysToCompute(string input) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} input\r\n * @return {number[]}\r\n */\r\nvar diffWaysToCompute = function(input) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} input\r\n# @return {Integer[]}\r\ndef diff_ways_to_compute(input)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func diffWaysToCompute(_ input: String) -> [Int] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func diffWaysToCompute(input string) []int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def diffWaysToCompute(input: String): List[Int] = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun diffWaysToCompute(input: String): List<Int> {\r\n        \r\n    }\r\n}"}],"testcase":"\"2-1-1\"","testable":true,"templateMeta":{"name":"diffWaysToCompute","params":[{"name":"input","type":"string"}],"return":{"type":"list<integer>"}}}
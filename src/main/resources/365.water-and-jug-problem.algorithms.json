{"id":365,"fid":365,"name":"Water and Jug Problem","slug":"water-and-jug-problem","link":"https://leetcode.com/problems/water-and-jug-problem/description/","percent":28.423511281273328,"level":"Medium","category":"algorithms","totalAC":"23.6K","totalSubmit":"83.1K","desc":"You are given two jugs with capacities x and y litres. There is an infinite amount of water supply available. You need to determine whether it is possible to measure exactly z litres using these two jugs.\r\n\r\nIf z liters of water is measurable, you must have z liters of water contained within one or both buckets by the end.\r\n\r\nOperations allowed:\r\n\r\n\r\n\tFill any of the jugs completely with water.\r\n\tEmpty any of the jugs.\r\n\tPour water from one jug into another till the other jug is completely full or the first jug itself is empty.\r\n\r\n\r\nExample 1: (From the famous \"Die Hard\" example)\r\n\r\n\r\nInput: x = 3, y = 5, z = 4\r\nOutput: True\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: x = 2, y = 6, z = 5\r\nOutput: False\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool canMeasureWater(int x, int y, int z) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean canMeasureWater(int x, int y, int z) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def canMeasureWater(self, x, y, z):\r\n        \"\"\"\r\n        :type x: int\r\n        :type y: int\r\n        :type z: int\r\n        :rtype: bool\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def canMeasureWater(self, x, y, z):\r\n        \"\"\"\r\n        :type x: int\r\n        :type y: int\r\n        :type z: int\r\n        :rtype: bool\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"bool canMeasureWater(int x, int y, int z) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool CanMeasureWater(int x, int y, int z) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} z\r\n * @return {boolean}\r\n */\r\nvar canMeasureWater = function(x, y, z) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} x\r\n# @param {Integer} y\r\n# @param {Integer} z\r\n# @return {Boolean}\r\ndef can_measure_water(x, y, z)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func canMeasureWater(_ x: Int, _ y: Int, _ z: Int) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func canMeasureWater(x int, y int, z int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def canMeasureWater(x: Int, y: Int, z: Int): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun canMeasureWater(x: Int, y: Int, z: Int): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"3\n5\n4","testable":true,"templateMeta":{"name":"canMeasureWater","params":[{"name":"x","type":"integer"},{"name":"y","type":"integer"},{"name":"z","type":"integer"}],"return":{"type":"boolean"}}}
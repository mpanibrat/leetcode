{"id":42,"fid":42,"name":"Trapping Rain Water","slug":"trapping-rain-water","link":"https://leetcode.com/problems/trapping-rain-water/description/","percent":39.8591685119041,"level":"Hard","category":"algorithms","totalAC":"214.9K","totalSubmit":"539.2K","desc":"Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.\r\n\r\n\r\nThe above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!\r\n\r\nExample:\r\n\r\n\r\nInput: [0,1,0,2,1,0,1,3,2,1,2,1]\r\nOutput: 6\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int trap(vector<int>& height) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int trap(int[] height) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def trap(self, height):\r\n        \"\"\"\r\n        :type height: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def trap(self, height):\r\n        \"\"\"\r\n        :type height: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int trap(int* height, int heightSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int Trap(int[] height) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} height\r\n * @return {number}\r\n */\r\nvar trap = function(height) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} height\r\n# @return {Integer}\r\ndef trap(height)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func trap(_ height: [Int]) -> Int {\r\n\r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func trap(height []int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def trap(height: Array[Int]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun trap(height: IntArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[0,1,0,2,1,0,1,3,2,1,2,1]","testable":true,"templateMeta":{"name":"trap","params":[{"name":"height","type":"integer[]"}],"return":{"type":"integer"}}}
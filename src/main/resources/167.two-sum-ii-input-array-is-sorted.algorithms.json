{"id":167,"fid":167,"name":"Two Sum II - Input array is sorted","slug":"two-sum-ii-input-array-is-sorted","link":"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/description/","percent":47.85275585328646,"level":"Easy","category":"algorithms","totalAC":"180.4K","totalSubmit":"376.9K","desc":"Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.\r\n\r\nThe function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.\r\n\r\nNote:\r\n\r\n\r\n\tYour returned answers (both index1 and index2) are not zero-based.\r\n\tYou may assume that each input would have exactly one solution and you may not use the same element twice.\r\n\r\n\r\nExample:\r\n\r\n\r\nInput: numbers = [2,7,11,15], target = 9\r\nOutput: [1,2]\r\nExplanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<int> twoSum(vector<int>& numbers, int target) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int[] twoSum(int[] numbers, int target) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def twoSum(self, numbers, target):\r\n        \"\"\"\r\n        :type numbers: List[int]\r\n        :type target: int\r\n        :rtype: List[int]\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def twoSum(self, numbers, target):\r\n        \"\"\"\r\n        :type numbers: List[int]\r\n        :type target: int\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nint* twoSum(int* numbers, int numbersSize, int target, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int[] TwoSum(int[] numbers, int target) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} numbers\r\n * @param {number} target\r\n * @return {number[]}\r\n */\r\nvar twoSum = function(numbers, target) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} numbers\r\n# @param {Integer} target\r\n# @return {Integer[]}\r\ndef two_sum(numbers, target)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func twoSum(_ numbers: [Int], _ target: Int) -> [Int] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func twoSum(numbers []int, target int) []int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def twoSum(numbers: Array[Int], target: Int): Array[Int] = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun twoSum(numbers: IntArray, target: Int): IntArray {\r\n        \r\n    }\r\n}"}],"testcase":"[2,7,11,15]\n9","testable":true,"templateMeta":{"name":"twoSum","params":[{"name":"numbers","type":"integer[]"},{"name":"target","type":"integer"}],"return":{"type":"integer[]"}}}
{"id":599,"fid":599,"name":"Minimum Index Sum of Two Lists","slug":"minimum-index-sum-of-two-lists","link":"https://leetcode.com/problems/minimum-index-sum-of-two-lists/description/","percent":46.615892468014415,"level":"Easy","category":"algorithms","totalAC":"43.2K","totalSubmit":"92.7K","desc":"\r\nSuppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings. \r\n\r\n\r\nYou need to help them find out their common interest with the least list index sum. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\r\n[\"Piatti\", \"The Grill at Torrey Pines\", \"Hungry Hunter Steakhouse\", \"Shogun\"]\r\nOutput: [\"Shogun\"]\r\nExplanation: The only restaurant they both like is \"Shogun\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\r\n[\"KFC\", \"Shogun\", \"Burger King\"]\r\nOutput: [\"Shogun\"]\r\nExplanation: The restaurant they both like and have the least index sum is \"Shogun\" with index sum 1 (0+1).\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of both lists will be in the range of [1, 1000].\r\nThe length of strings in both lists will be in the range of [1, 30].\r\nThe index is starting from 0 to the list length minus 1.\r\nNo duplicates in both lists.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String[] findRestaurant(String[] list1, String[] list2) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def findRestaurant(self, list1, list2):\r\n        \"\"\"\r\n        :type list1: List[str]\r\n        :type list2: List[str]\r\n        :rtype: List[str]\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def findRestaurant(self, list1, list2):\r\n        \"\"\"\r\n        :type list1: List[str]\r\n        :type list2: List[str]\r\n        :rtype: List[str]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nchar** findRestaurant(char** list1, int list1Size, char** list2, int list2Size, int* returnSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public string[] FindRestaurant(string[] list1, string[] list2) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string[]} list1\r\n * @param {string[]} list2\r\n * @return {string[]}\r\n */\r\nvar findRestaurant = function(list1, list2) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String[]} list1\r\n# @param {String[]} list2\r\n# @return {String[]}\r\ndef find_restaurant(list1, list2)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func findRestaurant(_ list1: [String], _ list2: [String]) -> [String] {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func findRestaurant(list1 []string, list2 []string) []string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def findRestaurant(list1: Array[String], list2: Array[String]): Array[String] = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun findRestaurant(list1: Array<String>, list2: Array<String>): Array<String> {\n        \n    }\n}"}],"testcase":"[\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"]\n[\"Piatti\",\"The Grill at Torrey Pines\",\"Hungry Hunter Steakhouse\",\"Shogun\"]","testable":true,"templateMeta":{"name":"findRestaurant","params":[{"name":"list1","type":"string[]"},{"name":"list2","type":"string[]"}],"return":{"type":"string[]"}}}
{"id":443,"fid":443,"name":"String Compression","slug":"string-compression","link":"https://leetcode.com/problems/string-compression/description/","percent":35.73186337237917,"level":"Easy","category":"algorithms","totalAC":"32.7K","totalSubmit":"91.4K","desc":"Given an array of characters, compress it in-place.\r\n\r\nThe length after compression must always be smaller than or equal to the original array.\r\n\r\nEvery element of the array should be a character (not int) of length 1.\r\n\r\nAfter you are done modifying the input array in-place, return the new length of the array.\r\n \r\n\r\nFollow up:\r\nCould you solve it using only O(1) extra space?\r\n \r\n\r\nExample 1:\r\n\r\n\r\nInput:\r\n[\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\r\n\r\nOutput:\r\nReturn 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\r\n\r\nExplanation:\r\n\"aa\" is replaced by \"a2\". \"bb\" is replaced by \"b2\". \"ccc\" is replaced by \"c3\".\r\n\r\n\r\n \r\n\r\nExample 2:\r\n\r\n\r\nInput:\r\n[\"a\"]\r\n\r\nOutput:\r\nReturn 1, and the first 1 characters of the input array should be: [\"a\"]\r\n\r\nExplanation:\r\nNothing is replaced.\r\n\r\n\r\n \r\n\r\nExample 3:\r\n\r\n\r\nInput:\r\n[\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\r\n\r\nOutput:\r\nReturn 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].\r\n\r\nExplanation:\r\nSince the character \"a\" does not repeat, it is not compressed. \"bbbbbbbbbbbb\" is replaced by \"b12\".\r\nNotice each digit has it's own entry in the array.\r\n\r\n\r\n \r\n\r\nNote:\r\n\r\n\r\n\tAll characters have an ASCII value in [35, 126].\r\n\t1 <= len(chars) <= 1000.\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int compress(vector<char>& chars) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int compress(char[] chars) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def compress(self, chars):\r\n        \"\"\"\r\n        :type chars: List[str]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def compress(self, chars):\r\n        \"\"\"\r\n        :type chars: List[str]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int compress(char* chars, int charsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int Compress(char[] chars) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {character[]} chars\r\n * @return {number}\r\n */\r\nvar compress = function(chars) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Character[]} chars\r\n# @return {Integer}\r\ndef compress(chars)\r\n    \r\nend"},{"value":"golang","text":"Go","defaultCode":"func compress(chars []byte) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def compress(chars: Array[Char]): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun compress(chars: CharArray): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]","testable":true,"templateMeta":{"name":"compress","params":[{"name":"chars","type":"character[]"}],"return":{"type":"integer"},"output":{"paramindex":0,"size":"ret"},"generatedriver":false,"generatedefinition":false}}
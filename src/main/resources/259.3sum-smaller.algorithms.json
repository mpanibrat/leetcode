{"id":259,"fid":259,"name":"3Sum Smaller","slug":"3sum-smaller","link":"https://leetcode.com/problems/3sum-smaller/description/","percent":43.41666916774213,"level":"Medium","category":"algorithms","totalAC":"43.4K","totalSubmit":"100K","desc":"Given an array of n integers nums and a target, find the number of index triplets i, j, k with 0 <= i < j < k < n that satisfy the condition nums[i] + nums[j] + nums[k] < target.\r\n\r\nExample:\r\n\r\n\r\nInput: nums = [-2,0,1,3], and target = 2\r\nOutput: 2 \r\nExplanation: Because there are two triplets which sums are less than 2:\r\n             [-2,0,1]\r\n             [-2,0,3]\r\n\r\n\r\nFollow up: Could you solve it in O(n2) runtime?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int threeSumSmaller(vector<int>& nums, int target) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public int threeSumSmaller(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def threeSumSmaller(self, nums, target):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type target: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def threeSumSmaller(self, nums, target):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type target: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int threeSumSmaller(int* nums, int numsSize, int target) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int ThreeSumSmaller(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @param {number} target\r\n * @return {number}\r\n */\r\nvar threeSumSmaller = function(nums, target) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @param {Integer} target\r\n# @return {Integer}\r\ndef three_sum_smaller(nums, target)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func threeSumSmaller(_ nums: [Int], _ target: Int) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func threeSumSmaller(nums []int, target int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def threeSumSmaller(nums: Array[Int], target: Int): Int = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun threeSumSmaller(nums: IntArray, target: Int): Int {\r\n        \r\n    }\r\n}"}],"testcase":"[-2,0,1,3]\n2","testable":true,"templateMeta":{"name":"threeSumSmaller","params":[{"name":"nums","type":"integer[]"},{"name":"target","type":"integer"}],"return":{"type":"integer"}}}
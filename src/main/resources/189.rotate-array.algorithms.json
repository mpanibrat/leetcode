{"id":189,"fid":189,"name":"Rotate Array","slug":"rotate-array","link":"https://leetcode.com/problems/rotate-array/description/","percent":27.377420189952627,"level":"Easy","category":"algorithms","totalAC":"229.5K","totalSubmit":"838.2K","desc":"Given an array, rotate the array to the right by k steps, where k is non-negative.\r\n\r\nExample 1:\r\n\r\n\r\nInput: [1,2,3,4,5,6,7] and k = 3\r\nOutput: [5,6,7,1,2,3,4]\r\nExplanation:\r\nrotate 1 steps to the right: [7,1,2,3,4,5,6]\r\nrotate 2 steps to the right: [6,7,1,2,3,4,5]\r\nrotate 3 steps to the right: [5,6,7,1,2,3,4]\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: [-1,-100,3,99] and k = 2\r\nOutput: [3,99,-1,-100]\r\nExplanation: \r\nrotate 1 steps to the right: [99,-1,-100,3]\r\nrotate 2 steps to the right: [3,99,-1,-100]\r\n\r\n\r\nNote:\r\n\r\n\r\n\tTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\r\n\tCould you do it in-place with O(1) extra space?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    void rotate(vector<int>& nums, int k) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public void rotate(int[] nums, int k) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def rotate(self, nums, k):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type k: int\r\n        :rtype: void Do not return anything, modify nums in-place instead.\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def rotate(self, nums, k):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type k: int\r\n        :rtype: void Do not return anything, modify nums in-place instead.\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"void rotate(int* nums, int numsSize, int k) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public void Rotate(int[] nums, int k) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @param {number} k\r\n * @return {void} Do not return anything, modify nums in-place instead.\r\n */\r\nvar rotate = function(nums, k) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @param {Integer} k\r\n# @return {Void} Do not return anything, modify nums in-place instead.\r\ndef rotate(nums, k)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func rotate(_ nums: inout [Int], _ k: Int) {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func rotate(nums []int, k int)  {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def rotate(nums: Array[Int], k: Int): Unit = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun rotate(nums: IntArray, k: Int): Unit {\r\n        \r\n    }\r\n}"}],"testcase":"[1,2,3,4,5,6,7]\n3","testable":true,"templateMeta":{"name":"rotate","params":[{"name":"nums","type":"integer[]"},{"name":"k","type":"integer"}],"return":{"type":"void"},"output":{"paramindex":0}}}
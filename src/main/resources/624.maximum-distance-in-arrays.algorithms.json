{"id":624,"fid":624,"name":"Maximum Distance in Arrays","slug":"maximum-distance-in-arrays","link":"https://leetcode.com/problems/maximum-distance-in-arrays/description/","percent":36.132250249394325,"level":"Easy","category":"algorithms","totalAC":"12.7K","totalSubmit":"35.1K","desc":"\r\nGiven m arrays, and each array is sorted in ascending order. Now you can pick up two integers from two different arrays (each array picks one) and calculate the distance. We define the distance between two integers a and b to be their absolute difference |a-b|. Your task is to find the maximum distance.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \r\n[[1,2,3],\r\n [4,5],\r\n [1,2,3]]\r\nOutput: 4\r\nExplanation: \r\nOne way to reach the maximum distance 4 is to pick 1 in the first or third array and pick 5 in the second array.\r\n\r\n\r\n\t\r\nNote:\r\n\r\nEach given array will have at least 1 number. There will be at least two non-empty arrays.\r\nThe total number of the integers in all the m arrays will be in the range of [2, 10000].\r\nThe integers in the m arrays will be in the range of [-10000, 10000].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maxDistance(vector<vector<int>>& arrays) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int maxDistance(List<List<Integer>> arrays) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maxDistance(self, arrays):\r\n        \"\"\"\r\n        :type arrays: List[List[int]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def maxDistance(self, arrays):\r\n        \"\"\"\r\n        :type arrays: List[List[int]]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int maxDistance(int** arrays, int arraysRowSize, int *arraysColSizes) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaxDistance(IList<IList<int>> arrays) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} arrays\r\n * @return {number}\r\n */\r\nvar maxDistance = function(arrays) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} arrays\r\n# @return {Integer}\r\ndef max_distance(arrays)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maxDistance(_ arrays: [[Int]]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func maxDistance(arrays [][]int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def maxDistance(arrays: List[List[Int]]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun maxDistance(arrays: List<List<Int>>): Int {\n        \n    }\n}"}],"testcase":"[[1,2,3],[4,5],[1,2,3]]","testable":true,"templateMeta":{"name":"maxDistance","params":[{"name":"arrays","type":"list<list<integer>>"}],"return":{"type":"integer"}}}
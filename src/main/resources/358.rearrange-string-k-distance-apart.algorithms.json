{"id":358,"fid":358,"name":"Rearrange String k Distance Apart","slug":"rearrange-string-k-distance-apart","link":"https://leetcode.com/problems/rearrange-string-k-distance-apart/description/","percent":31.926263751566633,"level":"Hard","category":"algorithms","totalAC":"18.3K","totalSubmit":"57.4K","desc":"Given a non-empty string s and an integer k, rearrange the string such that the same characters are at least distance k from each other.\r\n\r\nAll input strings are given in lowercase letters. If it is not possible to rearrange the string, return an empty string \"\".\r\n\r\nExample 1:\r\n\r\n\r\n\r\nInput: s = \"aabbcc\", k = 3\r\nOutput: \"abcabc\" \r\nExplanation: The same letters are at least distance 3 from each other.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: s = \"aaabc\", k = 3\r\nOutput: \"\" \r\nExplanation: It is not possible to rearrange the string.\r\n\r\n\r\n\r\nExample 3:\r\n\r\n\r\nInput: s = \"aaadbbcc\", k = 2\r\nOutput: \"abacabcd\"\r\nExplanation: The same letters are at least distance 2 from each other.\r\n\r\n\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    string rearrangeString(string s, int k) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public String rearrangeString(String s, int k) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def rearrangeString(self, s, k):\r\n        \"\"\"\r\n        :type s: str\r\n        :type k: int\r\n        :rtype: str\r\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def rearrangeString(self, s, k):\r\n        \"\"\"\r\n        :type s: str\r\n        :type k: int\r\n        :rtype: str\r\n        \"\"\""},{"value":"c","text":"C","defaultCode":"char* rearrangeString(char* s, int k) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public string RearrangeString(string s, int k) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @param {number} k\r\n * @return {string}\r\n */\r\nvar rearrangeString = function(s, k) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @param {Integer} k\r\n# @return {String}\r\ndef rearrange_string(s, k)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func rearrangeString(_ s: String, _ k: Int) -> String {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func rearrangeString(s string, k int) string {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def rearrangeString(s: String, k: Int): String = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun rearrangeString(s: String, k: Int): String {\r\n        \r\n    }\r\n}"}],"testcase":"\"aabbcc\"\n3","testable":true,"templateMeta":{"name":"rearrangeString","params":[{"name":"s","type":"string"},{"name":"k","type":"integer"}],"return":{"type":"string"}}}
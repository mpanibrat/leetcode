{"id":797,"fid":781,"name":"Rabbits in Forest","slug":"rabbits-in-forest","link":"https://leetcode.com/problems/rabbits-in-forest/description/","percent":49.74504249291785,"level":"Medium","category":"algorithms","totalAC":"8.8K","totalSubmit":"17.7K","desc":"In a forest, each rabbit has some color. Some subset of rabbits (possibly all of them) tell you how many other rabbits have the same color as them. Those answers are placed in an array.\r\n\r\nReturn the minimum number of rabbits that could be in the forest.\r\n\r\n\r\nExamples:\r\nInput: answers = [1, 1, 2]\r\nOutput: 5\r\nExplanation:\r\nThe two rabbits that answered \"1\" could both be the same color, say red.\r\nThe rabbit than answered \"2\" can't be red or the answers would be inconsistent.\r\nSay the rabbit that answered \"2\" was blue.\r\nThen there should be 2 other blue rabbits in the forest that didn't answer into the array.\r\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn't.\r\n\r\nInput: answers = [10, 10, 10]\r\nOutput: 11\r\n\r\nInput: answers = []\r\nOutput: 0\r\n\r\n\r\nNote:\r\n\r\n\r\n\tanswers will have length at most 1000.\r\n\tEach answers[i] will be an integer in the range [0, 999].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int numRabbits(vector<int>& answers) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int numRabbits(int[] answers) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numRabbits(self, answers):\n        \"\"\"\n        :type answers: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numRabbits(self, answers):\n        \"\"\"\n        :type answers: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"int numRabbits(int* answers, int answersSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NumRabbits(int[] answers) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} answers\n * @return {number}\n */\nvar numRabbits = function(answers) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} answers\n# @return {Integer}\ndef num_rabbits(answers)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numRabbits(_ answers: [Int]) -> Int {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func numRabbits(answers []int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numRabbits(answers: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numRabbits(answers: IntArray): Int {\n        \n    }\n}"}],"testcase":"[1,0,1,0,0]","testable":true,"templateMeta":{"name":"numRabbits","params":[{"name":"answers","type":"integer[]"}],"return":{"type":"integer"}}}
{"id":717,"fid":717,"name":"1-bit and 2-bit Characters","slug":"1-bit-and-2-bit-characters","link":"https://leetcode.com/problems/1-bit-and-2-bit-characters/description/","percent":48.53725790924962,"level":"Easy","category":"algorithms","totalAC":"29.7K","totalSubmit":"61.3K","desc":"We have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11).  \r\n\r\nNow given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero.\r\n\r\nExample 1:\r\n\r\nInput: \r\nbits = [1, 0, 0]\r\nOutput: True\r\nExplanation: \r\nThe only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \r\nbits = [1, 1, 1, 0]\r\nOutput: False\r\nExplanation: \r\nThe only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.\r\n\r\n\r\n\r\nNote:\r\n1 .\r\nbits[i] is always 0 or 1.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isOneBitCharacter(vector<int>& bits) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isOneBitCharacter(int[] bits) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isOneBitCharacter(self, bits):\n        \"\"\"\n        :type bits: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isOneBitCharacter(self, bits):\n        \"\"\"\n        :type bits: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"bool isOneBitCharacter(int* bits, int bitsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsOneBitCharacter(int[] bits) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} bits\n * @return {boolean}\n */\nvar isOneBitCharacter = function(bits) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} bits\n# @return {Boolean}\ndef is_one_bit_character(bits)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isOneBitCharacter(_ bits: [Int]) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isOneBitCharacter(bits []int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isOneBitCharacter(bits: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isOneBitCharacter(bits: IntArray): Boolean {\n        \n    }\n}"}],"testcase":"[1,0,0]","testable":true,"templateMeta":{"name":"isOneBitCharacter","params":[{"name":"bits","type":"integer[]"}],"return":{"type":"boolean"}}}
{"id":242,"fid":242,"name":"Valid Anagram","slug":"valid-anagram","link":"https://leetcode.com/problems/valid-anagram/description/","percent":49.34361215194841,"level":"Easy","category":"algorithms","totalAC":"261.5K","totalSubmit":"530K","desc":"Given two strings s and tÂ , write a function to determine if t is an anagram of s.\r\n\r\nExample 1:\r\n\r\n\r\nInput: s = \"anagram\", t = \"nagaram\"\r\nOutput: true\r\n\r\n\r\nExample 2:\r\n\r\n\r\nInput: s = \"rat\", t = \"car\"\r\nOutput: false\r\n\r\n\r\nNote:\r\nYou may assume the string contains only lowercase alphabets.\r\n\r\nFollow up:\r\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool isAnagram(string s, string t) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public boolean isAnagram(String s, String t) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def isAnagram(self, s, t):\r\n        \"\"\"\r\n        :type s: str\r\n        :type t: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\r\n    def isAnagram(self, s, t):\r\n        \"\"\"\r\n        :type s: str\r\n        :type t: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool isAnagram(char* s, char* t) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool IsAnagram(string s, string t) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {string} s\r\n * @param {string} t\r\n * @return {boolean}\r\n */\r\nvar isAnagram = function(s, t) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\r\n# @param {String} t\r\n# @return {Boolean}\r\ndef is_anagram(s, t)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isAnagram(_ s: String, _ t: String) -> Bool {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isAnagram(s string, t string) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def isAnagram(s: String, t: String): Boolean = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\r\n    fun isAnagram(s: String, t: String): Boolean {\r\n        \r\n    }\r\n}"}],"testcase":"\"anagram\"\n\"nagaram\"","testable":true,"templateMeta":{"name":"isAnagram","params":[{"name":"s","type":"string"},{"name":"t","type":"string"}],"return":{"type":"boolean"}}}